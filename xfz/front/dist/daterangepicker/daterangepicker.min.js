/**
* @version: 3.0.5
* @author: Dan Grossman http://www.dangrossman.info/
* @copyright: Copyright (c) 2012-2019 Dan Grossman. All rights reserved.
* @license: Licensed under the MIT license. See http://www.opensource.org/licenses/mit-license.php
* @website: http://www.daterangepicker.com/
*/
!function(t,e){if("function"==typeof define&&define.amd)define(["moment","jquery"],(function(t,a){return a.fn||(a.fn={}),"function"!=typeof t&&t.default&&(t=t.default),e(t,a)}));else if("object"==typeof module&&module.exports){var a="undefined"!=typeof window?window.jQuery:void 0;a||(a=require("jquery")).fn||(a.fn={});var i="undefined"!=typeof window&&void 0!==window.moment?window.moment:require("moment");module.exports=e(i,a)}else t.daterangepicker=e(t.moment,t.jQuery)}(this,(function(t,e){var a=function(a,i,s){if(this.parentEl="body",this.element=e(a),this.startDate=t().startOf("day"),this.endDate=t().endOf("day"),this.minDate=!1,this.maxDate=!1,this.maxSpan=!1,this.autoApply=!1,this.singleDatePicker=!1,this.showDropdowns=!1,this.minYear=t().subtract(100,"year").format("YYYY"),this.maxYear=t().add(100,"year").format("YYYY"),this.showWeekNumbers=!1,this.showISOWeekNumbers=!1,this.showCustomRangeLabel=!0,this.timePicker=!1,this.timePicker24Hour=!1,this.timePickerIncrement=1,this.timePickerSeconds=!1,this.linkedCalendars=!0,this.autoUpdateInput=!0,this.alwaysShowCalendars=!1,this.ranges={},this.opens="right",this.element.hasClass("pull-right")&&(this.opens="left"),this.drops="down",this.element.hasClass("dropup")&&(this.drops="up"),this.buttonClasses="btn btn-sm",this.applyButtonClasses="btn-primary",this.cancelButtonClasses="btn-default",this.locale={direction:"ltr",format:t.localeData().longDateFormat("L"),separator:" - ",applyLabel:"Apply",cancelLabel:"Cancel",weekLabel:"W",customRangeLabel:"Custom Range",daysOfWeek:t.weekdaysMin(),monthNames:t.monthsShort(),firstDay:t.localeData().firstDayOfWeek()},this.callback=function(){},this.isShowing=!1,this.leftCalendar={},this.rightCalendar={},"object"==typeof i&&null!==i||(i={}),"string"==typeof(i=e.extend(this.element.data(),i)).template||i.template instanceof e||(i.template='<div class="daterangepicker"><div class="ranges"></div><div class="drp-calendar left"><div class="calendar-table"></div><div class="calendar-time"></div></div><div class="drp-calendar right"><div class="calendar-table"></div><div class="calendar-time"></div></div><div class="drp-buttons"><span class="drp-selected"></span><button class="cancelBtn" type="button"></button><button class="applyBtn" disabled="disabled" type="button"></button> </div></div>'),this.parentEl=i.parentEl&&e(i.parentEl).length?e(i.parentEl):e(this.parentEl),this.container=e(i.template).appendTo(this.parentEl),"object"==typeof i.locale&&("string"==typeof i.locale.direction&&(this.locale.direction=i.locale.direction),"string"==typeof i.locale.format&&(this.locale.format=i.locale.format),"string"==typeof i.locale.separator&&(this.locale.separator=i.locale.separator),"object"==typeof i.locale.daysOfWeek&&(this.locale.daysOfWeek=i.locale.daysOfWeek.slice()),"object"==typeof i.locale.monthNames&&(this.locale.monthNames=i.locale.monthNames.slice()),"number"==typeof i.locale.firstDay&&(this.locale.firstDay=i.locale.firstDay),"string"==typeof i.locale.applyLabel&&(this.locale.applyLabel=i.locale.applyLabel),"string"==typeof i.locale.cancelLabel&&(this.locale.cancelLabel=i.locale.cancelLabel),"string"==typeof i.locale.weekLabel&&(this.locale.weekLabel=i.locale.weekLabel),"string"==typeof i.locale.customRangeLabel)){(f=document.createElement("textarea")).innerHTML=i.locale.customRangeLabel;var n=f.value;this.locale.customRangeLabel=n}if(this.container.addClass(this.locale.direction),"string"==typeof i.startDate&&(this.startDate=t(i.startDate,this.locale.format)),"string"==typeof i.endDate&&(this.endDate=t(i.endDate,this.locale.format)),"string"==typeof i.minDate&&(this.minDate=t(i.minDate,this.locale.format)),"string"==typeof i.maxDate&&(this.maxDate=t(i.maxDate,this.locale.format)),"object"==typeof i.startDate&&(this.startDate=t(i.startDate)),"object"==typeof i.endDate&&(this.endDate=t(i.endDate)),"object"==typeof i.minDate&&(this.minDate=t(i.minDate)),"object"==typeof i.maxDate&&(this.maxDate=t(i.maxDate)),this.minDate&&this.startDate.isBefore(this.minDate)&&(this.startDate=this.minDate.clone()),this.maxDate&&this.endDate.isAfter(this.maxDate)&&(this.endDate=this.maxDate.clone()),"string"==typeof i.applyButtonClasses&&(this.applyButtonClasses=i.applyButtonClasses),"string"==typeof i.applyClass&&(this.applyButtonClasses=i.applyClass),"string"==typeof i.cancelButtonClasses&&(this.cancelButtonClasses=i.cancelButtonClasses),"string"==typeof i.cancelClass&&(this.cancelButtonClasses=i.cancelClass),"object"==typeof i.maxSpan&&(this.maxSpan=i.maxSpan),"object"==typeof i.dateLimit&&(this.maxSpan=i.dateLimit),"string"==typeof i.opens&&(this.opens=i.opens),"string"==typeof i.drops&&(this.drops=i.drops),"boolean"==typeof i.showWeekNumbers&&(this.showWeekNumbers=i.showWeekNumbers),"boolean"==typeof i.showISOWeekNumbers&&(this.showISOWeekNumbers=i.showISOWeekNumbers),"string"==typeof i.buttonClasses&&(this.buttonClasses=i.buttonClasses),"object"==typeof i.buttonClasses&&(this.buttonClasses=i.buttonClasses.join(" ")),"boolean"==typeof i.showDropdowns&&(this.showDropdowns=i.showDropdowns),"number"==typeof i.minYear&&(this.minYear=i.minYear),"number"==typeof i.maxYear&&(this.maxYear=i.maxYear),"boolean"==typeof i.showCustomRangeLabel&&(this.showCustomRangeLabel=i.showCustomRangeLabel),"boolean"==typeof i.singleDatePicker&&(this.singleDatePicker=i.singleDatePicker,this.singleDatePicker&&(this.endDate=this.startDate.clone())),"boolean"==typeof i.timePicker&&(this.timePicker=i.timePicker),"boolean"==typeof i.timePickerSeconds&&(this.timePickerSeconds=i.timePickerSeconds),"number"==typeof i.timePickerIncrement&&(this.timePickerIncrement=i.timePickerIncrement),"boolean"==typeof i.timePicker24Hour&&(this.timePicker24Hour=i.timePicker24Hour),"boolean"==typeof i.autoApply&&(this.autoApply=i.autoApply),"boolean"==typeof i.autoUpdateInput&&(this.autoUpdateInput=i.autoUpdateInput),"boolean"==typeof i.linkedCalendars&&(this.linkedCalendars=i.linkedCalendars),"function"==typeof i.isInvalidDate&&(this.isInvalidDate=i.isInvalidDate),"function"==typeof i.isCustomDate&&(this.isCustomDate=i.isCustomDate),"boolean"==typeof i.alwaysShowCalendars&&(this.alwaysShowCalendars=i.alwaysShowCalendars),0!=this.locale.firstDay)for(var r=this.locale.firstDay;r>0;)this.locale.daysOfWeek.push(this.locale.daysOfWeek.shift()),r--;var o,l,h;if(void 0===i.startDate&&void 0===i.endDate&&e(this.element).is(":text")){var c=e(this.element).val(),d=c.split(this.locale.separator);o=l=null,2==d.length?(o=t(d[0],this.locale.format),l=t(d[1],this.locale.format)):this.singleDatePicker&&""!==c&&(o=t(c,this.locale.format),l=t(c,this.locale.format)),null!==o&&null!==l&&(this.setStartDate(o),this.setEndDate(l))}if("object"==typeof i.ranges){for(h in i.ranges){o="string"==typeof i.ranges[h][0]?t(i.ranges[h][0],this.locale.format):t(i.ranges[h][0]),l="string"==typeof i.ranges[h][1]?t(i.ranges[h][1],this.locale.format):t(i.ranges[h][1]),this.minDate&&o.isBefore(this.minDate)&&(o=this.minDate.clone());var m=this.maxDate;if(this.maxSpan&&m&&o.clone().add(this.maxSpan).isAfter(m)&&(m=o.clone().add(this.maxSpan)),m&&l.isAfter(m)&&(l=m.clone()),!(this.minDate&&l.isBefore(this.minDate,this.timepicker?"minute":"day")||m&&o.isAfter(m,this.timepicker?"minute":"day"))){var f;(f=document.createElement("textarea")).innerHTML=h;n=f.value;this.ranges[n]=[o,l]}}var p="<ul>";for(h in this.ranges)p+='<li data-range-key="'+h+'">'+h+"</li>";this.showCustomRangeLabel&&(p+='<li data-range-key="'+this.locale.customRangeLabel+'">'+this.locale.customRangeLabel+"</li>"),p+="</ul>",this.container.find(".ranges").prepend(p)}"function"==typeof s&&(this.callback=s),this.timePicker||(this.startDate=this.startDate.startOf("day"),this.endDate=this.endDate.endOf("day"),this.container.find(".calendar-time").hide()),this.timePicker&&this.autoApply&&(this.autoApply=!1),this.autoApply&&this.container.addClass("auto-apply"),"object"==typeof i.ranges&&this.container.addClass("show-ranges"),this.singleDatePicker&&(this.container.addClass("single"),this.container.find(".drp-calendar.left").addClass("single"),this.container.find(".drp-calendar.left").show(),this.container.find(".drp-calendar.right").hide(),this.timePicker||this.container.addClass("auto-apply")),(void 0===i.ranges&&!this.singleDatePicker||this.alwaysShowCalendars)&&this.container.addClass("show-calendar"),this.container.addClass("opens"+this.opens),this.container.find(".applyBtn, .cancelBtn").addClass(this.buttonClasses),this.applyButtonClasses.length&&this.container.find(".applyBtn").addClass(this.applyButtonClasses),this.cancelButtonClasses.length&&this.container.find(".cancelBtn").addClass(this.cancelButtonClasses),this.container.find(".applyBtn").html(this.locale.applyLabel),this.container.find(".cancelBtn").html(this.locale.cancelLabel),this.container.find(".drp-calendar").on("click.daterangepicker",".prev",e.proxy(this.clickPrev,this)).on("click.daterangepicker",".next",e.proxy(this.clickNext,this)).on("mousedown.daterangepicker","td.available",e.proxy(this.clickDate,this)).on("mouseenter.daterangepicker","td.available",e.proxy(this.hoverDate,this)).on("change.daterangepicker","select.yearselect",e.proxy(this.monthOrYearChanged,this)).on("change.daterangepicker","select.monthselect",e.proxy(this.monthOrYearChanged,this)).on("change.daterangepicker","select.hourselect,select.minuteselect,select.secondselect,select.ampmselect",e.proxy(this.timeChanged,this)),this.container.find(".ranges").on("click.daterangepicker","li",e.proxy(this.clickRange,this)),this.container.find(".drp-buttons").on("click.daterangepicker","button.applyBtn",e.proxy(this.clickApply,this)).on("click.daterangepicker","button.cancelBtn",e.proxy(this.clickCancel,this)),this.element.is("input")||this.element.is("button")?this.element.on({"click.daterangepicker":e.proxy(this.show,this),"focus.daterangepicker":e.proxy(this.show,this),"keyup.daterangepicker":e.proxy(this.elementChanged,this),"keydown.daterangepicker":e.proxy(this.keydown,this)}):(this.element.on("click.daterangepicker",e.proxy(this.toggle,this)),this.element.on("keydown.daterangepicker",e.proxy(this.toggle,this))),this.updateElement()};return a.prototype={constructor:a,setStartDate:function(e){"string"==typeof e&&(this.startDate=t(e,this.locale.format)),"object"==typeof e&&(this.startDate=t(e)),this.timePicker||(this.startDate=this.startDate.startOf("day")),this.timePicker&&this.timePickerIncrement&&this.startDate.minute(Math.round(this.startDate.minute()/this.timePickerIncrement)*this.timePickerIncrement),this.minDate&&this.startDate.isBefore(this.minDate)&&(this.startDate=this.minDate.clone(),this.timePicker&&this.timePickerIncrement&&this.startDate.minute(Math.round(this.startDate.minute()/this.timePickerIncrement)*this.timePickerIncrement)),this.maxDate&&this.startDate.isAfter(this.maxDate)&&(this.startDate=this.maxDate.clone(),this.timePicker&&this.timePickerIncrement&&this.startDate.minute(Math.floor(this.startDate.minute()/this.timePickerIncrement)*this.timePickerIncrement)),this.isShowing||this.updateElement(),this.updateMonthsInView()},setEndDate:function(e){"string"==typeof e&&(this.endDate=t(e,this.locale.format)),"object"==typeof e&&(this.endDate=t(e)),this.timePicker||(this.endDate=this.endDate.endOf("day")),this.timePicker&&this.timePickerIncrement&&this.endDate.minute(Math.round(this.endDate.minute()/this.timePickerIncrement)*this.timePickerIncrement),this.endDate.isBefore(this.startDate)&&(this.endDate=this.startDate.clone()),this.maxDate&&this.endDate.isAfter(this.maxDate)&&(this.endDate=this.maxDate.clone()),this.maxSpan&&this.startDate.clone().add(this.maxSpan).isBefore(this.endDate)&&(this.endDate=this.startDate.clone().add(this.maxSpan)),this.previousRightTime=this.endDate.clone(),this.container.find(".drp-selected").html(this.startDate.format(this.locale.format)+this.locale.separator+this.endDate.format(this.locale.format)),this.isShowing||this.updateElement(),this.updateMonthsInView()},isInvalidDate:function(){return!1},isCustomDate:function(){return!1},updateView:function(){this.timePicker&&(this.renderTimePicker("left"),this.renderTimePicker("right"),this.endDate?this.container.find(".right .calendar-time select").removeAttr("disabled").removeClass("disabled"):this.container.find(".right .calendar-time select").attr("disabled","disabled").addClass("disabled")),this.endDate&&this.container.find(".drp-selected").html(this.startDate.format(this.locale.format)+this.locale.separator+this.endDate.format(this.locale.format)),this.updateMonthsInView(),this.updateCalendars(),this.updateFormInputs()},updateMonthsInView:function(){if(this.endDate){if(!this.singleDatePicker&&this.leftCalendar.month&&this.rightCalendar.month&&(this.startDate.format("YYYY-MM")==this.leftCalendar.month.format("YYYY-MM")||this.startDate.format("YYYY-MM")==this.rightCalendar.month.format("YYYY-MM"))&&(this.endDate.format("YYYY-MM")==this.leftCalendar.month.format("YYYY-MM")||this.endDate.format("YYYY-MM")==this.rightCalendar.month.format("YYYY-MM")))return;this.leftCalendar.month=this.startDate.clone().date(2),this.linkedCalendars||this.endDate.month()==this.startDate.month()&&this.endDate.year()==this.startDate.year()?this.rightCalendar.month=this.startDate.clone().date(2).add(1,"month"):this.rightCalendar.month=this.endDate.clone().date(2)}else this.leftCalendar.month.format("YYYY-MM")!=this.startDate.format("YYYY-MM")&&this.rightCalendar.month.format("YYYY-MM")!=this.startDate.format("YYYY-MM")&&(this.leftCalendar.month=this.startDate.clone().date(2),this.rightCalendar.month=this.startDate.clone().date(2).add(1,"month"));this.maxDate&&this.linkedCalendars&&!this.singleDatePicker&&this.rightCalendar.month>this.maxDate&&(this.rightCalendar.month=this.maxDate.clone().date(2),this.leftCalendar.month=this.maxDate.clone().date(2).subtract(1,"month"))},updateCalendars:function(){if(this.timePicker){var t,e,a,i;if(this.endDate){if(t=parseInt(this.container.find(".left .hourselect").val(),10),e=parseInt(this.container.find(".left .minuteselect").val(),10),isNaN(e)&&(e=parseInt(this.container.find(".left .minuteselect option:last").val(),10)),a=this.timePickerSeconds?parseInt(this.container.find(".left .secondselect").val(),10):0,!this.timePicker24Hour)"PM"===(i=this.container.find(".left .ampmselect").val())&&t<12&&(t+=12),"AM"===i&&12===t&&(t=0)}else if(t=parseInt(this.container.find(".right .hourselect").val(),10),e=parseInt(this.container.find(".right .minuteselect").val(),10),isNaN(e)&&(e=parseInt(this.container.find(".right .minuteselect option:last").val(),10)),a=this.timePickerSeconds?parseInt(this.container.find(".right .secondselect").val(),10):0,!this.timePicker24Hour)"PM"===(i=this.container.find(".right .ampmselect").val())&&t<12&&(t+=12),"AM"===i&&12===t&&(t=0);this.leftCalendar.month.hour(t).minute(e).second(a),this.rightCalendar.month.hour(t).minute(e).second(a)}this.renderCalendar("left"),this.renderCalendar("right"),this.container.find(".ranges li").removeClass("active"),null!=this.endDate&&this.calculateChosenLabel()},renderCalendar:function(a){var i,s=(i="left"==a?this.leftCalendar:this.rightCalendar).month.month(),n=i.month.year(),r=i.month.hour(),o=i.month.minute(),l=i.month.second(),h=t([n,s]).daysInMonth(),c=t([n,s,1]),d=t([n,s,h]),m=t(c).subtract(1,"month").month(),f=t(c).subtract(1,"month").year(),p=t([f,m]).daysInMonth(),u=c.day();(i=[]).firstDay=c,i.lastDay=d;for(var D=0;D<6;D++)i[D]=[];var g=p-u+this.locale.firstDay+1;g>p&&(g-=7),u==this.locale.firstDay&&(g=p-6);for(var y=t([f,m,g,12,o,l]),k=(D=0,0),b=0;D<42;D++,k++,y=t(y).add(24,"hour"))D>0&&k%7==0&&(k=0,b++),i[b][k]=y.clone().hour(r).minute(o).second(l),y.hour(12),this.minDate&&i[b][k].format("YYYY-MM-DD")==this.minDate.format("YYYY-MM-DD")&&i[b][k].isBefore(this.minDate)&&"left"==a&&(i[b][k]=this.minDate.clone()),this.maxDate&&i[b][k].format("YYYY-MM-DD")==this.maxDate.format("YYYY-MM-DD")&&i[b][k].isAfter(this.maxDate)&&"right"==a&&(i[b][k]=this.maxDate.clone());"left"==a?this.leftCalendar.calendar=i:this.rightCalendar.calendar=i;var v="left"==a?this.minDate:this.startDate,C=this.maxDate,Y=("left"==a?this.startDate:this.endDate,this.locale.direction,'<table class="table-condensed">');Y+="<thead>",Y+="<tr>",(this.showWeekNumbers||this.showISOWeekNumbers)&&(Y+="<th></th>"),v&&!v.isBefore(i.firstDay)||this.linkedCalendars&&"left"!=a?Y+="<th></th>":Y+='<th class="prev available"><span></span></th>';var w=this.locale.monthNames[i[1][1].month()]+i[1][1].format(" YYYY");if(this.showDropdowns){for(var P=i[1][1].month(),x=i[1][1].year(),M=C&&C.year()||this.maxYear,I=v&&v.year()||this.minYear,S=x==I,B=x==M,A='<select class="monthselect">',L=0;L<12;L++)(!S||v&&L>=v.month())&&(!B||C&&L<=C.month())?A+="<option value='"+L+"'"+(L===P?" selected='selected'":"")+">"+this.locale.monthNames[L]+"</option>":A+="<option value='"+L+"'"+(L===P?" selected='selected'":"")+" disabled='disabled'>"+this.locale.monthNames[L]+"</option>";A+="</select>";for(var N='<select class="yearselect">',E=I;E<=M;E++)N+='<option value="'+E+'"'+(E===x?' selected="selected"':"")+">"+E+"</option>";w=A+(N+="</select>")}if(Y+='<th colspan="5" class="month">'+w+"</th>",C&&!C.isAfter(i.lastDay)||this.linkedCalendars&&"right"!=a&&!this.singleDatePicker?Y+="<th></th>":Y+='<th class="next available"><span></span></th>',Y+="</tr>",Y+="<tr>",(this.showWeekNumbers||this.showISOWeekNumbers)&&(Y+='<th class="week">'+this.locale.weekLabel+"</th>"),e.each(this.locale.daysOfWeek,(function(t,e){Y+="<th>"+e+"</th>"})),Y+="</tr>",Y+="</thead>",Y+="<tbody>",null==this.endDate&&this.maxSpan){var W=this.startDate.clone().add(this.maxSpan).endOf("day");C&&!W.isBefore(C)||(C=W)}for(b=0;b<6;b++){Y+="<tr>",this.showWeekNumbers?Y+='<td class="week">'+i[b][0].week()+"</td>":this.showISOWeekNumbers&&(Y+='<td class="week">'+i[b][0].isoWeek()+"</td>");for(k=0;k<7;k++){var O=[];i[b][k].isSame(new Date,"day")&&O.push("today"),i[b][k].isoWeekday()>5&&O.push("weekend"),i[b][k].month()!=i[1][1].month()&&O.push("off","ends"),this.minDate&&i[b][k].isBefore(this.minDate,"day")&&O.push("off","disabled"),C&&i[b][k].isAfter(C,"day")&&O.push("off","disabled"),this.isInvalidDate(i[b][k])&&O.push("off","disabled"),i[b][k].format("YYYY-MM-DD")==this.startDate.format("YYYY-MM-DD")&&O.push("active","start-date"),null!=this.endDate&&i[b][k].format("YYYY-MM-DD")==this.endDate.format("YYYY-MM-DD")&&O.push("active","end-date"),null!=this.endDate&&i[b][k]>this.startDate&&i[b][k]<this.endDate&&O.push("in-range");var H=this.isCustomDate(i[b][k]);!1!==H&&("string"==typeof H?O.push(H):Array.prototype.push.apply(O,H));var j="",R=!1;for(D=0;D<O.length;D++)j+=O[D]+" ","disabled"==O[D]&&(R=!0);R||(j+="available"),Y+='<td class="'+j.replace(/^\s+|\s+$/g,"")+'" data-title="r'+b+"c"+k+'">'+i[b][k].date()+"</td>"}Y+="</tr>"}Y+="</tbody>",Y+="</table>",this.container.find(".drp-calendar."+a+" .calendar-table").html(Y)},renderTimePicker:function(t){if("right"!=t||this.endDate){var e,a,i,s=this.maxDate;if(!this.maxSpan||this.maxDate&&!this.startDate.clone().add(this.maxSpan).isBefore(this.maxDate)||(s=this.startDate.clone().add(this.maxSpan)),"left"==t)a=this.startDate.clone(),i=this.minDate;else if("right"==t){a=this.endDate.clone(),i=this.startDate;var n=this.container.find(".drp-calendar.right .calendar-time");if(""!=n.html()&&(a.hour(isNaN(a.hour())?n.find(".hourselect option:selected").val():a.hour()),a.minute(isNaN(a.minute())?n.find(".minuteselect option:selected").val():a.minute()),a.second(isNaN(a.second())?n.find(".secondselect option:selected").val():a.second()),!this.timePicker24Hour)){var r=n.find(".ampmselect option:selected").val();"PM"===r&&a.hour()<12&&a.hour(a.hour()+12),"AM"===r&&12===a.hour()&&a.hour(0)}a.isBefore(this.startDate)&&(a=this.startDate.clone()),s&&a.isAfter(s)&&(a=s.clone())}e='<select class="hourselect">';for(var o=this.timePicker24Hour?0:1,l=this.timePicker24Hour?23:12,h=o;h<=l;h++){var c=h;this.timePicker24Hour||(c=a.hour()>=12?12==h?12:h+12:12==h?0:h);var d=a.clone().hour(c),m=!1;i&&d.minute(59).isBefore(i)&&(m=!0),s&&d.minute(0).isAfter(s)&&(m=!0),c!=a.hour()||m?e+=m?'<option value="'+h+'" disabled="disabled" class="disabled">'+h+"</option>":'<option value="'+h+'">'+h+"</option>":e+='<option value="'+h+'" selected="selected">'+h+"</option>"}e+="</select> ",e+=': <select class="minuteselect">';for(h=0;h<60;h+=this.timePickerIncrement){var f=h<10?"0"+h:h;d=a.clone().minute(h),m=!1;i&&d.second(59).isBefore(i)&&(m=!0),s&&d.second(0).isAfter(s)&&(m=!0),a.minute()!=h||m?e+=m?'<option value="'+h+'" disabled="disabled" class="disabled">'+f+"</option>":'<option value="'+h+'">'+f+"</option>":e+='<option value="'+h+'" selected="selected">'+f+"</option>"}if(e+="</select> ",this.timePickerSeconds){e+=': <select class="secondselect">';for(h=0;h<60;h++){f=h<10?"0"+h:h,d=a.clone().second(h),m=!1;i&&d.isBefore(i)&&(m=!0),s&&d.isAfter(s)&&(m=!0),a.second()!=h||m?e+=m?'<option value="'+h+'" disabled="disabled" class="disabled">'+f+"</option>":'<option value="'+h+'">'+f+"</option>":e+='<option value="'+h+'" selected="selected">'+f+"</option>"}e+="</select> "}if(!this.timePicker24Hour){e+='<select class="ampmselect">';var p="",u="";i&&a.clone().hour(12).minute(0).second(0).isBefore(i)&&(p=' disabled="disabled" class="disabled"'),s&&a.clone().hour(0).minute(0).second(0).isAfter(s)&&(u=' disabled="disabled" class="disabled"'),a.hour()>=12?e+='<option value="AM"'+p+'>AM</option><option value="PM" selected="selected"'+u+">PM</option>":e+='<option value="AM" selected="selected"'+p+'>AM</option><option value="PM"'+u+">PM</option>",e+="</select>"}this.container.find(".drp-calendar."+t+" .calendar-time").html(e)}},updateFormInputs:function(){this.singleDatePicker||this.endDate&&(this.startDate.isBefore(this.endDate)||this.startDate.isSame(this.endDate))?this.container.find("button.applyBtn").removeAttr("disabled"):this.container.find("button.applyBtn").attr("disabled","disabled")},move:function(){var t,a={top:0,left:0},i=e(window).width();this.parentEl.is("body")||(a={top:this.parentEl.offset().top-this.parentEl.scrollTop(),left:this.parentEl.offset().left-this.parentEl.scrollLeft()},i=this.parentEl[0].clientWidth+this.parentEl.offset().left),t="up"==this.drops?this.element.offset().top-this.container.outerHeight()-a.top:this.element.offset().top+this.element.outerHeight()-a.top,this.container.css({top:0,left:0,right:"auto"});var s=this.container.outerWidth();if(this.container["up"==this.drops?"addClass":"removeClass"]("drop-up"),"left"==this.opens){var n=i-this.element.offset().left-this.element.outerWidth();s+n>e(window).width()?this.container.css({top:t,right:"auto",left:9}):this.container.css({top:t,right:n,left:"auto"})}else if("center"==this.opens){(r=this.element.offset().left-a.left+this.element.outerWidth()/2-s/2)<0?this.container.css({top:t,right:"auto",left:9}):r+s>e(window).width()?this.container.css({top:t,left:"auto",right:0}):this.container.css({top:t,left:r,right:"auto"})}else{var r;(r=this.element.offset().left-a.left)+s>e(window).width()?this.container.css({top:t,left:"auto",right:0}):this.container.css({top:t,left:r,right:"auto"})}},show:function(t){this.isShowing||(this._outsideClickProxy=e.proxy((function(t){this.outsideClick(t)}),this),e(document).on("mousedown.daterangepicker",this._outsideClickProxy).on("touchend.daterangepicker",this._outsideClickProxy).on("click.daterangepicker","[data-toggle=dropdown]",this._outsideClickProxy).on("focusin.daterangepicker",this._outsideClickProxy),e(window).on("resize.daterangepicker",e.proxy((function(t){this.move(t)}),this)),this.oldStartDate=this.startDate.clone(),this.oldEndDate=this.endDate.clone(),this.previousRightTime=this.endDate.clone(),this.updateView(),this.container.show(),this.move(),this.element.trigger("show.daterangepicker",this),this.isShowing=!0)},hide:function(t){this.isShowing&&(this.endDate||(this.startDate=this.oldStartDate.clone(),this.endDate=this.oldEndDate.clone()),this.startDate.isSame(this.oldStartDate)&&this.endDate.isSame(this.oldEndDate)||this.callback(this.startDate.clone(),this.endDate.clone(),this.chosenLabel),this.updateElement(),e(document).off(".daterangepicker"),e(window).off(".daterangepicker"),this.container.hide(),this.element.trigger("hide.daterangepicker",this),this.isShowing=!1)},toggle:function(t){this.isShowing?this.hide():this.show()},outsideClick:function(t){var a=e(t.target);"focusin"==t.type||a.closest(this.element).length||a.closest(this.container).length||a.closest(".calendar-table").length||(this.hide(),this.element.trigger("outsideClick.daterangepicker",this))},showCalendars:function(){this.container.addClass("show-calendar"),this.move(),this.element.trigger("showCalendar.daterangepicker",this)},hideCalendars:function(){this.container.removeClass("show-calendar"),this.element.trigger("hideCalendar.daterangepicker",this)},clickRange:function(t){var e=t.target.getAttribute("data-range-key");if(this.chosenLabel=e,e==this.locale.customRangeLabel)this.showCalendars();else{var a=this.ranges[e];this.startDate=a[0],this.endDate=a[1],this.timePicker||(this.startDate.startOf("day"),this.endDate.endOf("day")),this.alwaysShowCalendars||this.hideCalendars(),this.clickApply()}},clickPrev:function(t){e(t.target).parents(".drp-calendar").hasClass("left")?(this.leftCalendar.month.subtract(1,"month"),this.linkedCalendars&&this.rightCalendar.month.subtract(1,"month")):this.rightCalendar.month.subtract(1,"month"),this.updateCalendars()},clickNext:function(t){e(t.target).parents(".drp-calendar").hasClass("left")?this.leftCalendar.month.add(1,"month"):(this.rightCalendar.month.add(1,"month"),this.linkedCalendars&&this.leftCalendar.month.add(1,"month")),this.updateCalendars()},hoverDate:function(t){if(e(t.target).hasClass("available")){var a=e(t.target).attr("data-title"),i=a.substr(1,1),s=a.substr(3,1),n=e(t.target).parents(".drp-calendar").hasClass("left")?this.leftCalendar.calendar[i][s]:this.rightCalendar.calendar[i][s],r=this.leftCalendar,o=this.rightCalendar,l=this.startDate;this.endDate||this.container.find(".drp-calendar tbody td").each((function(t,a){if(!e(a).hasClass("week")){var i=e(a).attr("data-title"),s=i.substr(1,1),h=i.substr(3,1),c=e(a).parents(".drp-calendar").hasClass("left")?r.calendar[s][h]:o.calendar[s][h];c.isAfter(l)&&c.isBefore(n)||c.isSame(n,"day")?e(a).addClass("in-range"):e(a).removeClass("in-range")}}))}},clickDate:function(t){if(e(t.target).hasClass("available")){var a=e(t.target).attr("data-title"),i=a.substr(1,1),s=a.substr(3,1),n=e(t.target).parents(".drp-calendar").hasClass("left")?this.leftCalendar.calendar[i][s]:this.rightCalendar.calendar[i][s];if(this.endDate||n.isBefore(this.startDate,"day")){if(this.timePicker){var r=parseInt(this.container.find(".left .hourselect").val(),10);if(!this.timePicker24Hour)"PM"===(h=this.container.find(".left .ampmselect").val())&&r<12&&(r+=12),"AM"===h&&12===r&&(r=0);var o=parseInt(this.container.find(".left .minuteselect").val(),10);isNaN(o)&&(o=parseInt(this.container.find(".left .minuteselect option:last").val(),10));var l=this.timePickerSeconds?parseInt(this.container.find(".left .secondselect").val(),10):0;n=n.clone().hour(r).minute(o).second(l)}this.endDate=null,this.setStartDate(n.clone())}else if(!this.endDate&&n.isBefore(this.startDate))this.setEndDate(this.startDate.clone());else{if(this.timePicker){var h;r=parseInt(this.container.find(".right .hourselect").val(),10);if(!this.timePicker24Hour)"PM"===(h=this.container.find(".right .ampmselect").val())&&r<12&&(r+=12),"AM"===h&&12===r&&(r=0);o=parseInt(this.container.find(".right .minuteselect").val(),10);isNaN(o)&&(o=parseInt(this.container.find(".right .minuteselect option:last").val(),10));l=this.timePickerSeconds?parseInt(this.container.find(".right .secondselect").val(),10):0;n=n.clone().hour(r).minute(o).second(l)}this.setEndDate(n.clone()),this.autoApply&&(this.calculateChosenLabel(),this.clickApply())}this.singleDatePicker&&(this.setEndDate(this.startDate),this.timePicker||this.clickApply()),this.updateView(),t.stopPropagation()}},calculateChosenLabel:function(){var t=!0,e=0;for(var a in this.ranges){if(this.timePicker){var i=this.timePickerSeconds?"YYYY-MM-DD HH:mm:ss":"YYYY-MM-DD HH:mm";if(this.startDate.format(i)==this.ranges[a][0].format(i)&&this.endDate.format(i)==this.ranges[a][1].format(i)){t=!1,this.chosenLabel=this.container.find(".ranges li:eq("+e+")").addClass("active").attr("data-range-key");break}}else if(this.startDate.format("YYYY-MM-DD")==this.ranges[a][0].format("YYYY-MM-DD")&&this.endDate.format("YYYY-MM-DD")==this.ranges[a][1].format("YYYY-MM-DD")){t=!1,this.chosenLabel=this.container.find(".ranges li:eq("+e+")").addClass("active").attr("data-range-key");break}e++}t&&(this.showCustomRangeLabel?this.chosenLabel=this.container.find(".ranges li:last").addClass("active").attr("data-range-key"):this.chosenLabel=null,this.showCalendars())},clickApply:function(t){this.hide(),this.element.trigger("apply.daterangepicker",this)},clickCancel:function(t){this.startDate=this.oldStartDate,this.endDate=this.oldEndDate,this.hide(),this.element.trigger("cancel.daterangepicker",this)},monthOrYearChanged:function(t){var a=e(t.target).closest(".drp-calendar").hasClass("left"),i=a?"left":"right",s=this.container.find(".drp-calendar."+i),n=parseInt(s.find(".monthselect").val(),10),r=s.find(".yearselect").val();a||(r<this.startDate.year()||r==this.startDate.year()&&n<this.startDate.month())&&(n=this.startDate.month(),r=this.startDate.year()),this.minDate&&(r<this.minDate.year()||r==this.minDate.year()&&n<this.minDate.month())&&(n=this.minDate.month(),r=this.minDate.year()),this.maxDate&&(r>this.maxDate.year()||r==this.maxDate.year()&&n>this.maxDate.month())&&(n=this.maxDate.month(),r=this.maxDate.year()),a?(this.leftCalendar.month.month(n).year(r),this.linkedCalendars&&(this.rightCalendar.month=this.leftCalendar.month.clone().add(1,"month"))):(this.rightCalendar.month.month(n).year(r),this.linkedCalendars&&(this.leftCalendar.month=this.rightCalendar.month.clone().subtract(1,"month"))),this.updateCalendars()},timeChanged:function(t){var a=e(t.target).closest(".drp-calendar"),i=a.hasClass("left"),s=parseInt(a.find(".hourselect").val(),10),n=parseInt(a.find(".minuteselect").val(),10);isNaN(n)&&(n=parseInt(a.find(".minuteselect option:last").val(),10));var r=this.timePickerSeconds?parseInt(a.find(".secondselect").val(),10):0;if(!this.timePicker24Hour){var o=a.find(".ampmselect").val();"PM"===o&&s<12&&(s+=12),"AM"===o&&12===s&&(s=0)}if(i){var l=this.startDate.clone();l.hour(s),l.minute(n),l.second(r),this.setStartDate(l),this.singleDatePicker?this.endDate=this.startDate.clone():this.endDate&&this.endDate.format("YYYY-MM-DD")==l.format("YYYY-MM-DD")&&this.endDate.isBefore(l)&&this.setEndDate(l.clone())}else if(this.endDate){var h=this.endDate.clone();h.hour(s),h.minute(n),h.second(r),this.setEndDate(h)}this.updateCalendars(),this.updateFormInputs(),this.renderTimePicker("left"),this.renderTimePicker("right")},elementChanged:function(){if(this.element.is("input")&&this.element.val().length){var e=this.element.val().split(this.locale.separator),a=null,i=null;2===e.length&&(a=t(e[0],this.locale.format),i=t(e[1],this.locale.format)),(this.singleDatePicker||null===a||null===i)&&(i=a=t(this.element.val(),this.locale.format)),a.isValid()&&i.isValid()&&(this.setStartDate(a),this.setEndDate(i),this.updateView())}},keydown:function(t){9!==t.keyCode&&13!==t.keyCode||this.hide(),27===t.keyCode&&(t.preventDefault(),t.stopPropagation(),this.hide())},updateElement:function(){if(this.element.is("input")&&this.autoUpdateInput){var t=this.startDate.format(this.locale.format);this.singleDatePicker||(t+=this.locale.separator+this.endDate.format(this.locale.format)),t!==this.element.val()&&this.element.val(t).trigger("change")}},remove:function(){this.container.remove(),this.element.off(".daterangepicker"),this.element.removeData()}},e.fn.daterangepicker=function(t,i){var s=e.extend(!0,{},e.fn.daterangepicker.defaultOptions,t);return this.each((function(){var t=e(this);t.data("daterangepicker")&&t.data("daterangepicker").remove(),t.data("daterangepicker",new a(t,s,i))})),this},a}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGVyYW5nZXBpY2tlci5qcyJdLCJuYW1lcyI6WyJyb290IiwiZmFjdG9yeSIsImRlZmluZSIsImFtZCIsIm1vbWVudCIsImpxdWVyeSIsImZuIiwiZGVmYXVsdCIsIm1vZHVsZSIsImV4cG9ydHMiLCJqUXVlcnkiLCJ3aW5kb3ciLCJ1bmRlZmluZWQiLCJyZXF1aXJlIiwiZGF0ZXJhbmdlcGlja2VyIiwidGhpcyIsIiQiLCJEYXRlUmFuZ2VQaWNrZXIiLCJlbGVtZW50Iiwib3B0aW9ucyIsImNiIiwicGFyZW50RWwiLCJzdGFydERhdGUiLCJzdGFydE9mIiwiZW5kRGF0ZSIsImVuZE9mIiwibWluRGF0ZSIsIm1heERhdGUiLCJtYXhTcGFuIiwiYXV0b0FwcGx5Iiwic2luZ2xlRGF0ZVBpY2tlciIsInNob3dEcm9wZG93bnMiLCJtaW5ZZWFyIiwic3VidHJhY3QiLCJmb3JtYXQiLCJtYXhZZWFyIiwiYWRkIiwic2hvd1dlZWtOdW1iZXJzIiwic2hvd0lTT1dlZWtOdW1iZXJzIiwic2hvd0N1c3RvbVJhbmdlTGFiZWwiLCJ0aW1lUGlja2VyIiwidGltZVBpY2tlcjI0SG91ciIsInRpbWVQaWNrZXJJbmNyZW1lbnQiLCJ0aW1lUGlja2VyU2Vjb25kcyIsImxpbmtlZENhbGVuZGFycyIsImF1dG9VcGRhdGVJbnB1dCIsImFsd2F5c1Nob3dDYWxlbmRhcnMiLCJyYW5nZXMiLCJvcGVucyIsImhhc0NsYXNzIiwiZHJvcHMiLCJidXR0b25DbGFzc2VzIiwiYXBwbHlCdXR0b25DbGFzc2VzIiwiY2FuY2VsQnV0dG9uQ2xhc3NlcyIsImxvY2FsZSIsImRpcmVjdGlvbiIsImxvY2FsZURhdGEiLCJsb25nRGF0ZUZvcm1hdCIsInNlcGFyYXRvciIsImFwcGx5TGFiZWwiLCJjYW5jZWxMYWJlbCIsIndlZWtMYWJlbCIsImN1c3RvbVJhbmdlTGFiZWwiLCJkYXlzT2ZXZWVrIiwid2Vla2RheXNNaW4iLCJtb250aE5hbWVzIiwibW9udGhzU2hvcnQiLCJmaXJzdERheSIsImZpcnN0RGF5T2ZXZWVrIiwiY2FsbGJhY2siLCJpc1Nob3dpbmciLCJsZWZ0Q2FsZW5kYXIiLCJyaWdodENhbGVuZGFyIiwiZXh0ZW5kIiwiZGF0YSIsInRlbXBsYXRlIiwibGVuZ3RoIiwiY29udGFpbmVyIiwiYXBwZW5kVG8iLCJzbGljZSIsImVsZW0iLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJpbm5lckhUTUwiLCJyYW5nZUh0bWwiLCJ2YWx1ZSIsImFkZENsYXNzIiwiaXNCZWZvcmUiLCJjbG9uZSIsImlzQWZ0ZXIiLCJhcHBseUNsYXNzIiwiY2FuY2VsQ2xhc3MiLCJkYXRlTGltaXQiLCJqb2luIiwiaXNJbnZhbGlkRGF0ZSIsImlzQ3VzdG9tRGF0ZSIsIml0ZXJhdG9yIiwicHVzaCIsInNoaWZ0Iiwic3RhcnQiLCJlbmQiLCJyYW5nZSIsImlzIiwidmFsIiwic3BsaXQiLCJzZXRTdGFydERhdGUiLCJzZXRFbmREYXRlIiwidGltZXBpY2tlciIsImxpc3QiLCJmaW5kIiwicHJlcGVuZCIsImhpZGUiLCJzaG93IiwiaHRtbCIsIm9uIiwicHJveHkiLCJjbGlja1ByZXYiLCJjbGlja05leHQiLCJjbGlja0RhdGUiLCJob3ZlckRhdGUiLCJtb250aE9yWWVhckNoYW5nZWQiLCJ0aW1lQ2hhbmdlZCIsImNsaWNrUmFuZ2UiLCJjbGlja0FwcGx5IiwiY2xpY2tDYW5jZWwiLCJjbGljay5kYXRlcmFuZ2VwaWNrZXIiLCJmb2N1cy5kYXRlcmFuZ2VwaWNrZXIiLCJrZXl1cC5kYXRlcmFuZ2VwaWNrZXIiLCJlbGVtZW50Q2hhbmdlZCIsImtleWRvd24uZGF0ZXJhbmdlcGlja2VyIiwia2V5ZG93biIsInRvZ2dsZSIsInVwZGF0ZUVsZW1lbnQiLCJwcm90b3R5cGUiLCJjb25zdHJ1Y3RvciIsIm1pbnV0ZSIsIk1hdGgiLCJyb3VuZCIsImZsb29yIiwidXBkYXRlTW9udGhzSW5WaWV3IiwicHJldmlvdXNSaWdodFRpbWUiLCJ1cGRhdGVWaWV3IiwicmVuZGVyVGltZVBpY2tlciIsInJlbW92ZUF0dHIiLCJyZW1vdmVDbGFzcyIsImF0dHIiLCJ1cGRhdGVDYWxlbmRhcnMiLCJ1cGRhdGVGb3JtSW5wdXRzIiwibW9udGgiLCJkYXRlIiwieWVhciIsImhvdXIiLCJzZWNvbmQiLCJhbXBtIiwicGFyc2VJbnQiLCJpc05hTiIsInJlbmRlckNhbGVuZGFyIiwiY2FsY3VsYXRlQ2hvc2VuTGFiZWwiLCJzaWRlIiwiY2FsZW5kYXIiLCJkYXlzSW5Nb250aCIsImxhc3REYXkiLCJsYXN0TW9udGgiLCJsYXN0WWVhciIsImRheXNJbkxhc3RNb250aCIsImRheU9mV2VlayIsImRheSIsImkiLCJzdGFydERheSIsImN1ckRhdGUiLCJjb2wiLCJyb3ciLCJkYXRlSHRtbCIsImN1cnJlbnRNb250aCIsImN1cnJlbnRZZWFyIiwiaW5NaW5ZZWFyIiwiaW5NYXhZZWFyIiwibW9udGhIdG1sIiwibSIsInllYXJIdG1sIiwieSIsImVhY2giLCJpbmRleCIsIm1heExpbWl0Iiwid2VlayIsImlzb1dlZWsiLCJjbGFzc2VzIiwiaXNTYW1lIiwiRGF0ZSIsImlzb1dlZWtkYXkiLCJpc0N1c3RvbSIsIkFycmF5IiwiYXBwbHkiLCJjbmFtZSIsImRpc2FibGVkIiwicmVwbGFjZSIsInNlbGVjdGVkIiwidGltZVNlbGVjdG9yIiwiaV9pbl8yNCIsInRpbWUiLCJwYWRkZWQiLCJhbV9odG1sIiwicG1faHRtbCIsIm1vdmUiLCJjb250YWluZXJUb3AiLCJwYXJlbnRPZmZzZXQiLCJ0b3AiLCJsZWZ0IiwicGFyZW50UmlnaHRFZGdlIiwid2lkdGgiLCJvZmZzZXQiLCJzY3JvbGxUb3AiLCJzY3JvbGxMZWZ0IiwiY2xpZW50V2lkdGgiLCJvdXRlckhlaWdodCIsImNzcyIsInJpZ2h0IiwiY29udGFpbmVyV2lkdGgiLCJvdXRlcldpZHRoIiwiY29udGFpbmVyUmlnaHQiLCJjb250YWluZXJMZWZ0IiwiZSIsIl9vdXRzaWRlQ2xpY2tQcm94eSIsIm91dHNpZGVDbGljayIsIm9sZFN0YXJ0RGF0ZSIsIm9sZEVuZERhdGUiLCJ0cmlnZ2VyIiwiY2hvc2VuTGFiZWwiLCJvZmYiLCJ0YXJnZXQiLCJ0eXBlIiwiY2xvc2VzdCIsInNob3dDYWxlbmRhcnMiLCJoaWRlQ2FsZW5kYXJzIiwibGFiZWwiLCJnZXRBdHRyaWJ1dGUiLCJkYXRlcyIsInBhcmVudHMiLCJ0aXRsZSIsInN1YnN0ciIsImVsIiwiZHQiLCJzdG9wUHJvcGFnYXRpb24iLCJjdXN0b21SYW5nZSIsImlzTGVmdCIsImxlZnRPclJpZ2h0IiwiY2FsIiwiZGF0ZVN0cmluZyIsImlzVmFsaWQiLCJrZXlDb2RlIiwicHJldmVudERlZmF1bHQiLCJuZXdWYWx1ZSIsInJlbW92ZSIsInJlbW92ZURhdGEiLCJpbXBsZW1lbnRPcHRpb25zIiwiZGVmYXVsdE9wdGlvbnMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Q0FRQyxTQUFVQSxFQUFNQyxHQUNiLEdBQXNCLG1CQUFYQyxRQUF5QkEsT0FBT0MsSUFFdkNELE9BQU8sQ0FBQyxTQUFVLFdBQVcsU0FBVUUsRUFBUUMsR0FHM0MsT0FGS0EsRUFBT0MsS0FBSUQsRUFBT0MsR0FBSyxJQUNOLG1CQUFYRixHQUF5QkEsRUFBT0csVUFBU0gsRUFBU0EsRUFBT0csU0FDN0ROLEVBQVFHLEVBQVFDLFdBRXhCLEdBQXNCLGlCQUFYRyxRQUF1QkEsT0FBT0MsUUFBUyxDQUdyRCxJQUFJQyxFQUEyQixvQkFBVkMsT0FBeUJBLE9BQU9ELFlBQVNFLEVBQ3pERixJQUNEQSxFQUFTRyxRQUFRLFdBQ0xQLEtBQUlJLEVBQU9KLEdBQUssSUFFaEMsSUFBSUYsRUFBMkIsb0JBQVZPLGFBQWlELElBQWpCQSxPQUFPUCxPQUF5Qk8sT0FBT1AsT0FBU1MsUUFBUSxVQUM3R0wsT0FBT0MsUUFBVVIsRUFBUUcsRUFBUU0sUUFHakNWLEVBQUtjLGdCQUFrQmIsRUFBUUQsRUFBS0ksT0FBUUosRUFBS1UsUUFwQnpELENBc0JFSyxNQUFNLFNBQVNYLEVBQVFZLEdBQ3JCLElBQUlDLEVBQWtCLFNBQVNDLEVBQVNDLEVBQVNDLEdBOEY3QyxHQTNGQUwsS0FBS00sU0FBVyxPQUNo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QUkyRCxFQUFLaE8sRUFBRUQsTUFDUGlPLEVBQUd0SyxLQUFLLG9CQUNSc0ssRUFBR3RLLEtBQUssbUJBQW1Ca0wsU0FDL0JaLEVBQUd0SyxLQUFLLGtCQUFtQixJQUFJekQsRUFBZ0IrTixFQUFJYyxFQUFrQnpMLE9BRWxFdEQsTUFHSkUiLCJmaWxlIjoiZGF0ZXJhbmdlcGlja2VyLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4qIEB2ZXJzaW9uOiAzLjAuNVxyXG4qIEBhdXRob3I6IERhbiBHcm9zc21hbiBodHRwOi8vd3d3LmRhbmdyb3NzbWFuLmluZm8vXHJcbiogQGNvcHlyaWdodDogQ29weXJpZ2h0IChjKSAyMDEyLTIwMTkgRGFuIEdyb3NzbWFuLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4qIEBsaWNlbnNlOiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuIFNlZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxyXG4qIEB3ZWJzaXRlOiBodHRwOi8vd3d3LmRhdGVyYW5nZXBpY2tlci5jb20vXHJcbiovXHJcbi8vIEZvbGxvd2luZyB0aGUgVU1EIHRlbXBsYXRlIGh0dHBzOi8vZ2l0aHViLmNvbS91bWRqcy91bWQvYmxvYi9tYXN0ZXIvdGVtcGxhdGVzL3JldHVybkV4cG9ydHNHbG9iYWwuanNcclxuKGZ1bmN0aW9uIChyb290LCBmYWN0b3J5KSB7XHJcbiAgICBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7XHJcbiAgICAgICAgLy8gQU1ELiBNYWtlIGdsb2JhbHkgYXZhaWxhYmxlIGFzIHdlbGxcclxuICAgICAgICBkZWZpbmUoWydtb21lbnQnLCAnanF1ZXJ5J10sIGZ1bmN0aW9uIChtb21lbnQsIGpxdWVyeSkge1xyXG4gICAgICAgICAgICBpZiAoIWpxdWVyeS5mbikganF1ZXJ5LmZuID0ge307IC8vIHdlYnBhY2sgc2VydmVyIHJlbmRlcmluZ1xyXG4gICAgICAgICAgICBpZiAodHlwZW9mIG1vbWVudCAhPT0gJ2Z1bmN0aW9uJyAmJiBtb21lbnQuZGVmYXVsdCkgbW9tZW50ID0gbW9tZW50LmRlZmF1bHRcclxuICAgICAgICAgICAgcmV0dXJuIGZhY3RvcnkobW9tZW50LCBqcXVlcnkpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSBlbHNlIGlmICh0eXBlb2YgbW9kdWxlID09PSAnb2JqZWN0JyAmJiBtb2R1bGUuZXhwb3J0cykge1xyXG4gICAgICAgIC8vIE5vZGUgLyBCcm93c2VyaWZ5XHJcbiAgICAgICAgLy9pc29tb3JwaGljIGlzc3VlXHJcbiAgICAgICAgdmFyIGpRdWVyeSA9ICh0eXBlb2Ygd2luZG93ICE9ICd1bmRlZmluZWQnKSA/IHdpbmRvdy5qUXVlcnkgOiB1bmRlZmluZWQ7XHJcbiAgICAgICAgaWYgKCFqUXVlcnkpIHtcclxuICAgICAgICAgICAgalF1ZXJ5ID0gcmVxdWlyZSgnanF1ZXJ5Jyk7XHJcbiAgICAgICAgICAgIGlmICghalF1ZXJ5LmZuKSBqUXVlcnkuZm4gPSB7fTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIG1vbWVudCA9ICh0eXBlb2Ygd2luZG93ICE9ICd1bmRlZmluZWQnICYmIHR5cGVvZiB3aW5kb3cubW9tZW50ICE9ICd1bmRlZmluZWQnKSA/IHdpbmRvdy5tb21lbnQgOiByZXF1aXJlKCdtb21lbnQnKTtcclxuICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkobW9tZW50LCBqUXVlcnkpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICAvLyBCcm93c2VyIGdsb2JhbHNcclxuICAgICAgICByb290LmRhdGVyYW5nZXBpY2tlciA9IGZhY3Rvcnkocm9vdC5tb21lbnQsIHJvb3QualF1ZXJ5KTtcclxuICAgIH1cclxufSh0aGlzLCBmdW5jdGlvbihtb21lbnQsICQpIHtcclxuICAgIHZhciBEYXRlUmFuZ2VQaWNrZXIgPSBmdW5jdGlvbihlbGVtZW50LCBvcHRpb25zLCBjYikge1xyXG5cclxuICAgICAgICAvL2RlZmF1bHQgc2V0dGluZ3MgZm9yIG9wdGlvbnNcclxuICAgICAgICB0aGlzLnBhcmVudEVsID0gJ2JvZHknO1xyXG4gICAgICAgIHRoaXMuZWxlbWVudCA9ICQoZWxlbWVudCk7XHJcbiAgICAgICAgdGhpcy5zdGFydERhdGUgPSBtb21lbnQoKS5zdGFydE9mKCdkYXknKTtcclxuICAgICAgICB0aGlzLmVuZERhdGUgPSBtb21lbnQoKS5lbmRPZignZGF5Jyk7XHJcbiAgICAgICAgdGhpcy5taW5EYXRlID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5tYXhEYXRlID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5tYXhTcGFuID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5hdXRvQXBwbHkgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLnNpbmdsZURhdGVQaWNrZXIgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLnNob3dEcm9wZG93bnMgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLm1pblllYXIgPSBtb21lbnQoKS5zdWJ0cmFjdCgxMDAsICd5ZWFyJykuZm9ybWF0KCdZWVlZJyk7XHJcbiAgICAgICAgdGhpcy5tYXhZZWFyID0gbW9tZW50KCkuYWRkKDEwMCwgJ3llYXInKS5mb3JtYXQoJ1lZWVknKTtcclxuICAgICAgICB0aGlzLnNob3dXZWVrTnVtYmVycyA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuc2hvd0lTT1dlZWtOdW1iZXJzID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5zaG93Q3VzdG9tUmFuZ2VMYWJlbCA9IHRydWU7XHJcbiAgICAgICAgdGhpcy50aW1lUGlja2VyID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy50aW1lUGlja2VyMjRIb3VyID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy50aW1lUGlja2VySW5jcmVtZW50ID0gMTtcclxuICAgICAgICB0aGlzLnRpbWVQaWNrZXJTZWNvbmRzID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5saW5rZWRDYWxlbmRhcnMgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMuYXV0b1VwZGF0ZUlucHV0ID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLmFsd2F5c1Nob3dDYWxlbmRhcnMgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLnJhbmdlcyA9IHt9O1xyXG5cclxuICAgICAgICB0aGlzLm9wZW5zID0gJ3JpZ2h0JztcclxuICAgICAgICBpZiAodGhpcy5lbGVtZW50Lmhhc0NsYXNzKCdwdWxsLXJpZ2h0JykpXHJcbiAgICAgICAgICAgIHRoaXMub3BlbnMgPSAnbGVmdCc7XHJcblxyXG4gICAgICAgIHRoaXMuZHJvcHMgPSAnZG93bic7XHJcbiAgICAgICAgaWYgKHRoaXMuZWxlbWVudC5oYXNDbGFzcygnZHJvcHVwJykpXHJcbiAgICAgICAgICAgIHRoaXMuZHJvcHMgPSAndXAnO1xyXG5cclxuICAgICAgICB0aGlzLmJ1dHRvbkNsYXNzZXMgPSAnYnRuIGJ0bi1zbSc7XHJcbiAgICAgICAgdGhpcy5hcHBseUJ1dHRvbkNsYXNzZXMgPSAnYnRuLXByaW1hcnknO1xyXG4gICAgICAgIHRoaXMuY2FuY2VsQnV0dG9uQ2xhc3NlcyA9ICdidG4tZGVmYXVsdCc7XHJcblxyXG4gICAgICAgIHRoaXMubG9jYWxlID0ge1xyXG4gICAgICAgICAgICBkaXJlY3Rpb246ICdsdHInLFxyXG4gICAgICAgICAgICBmb3JtYXQ6IG1vbWVudC5sb2NhbGVEYXRhKCkubG9uZ0RhdGVGb3JtYXQoJ0wnKSxcclxuICAgICAgICAgICAgc2VwYXJhdG9yOiAnIC0gJyxcclxuICAgICAgICAgICAgYXBwbHlMYWJlbDogJ0FwcGx5JyxcclxuICAgICAgICAgICAgY2FuY2VsTGFiZWw6ICdDYW5jZWwnLFxyXG4gICAgICAgICAgICB3ZWVrTGFiZWw6ICdXJyxcclxuICAgICAgICAgICAgY3VzdG9tUmFuZ2VMYWJlbDogJ0N1c3RvbSBSYW5nZScsXHJcbiAgICAgICAgICAgIGRheXNPZldlZWs6IG1vbWVudC53ZWVrZGF5c01pbigpLFxyXG4gICAgICAgICAgICBtb250aE5hbWVzOiBtb21lbnQubW9udGhzU2hvcnQoKSxcclxuICAgICAgICAgICAgZmlyc3REYXk6IG1vbWVudC5sb2NhbGVEYXRhKCkuZmlyc3REYXlPZldlZWsoKVxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHRoaXMuY2FsbGJhY2sgPSBmdW5jdGlvbigpIHsgfTtcclxuXHJcbiAgICAgICAgLy9zb21lIHN0YXRlIGluZm9ybWF0aW9uXHJcbiAgICAgICAgdGhpcy5pc1Nob3dpbmcgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLmxlZnRDYWxlbmRhciA9IHt9O1xyXG4gICAgICAgIHRoaXMucmlnaHRDYWxlbmRhciA9IHt9O1xyXG5cclxuICAgICAgICAvL2N1c3RvbSBvcHRpb25zIGZyb20gdXNlclxyXG4gICAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucyAhPT0gJ29iamVjdCcgfHwgb3B0aW9ucyA9PT0gbnVsbClcclxuICAgICAgICAgICAgb3B0aW9ucyA9IHt9O1xyXG5cclxuICAgICAgICAvL2FsbG93IHNldHRpbmcgb3B0aW9ucyB3aXRoIGRhdGEgYXR0cmlidXRlc1xyXG4gICAgICAgIC8vZGF0YS1hcGkgb3B0aW9ucyB3aWxsIGJlIG92ZXJ3cml0dGVuIHdpdGggY3VzdG9tIGphdmFzY3JpcHQgb3B0aW9uc1xyXG4gICAgICAgIG9wdGlvbnMgPSAkLmV4dGVuZCh0aGlzLmVsZW1lbnQuZGF0YSgpLCBvcHRpb25zKTtcclxuXHJcbiAgICAgICAgLy9odG1sIHRlbXBsYXRlIGZvciB0aGUgcGlja2VyIFVJXHJcbiAgICAgICAgaWYgKHR5cGVvZiBvcHRpb25zLnRlbXBsYXRlICE9PSAnc3RyaW5nJyAmJiAhKG9wdGlvbnMudGVtcGxhdGUgaW5zdGFuY2VvZiAkKSlcclxuICAgICAgICAgICAgb3B0aW9ucy50ZW1wbGF0ZSA9XHJcbiAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiZGF0ZXJhbmdlcGlja2VyXCI+JyArXHJcbiAgICAgICAgICAgICAgICAnPGRpdiBjbGFzcz1cInJhbmdlc1wiPjwvZGl2PicgK1xyXG4gICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJkcnAtY2FsZW5kYXIgbGVmdFwiPicgK1xyXG4gICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiY2FsZW5kYXItdGFibGVcIj48L2Rpdj4nICtcclxuICAgICAgICAgICAgICAgICAgICAnPGRpdiBjbGFzcz1cImNhbGVuZGFyLXRpbWVcIj48L2Rpdj4nICtcclxuICAgICAgICAgICAgICAgICc8L2Rpdj4nICtcclxuICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiZHJwLWNhbGVuZGFyIHJpZ2h0XCI+JyArXHJcbiAgICAgICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJjYWxlbmRhci10YWJsZVwiPjwvZGl2PicgK1xyXG4gICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiY2FsZW5kYXItdGltZVwiPjwvZGl2PicgK1xyXG4gICAgICAgICAgICAgICAgJzwvZGl2PicgK1xyXG4gICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJkcnAtYnV0dG9uc1wiPicgK1xyXG4gICAgICAgICAgICAgICAgICAgICc8c3BhbiBjbGFzcz1cImRycC1zZWxlY3RlZFwiPjwvc3Bhbj4nICtcclxuICAgICAgICAgICAgICAgICAgICAnPGJ1dHRvbiBjbGFzcz1cImNhbmNlbEJ0blwiIHR5cGU9XCJidXR0b25cIj48L2J1dHRvbj4nICtcclxuICAgICAgICAgICAgICAgICAgICAnPGJ1dHRvbiBjbGFzcz1cImFwcGx5QnRuXCIgZGlzYWJsZWQ9XCJkaXNhYmxlZFwiIHR5cGU9XCJidXR0b25cIj48L2J1dHRvbj4gJyArXHJcbiAgICAgICAgICAgICAgICAnPC9kaXY+JyArXHJcbiAgICAgICAgICAgICc8L2Rpdj4nO1xyXG5cclxuICAgICAgICB0aGlzLnBhcmVudEVsID0gKG9wdGlvbnMucGFyZW50RWwgJiYgJChvcHRpb25zLnBhcmVudEVsKS5sZW5ndGgpID8gJChvcHRpb25zLnBhcmVudEVsKSA6ICQodGhpcy5wYXJlbnRFbCk7XHJcbiAgICAgICAgdGhpcy5jb250YWluZXIgPSAkKG9wdGlvbnMudGVtcGxhdGUpLmFwcGVuZFRvKHRoaXMucGFyZW50RWwpO1xyXG5cclxuICAgICAgICAvL1xyXG4gICAgICAgIC8vIGhhbmRsZSBhbGwgdGhlIHBvc3NpYmxlIG9wdGlvbnMgb3ZlcnJpZGluZyBkZWZhdWx0c1xyXG4gICAgICAgIC8vXHJcblxyXG4gICAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5sb2NhbGUgPT09ICdvYmplY3QnKSB7XHJcblxyXG4gICAgICAgICAgICBpZiAodHlwZW9mIG9wdGlvbnMubG9jYWxlLmRpcmVjdGlvbiA9PT0gJ3N0cmluZycpXHJcbiAgICAgICAgICAgICAgICB0aGlzLmxvY2FsZS5kaXJlY3Rpb24gPSBvcHRpb25zLmxvY2FsZS5kaXJlY3Rpb247XHJcblxyXG4gICAgICAgICAgICBpZiAodHlwZW9mIG9wdGlvbnMubG9jYWxlLmZvcm1hdCA9PT0gJ3N0cmluZycpXHJcbiAgICAgICAgICAgICAgICB0aGlzLmxvY2FsZS5mb3JtYXQgPSBvcHRpb25zLmxvY2FsZS5mb3JtYXQ7XHJcblxyXG4gICAgICAgICAgICBpZiAodHlwZW9mIG9wdGlvbnMubG9jYWxlLnNlcGFyYXRvciA9PT0gJ3N0cmluZycpXHJcbiAgICAgICAgICAgICAgICB0aGlzLmxvY2FsZS5zZXBhcmF0b3IgPSBvcHRpb25zLmxvY2FsZS5zZXBhcmF0b3I7XHJcblxyXG4gICAgICAgICAgICBpZiAodHlwZW9mIG9wdGlvbnMubG9jYWxlLmRheXNPZldlZWsgPT09ICdvYmplY3QnKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5sb2NhbGUuZGF5c09mV2VlayA9IG9wdGlvbnMubG9jYWxlLmRheXNPZldlZWsuc2xpY2UoKTtcclxuXHJcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5sb2NhbGUubW9udGhOYW1lcyA9PT0gJ29iamVjdCcpXHJcbiAgICAgICAgICAgICAgdGhpcy5sb2NhbGUubW9udGhOYW1lcyA9IG9wdGlvbnMubG9jYWxlLm1vbnRoTmFtZXMuc2xpY2UoKTtcclxuXHJcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5sb2NhbGUuZmlyc3REYXkgPT09ICdudW1iZXInKVxyXG4gICAgICAgICAgICAgIHRoaXMubG9jYWxlLmZpcnN0RGF5ID0gb3B0aW9ucy5sb2NhbGUuZmlyc3REYXk7XHJcblxyXG4gICAgICAgICAgICBpZiAodHlwZW9mIG9wdGlvbnMubG9jYWxlLmFwcGx5TGFiZWwgPT09ICdzdHJpbmcnKVxyXG4gICAgICAgICAgICAgIHRoaXMubG9jYWxlLmFwcGx5TGFiZWwgPSBvcHRpb25zLmxvY2FsZS5hcHBseUxhYmVsO1xyXG5cclxuICAgICAgICAgICAgaWYgKHR5cGVvZiBvcHRpb25zLmxvY2FsZS5jYW5jZWxMYWJlbCA9PT0gJ3N0cmluZycpXHJcbiAgICAgICAgICAgICAgdGhpcy5sb2NhbGUuY2FuY2VsTGFiZWwgPSBvcHRpb25zLmxvY2FsZS5jYW5jZWxMYWJlbDtcclxuXHJcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5sb2NhbGUud2Vla0xhYmVsID09PSAnc3RyaW5nJylcclxuICAgICAgICAgICAgICB0aGlzLmxvY2FsZS53ZWVrTGFiZWwgPSBvcHRpb25zLmxvY2FsZS53ZWVrTGFiZWw7XHJcblxyXG4gICAgICAgICAgICBpZiAodHlwZW9mIG9wdGlvbnMubG9jYWxlLmN1c3RvbVJhbmdlTGFiZWwgPT09ICdzdHJpbmcnKXtcclxuICAgICAgICAgICAgICAgIC8vU3VwcG9ydCB1bmljb2RlIGNoYXJzIGluIHRoZSBjdXN0b20gcmFuZ2UgbmFtZS5cclxuICAgICAgICAgICAgICAgIHZhciBlbGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGV4dGFyZWEnKTtcclxuICAgICAgICAgICAgICAgIGVsZW0uaW5uZXJIVE1MID0gb3B0aW9ucy5sb2NhbGUuY3VzdG9tUmFuZ2VMYWJlbDtcclxuICAgICAgICAgICAgICAgIHZhciByYW5nZUh0bWwgPSBlbGVtLnZhbHVlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sb2NhbGUuY3VzdG9tUmFuZ2VMYWJlbCA9IHJhbmdlSHRtbDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmNvbnRhaW5lci5hZGRDbGFzcyh0aGlzLmxvY2FsZS5kaXJlY3Rpb24pO1xyXG5cclxuICAgICAgICBpZiAodHlwZW9mIG9wdGlvbnMuc3RhcnREYXRlID09PSAnc3RyaW5nJylcclxuICAgICAgICAgICAgdGhpcy5zdGFydERhdGUgPSBtb21lbnQob3B0aW9ucy5zdGFydERhdGUsIHRoaXMubG9jYWxlLmZvcm1hdCk7XHJcblxyXG4gICAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5lbmREYXRlID09PSAnc3RyaW5nJylcclxuICAgICAgICAgICAgdGhpcy5lbmREYXRlID0gbW9tZW50KG9wdGlvbnMuZW5kRGF0ZSwgdGhpcy5sb2NhbGUuZm9ybWF0KTtcclxuXHJcbiAgICAgICAgaWYgKHR5cGVvZiBvcHRpb25zLm1pbkRhdGUgPT09ICdzdHJpbmcnKVxyXG4gICAgICAgICAgICB0aGlzLm1pbkRhdGUgPSBtb21lbnQob3B0aW9ucy5taW5EYXRlLCB0aGlzLmxvY2FsZS5mb3JtYXQpO1xyXG5cclxuICAgICAgICBpZiAodHlwZW9mIG9wdGlvbnMubWF4RGF0ZSA9PT0gJ3N0cmluZycpXHJcbiAgICAgICAgICAgIHRoaXMubWF4RGF0ZSA9IG1vbWVudChvcHRpb25zLm1heERhdGUsIHRoaXMubG9jYWxlLmZvcm1hdCk7XHJcblxyXG4gICAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5zdGFydERhdGUgPT09ICdvYmplY3QnKVxyXG4gICAgICAgICAgICB0aGlzLnN0YXJ0RGF0ZSA9IG1vbWVudChvcHRpb25zLnN0YXJ0RGF0ZSk7XHJcblxyXG4gICAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5lbmREYXRlID09PSAnb2JqZWN0JylcclxuICAgICAgICAgICAgdGhpcy5lbmREYXRlID0gbW9tZW50KG9wdGlvbnMuZW5kRGF0ZSk7XHJcblxyXG4gICAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5taW5EYXRlID09PSAnb2JqZWN0JylcclxuICAgICAgICAgICAgdGhpcy5taW5EYXRlID0gbW9tZW50KG9wdGlvbnMubWluRGF0ZSk7XHJcblxyXG4gICAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5tYXhEYXRlID09PSAnb2JqZWN0JylcclxuICAgICAgICAgICAgdGhpcy5tYXhEYXRlID0gbW9tZW50KG9wdGlvbnMubWF4RGF0ZSk7XHJcblxyXG4gICAgICAgIC8vIHNhbml0eSBjaGVjayBmb3IgYmFkIG9wdGlvbnNcclxuICAgICAgICBpZiAodGhpcy5taW5EYXRlICYmIHRoaXMuc3RhcnREYXRlLmlzQmVmb3JlKHRoaXMubWluRGF0ZSkpXHJcbiAgICAgICAgICAgIHRoaXMuc3RhcnREYXRlID0gdGhpcy5taW5EYXRlLmNsb25lKCk7XHJcblxyXG4gICAgICAgIC8vIHNhbml0eSBjaGVjayBmb3IgYmFkIG9wdGlvbnNcclxuICAgICAgICBpZiAodGhpcy5tYXhEYXRlICYmIHRoaXMuZW5kRGF0ZS5pc0FmdGVyKHRoaXMubWF4RGF0ZSkpXHJcbiAgICAgICAgICAgIHRoaXMuZW5kRGF0ZSA9IHRoaXMubWF4RGF0ZS5jbG9uZSgpO1xyXG5cclxuICAgICAgICBpZiAodHlwZW9mIG9wdGlvbnMuYXBwbHlCdXR0b25DbGFzc2VzID09PSAnc3RyaW5nJylcclxuICAgICAgICAgICAgdGhpcy5hcHBseUJ1dHRvbkNsYXNzZXMgPSBvcHRpb25zLmFwcGx5QnV0dG9uQ2xhc3NlcztcclxuXHJcbiAgICAgICAgaWYgKHR5cGVvZiBvcHRpb25zLmFwcGx5Q2xhc3MgPT09ICdzdHJpbmcnKSAvL2JhY2t3YXJkcyBjb21wYXRcclxuICAgICAgICAgICAgdGhpcy5hcHBseUJ1dHRvbkNsYXNzZXMgPSBvcHRpb25zLmFwcGx5Q2xhc3M7XHJcblxyXG4gICAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5jYW5jZWxCdXR0b25DbGFzc2VzID09PSAnc3RyaW5nJylcclxuICAgICAgICAgICAgdGhpcy5jYW5jZWxCdXR0b25DbGFzc2VzID0gb3B0aW9ucy5jYW5jZWxCdXR0b25DbGFzc2VzO1xyXG5cclxuICAgICAgICBpZiAodHlwZW9mIG9wdGlvbnMuY2FuY2VsQ2xhc3MgPT09ICdzdHJpbmcnKSAvL2JhY2t3YXJkcyBjb21wYXRcclxuICAgICAgICAgICAgdGhpcy5jYW5jZWxCdXR0b25DbGFzc2VzID0gb3B0aW9ucy5jYW5jZWxDbGFzcztcclxuXHJcbiAgICAgICAgaWYgKHR5cGVvZiBvcHRpb25zLm1heFNwYW4gPT09ICdvYmplY3QnKVxyXG4gICAgICAgICAgICB0aGlzLm1heFNwYW4gPSBvcHRpb25zLm1heFNwYW47XHJcblxyXG4gICAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5kYXRlTGltaXQgPT09ICdvYmplY3QnKSAvL2JhY2t3YXJkcyBjb21wYXRcclxuICAgICAgICAgICAgdGhpcy5tYXhTcGFuID0gb3B0aW9ucy5kYXRlTGltaXQ7XHJcblxyXG4gICAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5vcGVucyA9PT0gJ3N0cmluZycpXHJcbiAgICAgICAgICAgIHRoaXMub3BlbnMgPSBvcHRpb25zLm9wZW5zO1xyXG5cclxuICAgICAgICBpZiAodHlwZW9mIG9wdGlvbnMuZHJvcHMgPT09ICdzdHJpbmcnKVxyXG4gICAgICAgICAgICB0aGlzLmRyb3BzID0gb3B0aW9ucy5kcm9wcztcclxuXHJcbiAgICAgICAgaWYgKHR5cGVvZiBvcHRpb25zLnNob3dXZWVrTnVtYmVycyA9PT0gJ2Jvb2xlYW4nKVxyXG4gICAgICAgICAgICB0aGlzLnNob3dXZWVrTnVtYmVycyA9IG9wdGlvbnMuc2hvd1dlZWtOdW1iZXJzO1xyXG5cclxuICAgICAgICBpZiAodHlwZW9mIG9wdGlvbnMuc2hvd0lTT1dlZWtOdW1iZXJzID09PSAnYm9vbGVhbicpXHJcbiAgICAgICAgICAgIHRoaXMuc2hvd0lTT1dlZWtOdW1iZXJzID0gb3B0aW9ucy5zaG93SVNPV2Vla051bWJlcnM7XHJcblxyXG4gICAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5idXR0b25DbGFzc2VzID09PSAnc3RyaW5nJylcclxuICAgICAgICAgICAgdGhpcy5idXR0b25DbGFzc2VzID0gb3B0aW9ucy5idXR0b25DbGFzc2VzO1xyXG5cclxuICAgICAgICBpZiAodHlwZW9mIG9wdGlvbnMuYnV0dG9uQ2xhc3NlcyA9PT0gJ29iamVjdCcpXHJcbiAgICAgICAgICAgIHRoaXMuYnV0dG9uQ2xhc3NlcyA9IG9wdGlvbnMuYnV0dG9uQ2xhc3Nlcy5qb2luKCcgJyk7XHJcblxyXG4gICAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5zaG93RHJvcGRvd25zID09PSAnYm9vbGVhbicpXHJcbiAgICAgICAgICAgIHRoaXMuc2hvd0Ryb3Bkb3ducyA9IG9wdGlvbnMuc2hvd0Ryb3Bkb3ducztcclxuXHJcbiAgICAgICAgaWYgKHR5cGVvZiBvcHRpb25zLm1pblllYXIgPT09ICdudW1iZXInKVxyXG4gICAgICAgICAgICB0aGlzLm1pblllYXIgPSBvcHRpb25zLm1pblllYXI7XHJcblxyXG4gICAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5tYXhZZWFyID09PSAnbnVtYmVyJylcclxuICAgICAgICAgICAgdGhpcy5tYXhZZWFyID0gb3B0aW9ucy5tYXhZZWFyO1xyXG5cclxuICAgICAgICBpZiAodHlwZW9mIG9wdGlvbnMuc2hvd0N1c3RvbVJhbmdlTGFiZWwgPT09ICdib29sZWFuJylcclxuICAgICAgICAgICAgdGhpcy5zaG93Q3VzdG9tUmFuZ2VMYWJlbCA9IG9wdGlvbnMuc2hvd0N1c3RvbVJhbmdlTGFiZWw7XHJcblxyXG4gICAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5zaW5nbGVEYXRlUGlja2VyID09PSAnYm9vbGVhbicpIHtcclxuICAgICAgICAgICAgdGhpcy5zaW5nbGVEYXRlUGlja2VyID0gb3B0aW9ucy5zaW5nbGVEYXRlUGlja2VyO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5zaW5nbGVEYXRlUGlja2VyKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5lbmREYXRlID0gdGhpcy5zdGFydERhdGUuY2xvbmUoKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucy50aW1lUGlja2VyID09PSAnYm9vbGVhbicpXHJcbiAgICAgICAgICAgIHRoaXMudGltZVBpY2tlciA9IG9wdGlvbnMudGltZVBpY2tlcjtcclxuXHJcbiAgICAgICAgaWYgKHR5cGVvZiBvcHRpb25zLnRpbWVQaWNrZXJTZWNvbmRzID09PSAnYm9vbGVhbicpXHJcbiAgICAgICAgICAgIHRoaXMudGltZVBpY2tlclNlY29uZHMgPSBvcHRpb25zLnRpbWVQaWNrZXJTZWNvbmRzO1xyXG5cclxuICAgICAgICBpZiAodHlwZW9mIG9wdGlvbnMudGltZVBpY2tlckluY3JlbWVudCA9PT0gJ251bWJlcicpXHJcbiAgICAgICAgICAgIHRoaXMudGltZVBpY2tlckluY3JlbWVudCA9IG9wdGlvbnMudGltZVBpY2tlckluY3JlbWVudDtcclxuXHJcbiAgICAgICAgaWYgKHR5cGVvZiBvcHRpb25zLnRpbWVQaWNrZXIyNEhvdXIgPT09ICdib29sZWFuJylcclxuICAgICAgICAgICAgdGhpcy50aW1lUGlja2VyMjRIb3VyID0gb3B0aW9ucy50aW1lUGlja2VyMjRIb3VyO1xyXG5cclxuICAgICAgICBpZiAodHlwZW9mIG9wdGlvbnMuYXV0b0FwcGx5ID09PSAnYm9vbGVhbicpXHJcbiAgICAgICAgICAgIHRoaXMuYXV0b0FwcGx5ID0gb3B0aW9ucy5hdXRvQXBwbHk7XHJcblxyXG4gICAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5hdXRvVXBkYXRlSW5wdXQgPT09ICdib29sZWFuJylcclxuICAgICAgICAgICAgdGhpcy5hdXRvVXBkYXRlSW5wdXQgPSBvcHRpb25zLmF1dG9VcGRhdGVJbnB1dDtcclxuXHJcbiAgICAgICAgaWYgKHR5cGVvZiBvcHRpb25zLmxpbmtlZENhbGVuZGFycyA9PT0gJ2Jvb2xlYW4nKVxyXG4gICAgICAgICAgICB0aGlzLmxpbmtlZENhbGVuZGFycyA9IG9wdGlvbnMubGlua2VkQ2FsZW5kYXJzO1xyXG5cclxuICAgICAgICBpZiAodHlwZW9mIG9wdGlvbnMuaXNJbnZhbGlkRGF0ZSA9PT0gJ2Z1bmN0aW9uJylcclxuICAgICAgICAgICAgdGhpcy5pc0ludmFsaWREYXRlID0gb3B0aW9ucy5pc0ludmFsaWREYXRlO1xyXG5cclxuICAgICAgICBpZiAodHlwZW9mIG9wdGlvbnMuaXNDdXN0b21EYXRlID09PSAnZnVuY3Rpb24nKVxyXG4gICAgICAgICAgICB0aGlzLmlzQ3VzdG9tRGF0ZSA9IG9wdGlvbnMuaXNDdXN0b21EYXRlO1xyXG5cclxuICAgICAgICBpZiAodHlwZW9mIG9wdGlvbnMuYWx3YXlzU2hvd0NhbGVuZGFycyA9PT0gJ2Jvb2xlYW4nKVxyXG4gICAgICAgICAgICB0aGlzLmFsd2F5c1Nob3dDYWxlbmRhcnMgPSBvcHRpb25zLmFsd2F5c1Nob3dDYWxlbmRhcnM7XHJcblxyXG4gICAgICAgIC8vIHVwZGF0ZSBkYXkgbmFtZXMgb3JkZXIgdG8gZmlyc3REYXlcclxuICAgICAgICBpZiAodGhpcy5sb2NhbGUuZmlyc3REYXkgIT0gMCkge1xyXG4gICAgICAgICAgICB2YXIgaXRlcmF0b3IgPSB0aGlzLmxvY2FsZS5maXJzdERheTtcclxuICAgICAgICAgICAgd2hpbGUgKGl0ZXJhdG9yID4gMCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sb2NhbGUuZGF5c09mV2Vlay5wdXNoKHRoaXMubG9jYWxlLmRheXNPZldlZWsuc2hpZnQoKSk7XHJcbiAgICAgICAgICAgICAgICBpdGVyYXRvci0tO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB2YXIgc3RhcnQsIGVuZCwgcmFuZ2U7XHJcblxyXG4gICAgICAgIC8vaWYgbm8gc3RhcnQvZW5kIGRhdGVzIHNldCwgY2hlY2sgaWYgYW4gaW5wdXQgZWxlbWVudCBjb250YWlucyBpbml0aWFsIHZhbHVlc1xyXG4gICAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5zdGFydERhdGUgPT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBvcHRpb25zLmVuZERhdGUgPT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgICAgICAgIGlmICgkKHRoaXMuZWxlbWVudCkuaXMoJzp0ZXh0JykpIHtcclxuICAgICAgICAgICAgICAgIHZhciB2YWwgPSAkKHRoaXMuZWxlbWVudCkudmFsKCksXHJcbiAgICAgICAgICAgICAgICAgICAgc3BsaXQgPSB2YWwuc3BsaXQodGhpcy5sb2NhbGUuc2VwYXJhdG9yKTtcclxuXHJcbiAgICAgICAgICAgICAgICBzdGFydCA9IGVuZCA9IG51bGw7XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKHNwbGl0Lmxlbmd0aCA9PSAyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgc3RhcnQgPSBtb21lbnQoc3BsaXRbMF0sIHRoaXMubG9jYWxlLmZvcm1hdCk7XHJcbiAgICAgICAgICAgICAgICAgICAgZW5kID0gbW9tZW50KHNwbGl0WzFdLCB0aGlzLmxvY2FsZS5mb3JtYXQpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLnNpbmdsZURhdGVQaWNrZXIgJiYgdmFsICE9PSBcIlwiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgc3RhcnQgPSBtb21lbnQodmFsLCB0aGlzLmxvY2FsZS5mb3JtYXQpO1xyXG4gICAgICAgICAgICAgICAgICAgIGVuZCA9IG1vbWVudCh2YWwsIHRoaXMubG9jYWxlLmZvcm1hdCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZiAoc3RhcnQgIT09IG51bGwgJiYgZW5kICE9PSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGFydERhdGUoc3RhcnQpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0RW5kRGF0ZShlbmQpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAodHlwZW9mIG9wdGlvbnMucmFuZ2VzID09PSAnb2JqZWN0Jykge1xyXG4gICAgICAgICAgICBmb3IgKHJhbmdlIGluIG9wdGlvbnMucmFuZ2VzKSB7XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBvcHRpb25zLnJhbmdlc1tyYW5nZV1bMF0gPT09ICdzdHJpbmcnKVxyXG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0ID0gbW9tZW50KG9wdGlvbnMucmFuZ2VzW3JhbmdlXVswXSwgdGhpcy5sb2NhbGUuZm9ybWF0KTtcclxuICAgICAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgICAgICBzdGFydCA9IG1vbWVudChvcHRpb25zLnJhbmdlc1tyYW5nZV1bMF0pO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5yYW5nZXNbcmFuZ2VdWzFdID09PSAnc3RyaW5nJylcclxuICAgICAgICAgICAgICAgICAgICBlbmQgPSBtb21lbnQob3B0aW9ucy5yYW5nZXNbcmFuZ2VdWzFdLCB0aGlzLmxvY2FsZS5mb3JtYXQpO1xyXG4gICAgICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgICAgICAgIGVuZCA9IG1vbWVudChvcHRpb25zLnJhbmdlc1tyYW5nZV1bMV0pO1xyXG5cclxuICAgICAgICAgICAgICAgIC8vIElmIHRoZSBzdGFydCBvciBlbmQgZGF0ZSBleGNlZWQgdGhvc2UgYWxsb3dlZCBieSB0aGUgbWluRGF0ZSBvciBtYXhTcGFuXHJcbiAgICAgICAgICAgICAgICAvLyBvcHRpb25zLCBzaG9ydGVuIHRoZSByYW5nZSB0byB0aGUgYWxsb3dhYmxlIHBlcmlvZC5cclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLm1pbkRhdGUgJiYgc3RhcnQuaXNCZWZvcmUodGhpcy5taW5EYXRlKSlcclxuICAgICAgICAgICAgICAgICAgICBzdGFydCA9IHRoaXMubWluRGF0ZS5jbG9uZSgpO1xyXG5cclxuICAgICAgICAgICAgICAgIHZhciBtYXhEYXRlID0gdGhpcy5tYXhEYXRlO1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMubWF4U3BhbiAmJiBtYXhEYXRlICYmIHN0YXJ0LmNsb25lKCkuYWRkKHRoaXMubWF4U3BhbikuaXNBZnRlcihtYXhEYXRlKSlcclxuICAgICAgICAgICAgICAgICAgICBtYXhEYXRlID0gc3RhcnQuY2xvbmUoKS5hZGQodGhpcy5tYXhTcGFuKTtcclxuICAgICAgICAgICAgICAgIGlmIChtYXhEYXRlICYmIGVuZC5pc0FmdGVyKG1heERhdGUpKVxyXG4gICAgICAgICAgICAgICAgICAgIGVuZCA9IG1heERhdGUuY2xvbmUoKTtcclxuXHJcbiAgICAgICAgICAgICAgICAvLyBJZiB0aGUgZW5kIG9mIHRoZSByYW5nZSBpcyBiZWZvcmUgdGhlIG1pbmltdW0gb3IgdGhlIHN0YXJ0IG9mIHRoZSByYW5nZSBpc1xyXG4gICAgICAgICAgICAgICAgLy8gYWZ0ZXIgdGhlIG1heGltdW0sIGRvbid0IGRpc3BsYXkgdGhpcyByYW5nZSBvcHRpb24gYXQgYWxsLlxyXG4gICAgICAgICAgICAgICAgaWYgKCh0aGlzLm1pbkRhdGUgJiYgZW5kLmlzQmVmb3JlKHRoaXMubWluRGF0ZSwgdGhpcy50aW1lcGlja2VyID8gJ21pbnV0ZScgOiAnZGF5JykpXHJcbiAgICAgICAgICAgICAgICAgIHx8IChtYXhEYXRlICYmIHN0YXJ0LmlzQWZ0ZXIobWF4RGF0ZSwgdGhpcy50aW1lcGlja2VyID8gJ21pbnV0ZScgOiAnZGF5JykpKVxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xyXG5cclxuICAgICAgICAgICAgICAgIC8vU3VwcG9ydCB1bmljb2RlIGNoYXJzIGluIHRoZSByYW5nZSBuYW1lcy5cclxuICAgICAgICAgICAgICAgIHZhciBlbGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGV4dGFyZWEnKTtcclxuICAgICAgICAgICAgICAgIGVsZW0uaW5uZXJIVE1MID0gcmFuZ2U7XHJcbiAgICAgICAgICAgICAgICB2YXIgcmFuZ2VIdG1sID0gZWxlbS52YWx1ZTtcclxuXHJcbiAgICAgICAgICAgICAgICB0aGlzLnJhbmdlc1tyYW5nZUh0bWxdID0gW3N0YXJ0LCBlbmRdO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB2YXIgbGlzdCA9ICc8dWw+JztcclxuICAgICAgICAgICAgZm9yIChyYW5nZSBpbiB0aGlzLnJhbmdlcykge1xyXG4gICAgICAgICAgICAgICAgbGlzdCArPSAnPGxpIGRhdGEtcmFuZ2Uta2V5PVwiJyArIHJhbmdlICsgJ1wiPicgKyByYW5nZSArICc8L2xpPic7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHRoaXMuc2hvd0N1c3RvbVJhbmdlTGFiZWwpIHtcclxuICAgICAgICAgICAgICAgIGxpc3QgKz0gJzxsaSBkYXRhLXJhbmdlLWtleT1cIicgKyB0aGlzLmxvY2FsZS5jdXN0b21SYW5nZUxhYmVsICsgJ1wiPicgKyB0aGlzLmxvY2FsZS5jdXN0b21SYW5nZUxhYmVsICsgJzwvbGk+JztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBsaXN0ICs9ICc8L3VsPic7XHJcbiAgICAgICAgICAgIHRoaXMuY29udGFpbmVyLmZpbmQoJy5yYW5nZXMnKS5wcmVwZW5kKGxpc3QpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKHR5cGVvZiBjYiA9PT0gJ2Z1bmN0aW9uJykge1xyXG4gICAgICAgICAgICB0aGlzLmNhbGxiYWNrID0gY2I7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoIXRoaXMudGltZVBpY2tlcikge1xyXG4gICAgICAgICAgICB0aGlzLnN0YXJ0RGF0ZSA9IHRoaXMuc3RhcnREYXRlLnN0YXJ0T2YoJ2RheScpO1xyXG4gICAgICAgICAgICB0aGlzLmVuZERhdGUgPSB0aGlzLmVuZERhdGUuZW5kT2YoJ2RheScpO1xyXG4gICAgICAgICAgICB0aGlzLmNvbnRhaW5lci5maW5kKCcuY2FsZW5kYXItdGltZScpLmhpZGUoKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vY2FuJ3QgYmUgdXNlZCB0b2dldGhlciBmb3Igbm93XHJcbiAgICAgICAgaWYgKHRoaXMudGltZVBpY2tlciAmJiB0aGlzLmF1dG9BcHBseSlcclxuICAgICAgICAgICAgdGhpcy5hdXRvQXBwbHkgPSBmYWxzZTtcclxuXHJcbiAgICAgICAgaWYgKHRoaXMuYXV0b0FwcGx5KSB7XHJcbiAgICAgICAgICAgIHRoaXMuY29udGFpbmVyLmFkZENsYXNzKCdhdXRvLWFwcGx5Jyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAodHlwZW9mIG9wdGlvbnMucmFuZ2VzID09PSAnb2JqZWN0JylcclxuICAgICAgICAgICAgdGhpcy5jb250YWluZXIuYWRkQ2xhc3MoJ3Nob3ctcmFuZ2VzJyk7XHJcblxyXG4gICAgICAgIGlmICh0aGlzLnNpbmdsZURhdGVQaWNrZXIpIHtcclxuICAgICAgICAgICAgdGhpcy5jb250YWluZXIuYWRkQ2xhc3MoJ3NpbmdsZScpO1xyXG4gICAgICAgICAgICB0aGlzLmNvbnRhaW5lci5maW5kKCcuZHJwLWNhbGVuZGFyLmxlZnQnKS5hZGRDbGFzcygnc2luZ2xlJyk7XHJcbiAgICAgICAgICAgIHRoaXMuY29udGFpbmVyLmZpbmQoJy5kcnAtY2FsZW5kYXIubGVmdCcpLnNob3coKTtcclxuICAgICAgICAgICAgdGhpcy5jb250YWluZXIuZmluZCgnLmRycC1jYWxlbmRhci5yaWdodCcpLmhpZGUoKTtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLnRpbWVQaWNrZXIpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY29udGFpbmVyLmFkZENsYXNzKCdhdXRvLWFwcGx5Jyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICgodHlwZW9mIG9wdGlvbnMucmFuZ2VzID09PSAndW5kZWZpbmVkJyAmJiAhdGhpcy5zaW5nbGVEYXRlUGlja2VyKSB8fCB0aGlzLmFsd2F5c1Nob3dDYWxlbmRhcnMpIHtcclxuICAgICAgICAgICAgdGhpcy5jb250YWluZXIuYWRkQ2xhc3MoJ3Nob3ctY2FsZW5kYXInKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMuY29udGFpbmVyLmFkZENsYXNzKCdvcGVucycgKyB0aGlzLm9wZW5zKTtcclxuXHJcbiAgICAgICAgLy9hcHBseSBDU1MgY2xhc3NlcyBhbmQgbGFiZWxzIHRvIGJ1dHRvbnNcclxuICAgICAgICB0aGlzLmNvbnRhaW5lci5maW5kKCcuYXBwbHlCdG4sIC5jYW5jZWxCdG4nKS5hZGRDbGFzcyh0aGlzLmJ1dHRvbkNsYXNzZXMpO1xyXG4gICAgICAgIGlmICh0aGlzLmFwcGx5QnV0dG9uQ2xhc3Nlcy5sZW5ndGgpXHJcbiAgICAgICAgICAgIHRoaXMuY29udGFpbmVyLmZpbmQoJy5hcHBseUJ0bicpLmFkZENsYXNzKHRoaXMuYXBwbHlCdXR0b25DbGFzc2VzKTtcclxuICAgICAgICBpZiAodGhpcy5jYW5jZWxCdXR0b25DbGFzc2VzLmxlbmd0aClcclxuICAgICAgICAgICAgdGhpcy5jb250YWluZXIuZmluZCgnLmNhbmNlbEJ0bicpLmFkZENsYXNzKHRoaXMuY2FuY2VsQnV0dG9uQ2xhc3Nlcyk7XHJcbiAgICAgICAgdGhpcy5jb250YWluZXIuZmluZCgnLmFwcGx5QnRuJykuaHRtbCh0aGlzLmxvY2FsZS5hcHBseUxhYmVsKTtcclxuICAgICAgICB0aGlzLmNvbnRhaW5lci5maW5kKCcuY2FuY2VsQnRuJykuaHRtbCh0aGlzLmxvY2FsZS5jYW5jZWxMYWJlbCk7XHJcblxyXG4gICAgICAgIC8vXHJcbiAgICAgICAgLy8gZXZlbnQgbGlzdGVuZXJzXHJcbiAgICAgICAgLy9cclxuXHJcbiAgICAgICAgdGhpcy5jb250YWluZXIuZmluZCgnLmRycC1jYWxlbmRhcicpXHJcbiAgICAgICAgICAgIC5vbignY2xpY2suZGF0ZXJhbmdlcGlja2VyJywgJy5wcmV2JywgJC5wcm94eSh0aGlzLmNsaWNrUHJldiwgdGhpcykpXHJcbiAgICAgICAgICAgIC5vbignY2xpY2suZGF0ZXJhbmdlcGlja2VyJywgJy5uZXh0JywgJC5wcm94eSh0aGlzLmNsaWNrTmV4dCwgdGhpcykpXHJcbiAgICAgICAgICAgIC5vbignbW91c2Vkb3duLmRhdGVyYW5nZXBpY2tlcicsICd0ZC5hdmFpbGFibGUnLCAkLnByb3h5KHRoaXMuY2xpY2tEYXRlLCB0aGlzKSlcclxuICAgICAgICAgICAgLm9uKCdtb3VzZWVudGVyLmRhdGVyYW5nZXBpY2tlcicsICd0ZC5hdmFpbGFibGUnLCAkLnByb3h5KHRoaXMuaG92ZXJEYXRlLCB0aGlzKSlcclxuICAgICAgICAgICAgLm9uKCdjaGFuZ2UuZGF0ZXJhbmdlcGlja2VyJywgJ3NlbGVjdC55ZWFyc2VsZWN0JywgJC5wcm94eSh0aGlzLm1vbnRoT3JZZWFyQ2hhbmdlZCwgdGhpcykpXHJcbiAgICAgICAgICAgIC5vbignY2hhbmdlLmRhdGVyYW5nZXBpY2tlcicsICdzZWxlY3QubW9udGhzZWxlY3QnLCAkLnByb3h5KHRoaXMubW9udGhPclllYXJDaGFuZ2VkLCB0aGlzKSlcclxuICAgICAgICAgICAgLm9uKCdjaGFuZ2UuZGF0ZXJhbmdlcGlja2VyJywgJ3NlbGVjdC5ob3Vyc2VsZWN0LHNlbGVjdC5taW51dGVzZWxlY3Qsc2VsZWN0LnNlY29uZHNlbGVjdCxzZWxlY3QuYW1wbXNlbGVjdCcsICQucHJveHkodGhpcy50aW1lQ2hhbmdlZCwgdGhpcykpXHJcblxyXG4gICAgICAgIHRoaXMuY29udGFpbmVyLmZpbmQoJy5yYW5nZXMnKVxyXG4gICAgICAgICAgICAub24oJ2NsaWNrLmRhdGVyYW5nZXBpY2tlcicsICdsaScsICQucHJveHkodGhpcy5jbGlja1JhbmdlLCB0aGlzKSlcclxuXHJcbiAgICAgICAgdGhpcy5jb250YWluZXIuZmluZCgnLmRycC1idXR0b25zJylcclxuICAgICAgICAgICAgLm9uKCdjbGljay5kYXRlcmFuZ2VwaWNrZXInLCAnYnV0dG9uLmFwcGx5QnRuJywgJC5wcm94eSh0aGlzLmNsaWNrQXBwbHksIHRoaXMpKVxyXG4gICAgICAgICAgICAub24oJ2NsaWNrLmRhdGVyYW5nZXBpY2tlcicsICdidXR0b24uY2FuY2VsQnRuJywgJC5wcm94eSh0aGlzLmNsaWNrQ2FuY2VsLCB0aGlzKSlcclxuXHJcbiAgICAgICAgaWYgKHRoaXMuZWxlbWVudC5pcygnaW5wdXQnKSB8fCB0aGlzLmVsZW1lbnQuaXMoJ2J1dHRvbicpKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZWxlbWVudC5vbih7XHJcbiAgICAgICAgICAgICAgICAnY2xpY2suZGF0ZXJhbmdlcGlja2VyJzogJC5wcm94eSh0aGlzLnNob3csIHRoaXMpLFxyXG4gICAgICAgICAgICAgICAgJ2ZvY3VzLmRhdGVyYW5nZXBpY2tlcic6ICQucHJveHkodGhpcy5zaG93LCB0aGlzKSxcclxuICAgICAgICAgICAgICAgICdrZXl1cC5kYXRlcmFuZ2VwaWNrZXInOiAkLnByb3h5KHRoaXMuZWxlbWVudENoYW5nZWQsIHRoaXMpLFxyXG4gICAgICAgICAgICAgICAgJ2tleWRvd24uZGF0ZXJhbmdlcGlja2VyJzogJC5wcm94eSh0aGlzLmtleWRvd24sIHRoaXMpIC8vSUUgMTEgY29tcGF0aWJpbGl0eVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLmVsZW1lbnQub24oJ2NsaWNrLmRhdGVyYW5nZXBpY2tlcicsICQucHJveHkodGhpcy50b2dnbGUsIHRoaXMpKTtcclxuICAgICAgICAgICAgdGhpcy5lbGVtZW50Lm9uKCdrZXlkb3duLmRhdGVyYW5nZXBpY2tlcicsICQucHJveHkodGhpcy50b2dnbGUsIHRoaXMpKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vXHJcbiAgICAgICAgLy8gaWYgYXR0YWNoZWQgdG8gYSB0ZXh0IGlucHV0LCBzZXQgdGhlIGluaXRpYWwgdmFsdWVcclxuICAgICAgICAvL1xyXG5cclxuICAgICAgICB0aGlzLnVwZGF0ZUVsZW1lbnQoKTtcclxuXHJcbiAgICB9O1xyXG5cclxuICAgIERhdGVSYW5nZVBpY2tlci5wcm90b3R5cGUgPSB7XHJcblxyXG4gICAgICAgIGNvbnN0cnVjdG9yOiBEYXRlUmFuZ2VQaWNrZXIsXHJcblxyXG4gICAgICAgIHNldFN0YXJ0RGF0ZTogZnVuY3Rpb24oc3RhcnREYXRlKSB7XHJcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygc3RhcnREYXRlID09PSAnc3RyaW5nJylcclxuICAgICAgICAgICAgICAgIHRoaXMuc3RhcnREYXRlID0gbW9tZW50KHN0YXJ0RGF0ZSwgdGhpcy5sb2NhbGUuZm9ybWF0KTtcclxuXHJcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygc3RhcnREYXRlID09PSAnb2JqZWN0JylcclxuICAgICAgICAgICAgICAgIHRoaXMuc3RhcnREYXRlID0gbW9tZW50KHN0YXJ0RGF0ZSk7XHJcblxyXG4gICAgICAgICAgICBpZiAoIXRoaXMudGltZVBpY2tlcilcclxuICAgICAgICAgICAgICAgIHRoaXMuc3RhcnREYXRlID0gdGhpcy5zdGFydERhdGUuc3RhcnRPZignZGF5Jyk7XHJcblxyXG4gICAgICAgICAgICBpZiAodGhpcy50aW1lUGlja2VyICYmIHRoaXMudGltZVBpY2tlckluY3JlbWVudClcclxuICAgICAgICAgICAgICAgIHRoaXMuc3RhcnREYXRlLm1pbnV0ZShNYXRoLnJvdW5kKHRoaXMuc3RhcnREYXRlLm1pbnV0ZSgpIC8gdGhpcy50aW1lUGlja2VySW5jcmVtZW50KSAqIHRoaXMudGltZVBpY2tlckluY3JlbWVudCk7XHJcblxyXG4gICAgICAgICAgICBpZiAodGhpcy5taW5EYXRlICYmIHRoaXMuc3RhcnREYXRlLmlzQmVmb3JlKHRoaXMubWluRGF0ZSkpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuc3RhcnREYXRlID0gdGhpcy5taW5EYXRlLmNsb25lKCk7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy50aW1lUGlja2VyICYmIHRoaXMudGltZVBpY2tlckluY3JlbWVudClcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXJ0RGF0ZS5taW51dGUoTWF0aC5yb3VuZCh0aGlzLnN0YXJ0RGF0ZS5taW51dGUoKSAvIHRoaXMudGltZVBpY2tlckluY3JlbWVudCkgKiB0aGlzLnRpbWVQaWNrZXJJbmNyZW1lbnQpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAodGhpcy5tYXhEYXRlICYmIHRoaXMuc3RhcnREYXRlLmlzQWZ0ZXIodGhpcy5tYXhEYXRlKSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zdGFydERhdGUgPSB0aGlzLm1heERhdGUuY2xvbmUoKTtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLnRpbWVQaWNrZXIgJiYgdGhpcy50aW1lUGlja2VySW5jcmVtZW50KVxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc3RhcnREYXRlLm1pbnV0ZShNYXRoLmZsb29yKHRoaXMuc3RhcnREYXRlLm1pbnV0ZSgpIC8gdGhpcy50aW1lUGlja2VySW5jcmVtZW50KSAqIHRoaXMudGltZVBpY2tlckluY3JlbWVudCk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmICghdGhpcy5pc1Nob3dpbmcpXHJcbiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUVsZW1lbnQoKTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMudXBkYXRlTW9udGhzSW5WaWV3KCk7XHJcbiAgICAgICAgfSxcclxuXHJcbiAgICAgICAgc2V0RW5kRGF0ZTogZnVuY3Rpb24oZW5kRGF0ZSkge1xyXG4gICAgICAgICAgICBpZiAodHlwZW9mIGVuZERhdGUgPT09ICdzdHJpbmcnKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5lbmREYXRlID0gbW9tZW50KGVuZERhdGUsIHRoaXMubG9jYWxlLmZvcm1hdCk7XHJcblxyXG4gICAgICAgICAgICBpZiAodHlwZW9mIGVuZERhdGUgPT09ICdvYmplY3QnKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5lbmREYXRlID0gbW9tZW50KGVuZERhdGUpO1xyXG5cclxuICAgICAgICAgICAgaWYgKCF0aGlzLnRpbWVQaWNrZXIpXHJcbiAgICAgICAgICAgICAgICB0aGlzLmVuZERhdGUgPSB0aGlzLmVuZERhdGUuZW5kT2YoJ2RheScpO1xyXG5cclxuICAgICAgICAgICAgaWYgKHRoaXMudGltZVBpY2tlciAmJiB0aGlzLnRpbWVQaWNrZXJJbmNyZW1lbnQpXHJcbiAgICAgICAgICAgICAgICB0aGlzLmVuZERhdGUubWludXRlKE1hdGgucm91bmQodGhpcy5lbmREYXRlLm1pbnV0ZSgpIC8gdGhpcy50aW1lUGlja2VySW5jcmVtZW50KSAqIHRoaXMudGltZVBpY2tlckluY3JlbWVudCk7XHJcblxyXG4gICAgICAgICAgICBpZiAodGhpcy5lbmREYXRlLmlzQmVmb3JlKHRoaXMuc3RhcnREYXRlKSlcclxuICAgICAgICAgICAgICAgIHRoaXMuZW5kRGF0ZSA9IHRoaXMuc3RhcnREYXRlLmNsb25lKCk7XHJcblxyXG4gICAgICAgICAgICBpZiAodGhpcy5tYXhEYXRlICYmIHRoaXMuZW5kRGF0ZS5pc0FmdGVyKHRoaXMubWF4RGF0ZSkpXHJcbiAgICAgICAgICAgICAgICB0aGlzLmVuZERhdGUgPSB0aGlzLm1heERhdGUuY2xvbmUoKTtcclxuXHJcbiAgICAgICAgICAgIGlmICh0aGlzLm1heFNwYW4gJiYgdGhpcy5zdGFydERhdGUuY2xvbmUoKS5hZGQodGhpcy5tYXhTcGFuKS5pc0JlZm9yZSh0aGlzLmVuZERhdGUpKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5lbmREYXRlID0gdGhpcy5zdGFydERhdGUuY2xvbmUoKS5hZGQodGhpcy5tYXhTcGFuKTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMucHJldmlvdXNSaWdodFRpbWUgPSB0aGlzLmVuZERhdGUuY2xvbmUoKTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuY29udGFpbmVyLmZpbmQoJy5kcnAtc2VsZWN0ZWQnKS5odG1sKHRoaXMuc3RhcnREYXRlLmZvcm1hdCh0aGlzLmxvY2FsZS5mb3JtYXQpICsgdGhpcy5sb2NhbGUuc2VwYXJhdG9yICsgdGhpcy5lbmREYXRlLmZvcm1hdCh0aGlzLmxvY2FsZS5mb3JtYXQpKTtcclxuXHJcbiAgICAgICAgICAgIGlmICghdGhpcy5pc1Nob3dpbmcpXHJcbiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUVsZW1lbnQoKTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMudXBkYXRlTW9udGhzSW5WaWV3KCk7XHJcbiAgICAgICAgfSxcclxuXHJcbiAgICAgICAgaXNJbnZhbGlkRGF0ZTogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICBpc0N1c3RvbURhdGU6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfSxcclxuXHJcbiAgICAgICAgdXBkYXRlVmlldzogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnRpbWVQaWNrZXIpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyVGltZVBpY2tlcignbGVmdCcpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5yZW5kZXJUaW1lUGlja2VyKCdyaWdodCcpO1xyXG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLmVuZERhdGUpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbnRhaW5lci5maW5kKCcucmlnaHQgLmNhbGVuZGFyLXRpbWUgc2VsZWN0JykuYXR0cignZGlzYWJsZWQnLCAnZGlzYWJsZWQnKS5hZGRDbGFzcygnZGlzYWJsZWQnKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb250YWluZXIuZmluZCgnLnJpZ2h0IC5jYWxlbmRhci10aW1lIHNlbGVjdCcpLnJlbW92ZUF0dHIoJ2Rpc2FibGVkJykucmVtb3ZlQ2xhc3MoJ2Rpc2FibGVkJyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHRoaXMuZW5kRGF0ZSlcclxuICAgICAgICAgICAgICAgIHRoaXMuY29udGFpbmVyLmZpbmQoJy5kcnAtc2VsZWN0ZWQnKS5odG1sKHRoaXMuc3RhcnREYXRlLmZvcm1hdCh0aGlzLmxvY2FsZS5mb3JtYXQpICsgdGhpcy5sb2NhbGUuc2VwYXJhdG9yICsgdGhpcy5lbmREYXRlLmZvcm1hdCh0aGlzLmxvY2FsZS5mb3JtYXQpKTtcclxuICAgICAgICAgICAgdGhpcy51cGRhdGVNb250aHNJblZpZXcoKTtcclxuICAgICAgICAgICAgdGhpcy51cGRhdGVDYWxlbmRhcnMoKTtcclxuICAgICAgICAgICAgdGhpcy51cGRhdGVGb3JtSW5wdXRzKCk7XHJcbiAgICAgICAgfSxcclxuXHJcbiAgICAgICAgdXBkYXRlTW9udGhzSW5WaWV3OiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuZW5kRGF0ZSkge1xyXG5cclxuICAgICAgICAgICAgICAgIC8vaWYgYm90aCBkYXRlcyBhcmUgdmlzaWJsZSBhbHJlYWR5LCBkbyBub3RoaW5nXHJcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuc2luZ2xlRGF0ZVBpY2tlciAmJiB0aGlzLmxlZnRDYWxlbmRhci5tb250aCAmJiB0aGlzLnJpZ2h0Q2FsZW5kYXIubW9udGggJiZcclxuICAgICAgICAgICAgICAgICAgICAodGhpcy5zdGFydERhdGUuZm9ybWF0KCdZWVlZLU1NJykgPT0gdGhpcy5sZWZ0Q2FsZW5kYXIubW9udGguZm9ybWF0KCdZWVlZLU1NJykgfHwgdGhpcy5zdGFydERhdGUuZm9ybWF0KCdZWVlZLU1NJykgPT0gdGhpcy5yaWdodENhbGVuZGFyLm1vbnRoLmZvcm1hdCgnWVlZWS1NTScpKVxyXG4gICAgICAgICAgICAgICAgICAgICYmXHJcbiAgICAgICAgICAgICAgICAgICAgKHRoaXMuZW5kRGF0ZS5mb3JtYXQoJ1lZWVktTU0nKSA9PSB0aGlzLmxlZnRDYWxlbmRhci5tb250aC5mb3JtYXQoJ1lZWVktTU0nKSB8fCB0aGlzLmVuZERhdGUuZm9ybWF0KCdZWVlZLU1NJykgPT0gdGhpcy5yaWdodENhbGVuZGFyLm1vbnRoLmZvcm1hdCgnWVlZWS1NTScpKVxyXG4gICAgICAgICAgICAgICAgICAgICkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICB0aGlzLmxlZnRDYWxlbmRhci5tb250aCA9IHRoaXMuc3RhcnREYXRlLmNsb25lKCkuZGF0ZSgyKTtcclxuICAgICAgICAgICAgICAgIGlmICghdGhpcy5saW5rZWRDYWxlbmRhcnMgJiYgKHRoaXMuZW5kRGF0ZS5tb250aCgpICE9IHRoaXMuc3RhcnREYXRlLm1vbnRoKCkgfHwgdGhpcy5lbmREYXRlLnllYXIoKSAhPSB0aGlzLnN0YXJ0RGF0ZS55ZWFyKCkpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yaWdodENhbGVuZGFyLm1vbnRoID0gdGhpcy5lbmREYXRlLmNsb25lKCkuZGF0ZSgyKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yaWdodENhbGVuZGFyLm1vbnRoID0gdGhpcy5zdGFydERhdGUuY2xvbmUoKS5kYXRlKDIpLmFkZCgxLCAnbW9udGgnKTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5sZWZ0Q2FsZW5kYXIubW9udGguZm9ybWF0KCdZWVlZLU1NJykgIT0gdGhpcy5zdGFydERhdGUuZm9ybWF0KCdZWVlZLU1NJykgJiYgdGhpcy5yaWdodENhbGVuZGFyLm1vbnRoLmZvcm1hdCgnWVlZWS1NTScpICE9IHRoaXMuc3RhcnREYXRlLmZvcm1hdCgnWVlZWS1NTScpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5sZWZ0Q2FsZW5kYXIubW9udGggPSB0aGlzLnN0YXJ0RGF0ZS5jbG9uZSgpLmRhdGUoMik7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yaWdodENhbGVuZGFyLm1vbnRoID0gdGhpcy5zdGFydERhdGUuY2xvbmUoKS5kYXRlKDIpLmFkZCgxLCAnbW9udGgnKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAodGhpcy5tYXhEYXRlICYmIHRoaXMubGlua2VkQ2FsZW5kYXJzICYmICF0aGlzLnNpbmdsZURhdGVQaWNrZXIgJiYgdGhpcy5yaWdodENhbGVuZGFyLm1vbnRoID4gdGhpcy5tYXhEYXRlKSB7XHJcbiAgICAgICAgICAgICAgdGhpcy5yaWdodENhbGVuZGFyLm1vbnRoID0gdGhpcy5tYXhEYXRlLmNsb25lKCkuZGF0ZSgyKTtcclxuICAgICAgICAgICAgICB0aGlzLmxlZnRDYWxlbmRhci5tb250aCA9IHRoaXMubWF4RGF0ZS5jbG9uZSgpLmRhdGUoMikuc3VidHJhY3QoMSwgJ21vbnRoJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICB1cGRhdGVDYWxlbmRhcnM6IGZ1bmN0aW9uKCkge1xyXG5cclxuICAgICAgICAgICAgaWYgKHRoaXMudGltZVBpY2tlcikge1xyXG4gICAgICAgICAgICAgICAgdmFyIGhvdXIsIG1pbnV0ZSwgc2Vjb25kO1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZW5kRGF0ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGhvdXIgPSBwYXJzZUludCh0aGlzLmNvbnRhaW5lci5maW5kKCcubGVmdCAuaG91cnNlbGVjdCcpLnZhbCgpLCAxMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgbWludXRlID0gcGFyc2VJbnQodGhpcy5jb250YWluZXIuZmluZCgnLmxlZnQgLm1pbnV0ZXNlbGVjdCcpLnZhbCgpLCAxMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzTmFOKG1pbnV0ZSkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWludXRlID0gcGFyc2VJbnQodGhpcy5jb250YWluZXIuZmluZCgnLmxlZnQgLm1pbnV0ZXNlbGVjdCBvcHRpb246bGFzdCcpLnZhbCgpLCAxMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHNlY29uZCA9IHRoaXMudGltZVBpY2tlclNlY29uZHMgPyBwYXJzZUludCh0aGlzLmNvbnRhaW5lci5maW5kKCcubGVmdCAuc2Vjb25kc2VsZWN0JykudmFsKCksIDEwKSA6IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCF0aGlzLnRpbWVQaWNrZXIyNEhvdXIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGFtcG0gPSB0aGlzLmNvbnRhaW5lci5maW5kKCcubGVmdCAuYW1wbXNlbGVjdCcpLnZhbCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYW1wbSA9PT0gJ1BNJyAmJiBob3VyIDwgMTIpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBob3VyICs9IDEyO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYW1wbSA9PT0gJ0FNJyAmJiBob3VyID09PSAxMilcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhvdXIgPSAwO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaG91ciA9IHBhcnNlSW50KHRoaXMuY29udGFpbmVyLmZpbmQoJy5yaWdodCAuaG91cnNlbGVjdCcpLnZhbCgpLCAxMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgbWludXRlID0gcGFyc2VJbnQodGhpcy5jb250YWluZXIuZmluZCgnLnJpZ2h0IC5taW51dGVzZWxlY3QnKS52YWwoKSwgMTApO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChpc05hTihtaW51dGUpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1pbnV0ZSA9IHBhcnNlSW50KHRoaXMuY29udGFpbmVyLmZpbmQoJy5yaWdodCAubWludXRlc2VsZWN0IG9wdGlvbjpsYXN0JykudmFsKCksIDEwKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgc2Vjb25kID0gdGhpcy50aW1lUGlja2VyU2Vjb25kcyA/IHBhcnNlSW50KHRoaXMuY29udGFpbmVyLmZpbmQoJy5yaWdodCAuc2Vjb25kc2VsZWN0JykudmFsKCksIDEwKSA6IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCF0aGlzLnRpbWVQaWNrZXIyNEhvdXIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGFtcG0gPSB0aGlzLmNvbnRhaW5lci5maW5kKCcucmlnaHQgLmFtcG1zZWxlY3QnKS52YWwoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFtcG0gPT09ICdQTScgJiYgaG91ciA8IDEyKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaG91ciArPSAxMjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFtcG0gPT09ICdBTScgJiYgaG91ciA9PT0gMTIpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBob3VyID0gMDtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxlZnRDYWxlbmRhci5tb250aC5ob3VyKGhvdXIpLm1pbnV0ZShtaW51dGUpLnNlY29uZChzZWNvbmQpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5yaWdodENhbGVuZGFyLm1vbnRoLmhvdXIoaG91cikubWludXRlKG1pbnV0ZSkuc2Vjb25kKHNlY29uZCk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHRoaXMucmVuZGVyQ2FsZW5kYXIoJ2xlZnQnKTtcclxuICAgICAgICAgICAgdGhpcy5yZW5kZXJDYWxlbmRhcigncmlnaHQnKTtcclxuXHJcbiAgICAgICAgICAgIC8vaGlnaGxpZ2h0IGFueSBwcmVkZWZpbmVkIHJhbmdlIG1hdGNoaW5nIHRoZSBjdXJyZW50IHN0YXJ0IGFuZCBlbmQgZGF0ZXNcclxuICAgICAgICAgICAgdGhpcy5jb250YWluZXIuZmluZCgnLnJhbmdlcyBsaScpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgaWYgKHRoaXMuZW5kRGF0ZSA9PSBudWxsKSByZXR1cm47XHJcblxyXG4gICAgICAgICAgICB0aGlzLmNhbGN1bGF0ZUNob3NlbkxhYmVsKCk7XHJcbiAgICAgICAgfSxcclxuXHJcbiAgICAgICAgcmVuZGVyQ2FsZW5kYXI6IGZ1bmN0aW9uKHNpZGUpIHtcclxuXHJcbiAgICAgICAgICAgIC8vXHJcbiAgICAgICAgICAgIC8vIEJ1aWxkIHRoZSBtYXRyaXggb2YgZGF0ZXMgdGhhdCB3aWxsIHBvcHVsYXRlIHRoZSBjYWxlbmRhclxyXG4gICAgICAgICAgICAvL1xyXG5cclxuICAgICAgICAgICAgdmFyIGNhbGVuZGFyID0gc2lkZSA9PSAnbGVmdCcgPyB0aGlzLmxlZnRDYWxlbmRhciA6IHRoaXMucmlnaHRDYWxlbmRhcjtcclxuICAgICAgICAgICAgdmFyIG1vbnRoID0gY2FsZW5kYXIubW9udGgubW9udGgoKTtcclxuICAgICAgICAgICAgdmFyIHllYXIgPSBjYWxlbmRhci5tb250aC55ZWFyKCk7XHJcbiAgICAgICAgICAgIHZhciBob3VyID0gY2FsZW5kYXIubW9udGguaG91cigpO1xyXG4gICAgICAgICAgICB2YXIgbWludXRlID0gY2FsZW5kYXIubW9udGgubWludXRlKCk7XHJcbiAgICAgICAgICAgIHZhciBzZWNvbmQgPSBjYWxlbmRhci5tb250aC5zZWNvbmQoKTtcclxuICAgICAgICAgICAgdmFyIGRheXNJbk1vbnRoID0gbW9tZW50KFt5ZWFyLCBtb250aF0pLmRheXNJbk1vbnRoKCk7XHJcbiAgICAgICAgICAgIHZhciBmaXJzdERheSA9IG1vbWVudChbeWVhciwgbW9udGgsIDFdKTtcclxuICAgICAgICAgICAgdmFyIGxhc3REYXkgPSBtb21lbnQoW3llYXIsIG1vbnRoLCBkYXlzSW5Nb250aF0pO1xyXG4gICAgICAgICAgICB2YXIgbGFzdE1vbnRoID0gbW9tZW50KGZpcnN0RGF5KS5zdWJ0cmFjdCgxLCAnbW9udGgnKS5tb250aCgpO1xyXG4gICAgICAgICAgICB2YXIgbGFzdFllYXIgPSBtb21lbnQoZmlyc3REYXkpLnN1YnRyYWN0KDEsICdtb250aCcpLnllYXIoKTtcclxuICAgICAgICAgICAgdmFyIGRheXNJbkxhc3RNb250aCA9IG1vbWVudChbbGFzdFllYXIsIGxhc3RNb250aF0pLmRheXNJbk1vbnRoKCk7XHJcbiAgICAgICAgICAgIHZhciBkYXlPZldlZWsgPSBmaXJzdERheS5kYXkoKTtcclxuXHJcbiAgICAgICAgICAgIC8vaW5pdGlhbGl6ZSBhIDYgcm93cyB4IDcgY29sdW1ucyBhcnJheSBmb3IgdGhlIGNhbGVuZGFyXHJcbiAgICAgICAgICAgIHZhciBjYWxlbmRhciA9IFtdO1xyXG4gICAgICAgICAgICBjYWxlbmRhci5maXJzdERheSA9IGZpcnN0RGF5O1xyXG4gICAgICAgICAgICBjYWxlbmRhci5sYXN0RGF5ID0gbGFzdERheTtcclxuXHJcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgNjsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICBjYWxlbmRhcltpXSA9IFtdO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAvL3BvcHVsYXRlIHRoZSBjYWxlbmRhciB3aXRoIGRhdGUgb2JqZWN0c1xyXG4gICAgICAgICAgICB2YXIgc3RhcnREYXkgPSBkYXlzSW5MYXN0TW9udGggLSBkYXlPZldlZWsgKyB0aGlzLmxvY2FsZS5maXJzdERheSArIDE7XHJcbiAgICAgICAgICAgIGlmIChzdGFydERheSA+IGRheXNJbkxhc3RNb250aClcclxuICAgICAgICAgICAgICAgIHN0YXJ0RGF5IC09IDc7XHJcblxyXG4gICAgICAgICAgICBpZiAoZGF5T2ZXZWVrID09IHRoaXMubG9jYWxlLmZpcnN0RGF5KVxyXG4gICAgICAgICAgICAgICAgc3RhcnREYXkgPSBkYXlzSW5MYXN0TW9udGggLSA2O1xyXG5cclxuICAgICAgICAgICAgdmFyIGN1ckRhdGUgPSBtb21lbnQoW2xhc3RZZWFyLCBsYXN0TW9udGgsIHN0YXJ0RGF5LCAxMiwgbWludXRlLCBzZWNvbmRdKTtcclxuXHJcbiAgICAgICAgICAgIHZhciBjb2wsIHJvdztcclxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGNvbCA9IDAsIHJvdyA9IDA7IGkgPCA0MjsgaSsrLCBjb2wrKywgY3VyRGF0ZSA9IG1vbWVudChjdXJEYXRlKS5hZGQoMjQsICdob3VyJykpIHtcclxuICAgICAgICAgICAgICAgIGlmIChpID4gMCAmJiBjb2wgJSA3ID09PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29sID0gMDtcclxuICAgICAgICAgICAgICAgICAgICByb3crKztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGNhbGVuZGFyW3Jvd11bY29sXSA9IGN1ckRhdGUuY2xvbmUoKS5ob3VyKGhvdXIpLm1pbnV0ZShtaW51dGUpLnNlY29uZChzZWNvbmQpO1xyXG4gICAgICAgICAgICAgICAgY3VyRGF0ZS5ob3VyKDEyKTtcclxuXHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5taW5EYXRlICYmIGNhbGVuZGFyW3Jvd11bY29sXS5mb3JtYXQoJ1lZWVktTU0tREQnKSA9PSB0aGlzLm1pbkRhdGUuZm9ybWF0KCdZWVlZLU1NLUREJykgJiYgY2FsZW5kYXJbcm93XVtjb2xdLmlzQmVmb3JlKHRoaXMubWluRGF0ZSkgJiYgc2lkZSA9PSAnbGVmdCcpIHtcclxuICAgICAgICAgICAgICAgICAgICBjYWxlbmRhcltyb3ddW2NvbF0gPSB0aGlzLm1pbkRhdGUuY2xvbmUoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5tYXhEYXRlICYmIGNhbGVuZGFyW3Jvd11bY29sXS5mb3JtYXQoJ1lZWVktTU0tREQnKSA9PSB0aGlzLm1heERhdGUuZm9ybWF0KCdZWVlZLU1NLUREJykgJiYgY2FsZW5kYXJbcm93XVtjb2xdLmlzQWZ0ZXIodGhpcy5tYXhEYXRlKSAmJiBzaWRlID09ICdyaWdodCcpIHtcclxuICAgICAgICAgICAgICAgICAgICBjYWxlbmRhcltyb3ddW2NvbF0gPSB0aGlzLm1heERhdGUuY2xvbmUoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC8vbWFrZSB0aGUgY2FsZW5kYXIgb2JqZWN0IGF2YWlsYWJsZSB0byBob3ZlckRhdGUvY2xpY2tEYXRlXHJcbiAgICAgICAgICAgIGlmIChzaWRlID09ICdsZWZ0Jykge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sZWZ0Q2FsZW5kYXIuY2FsZW5kYXIgPSBjYWxlbmRhcjtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMucmlnaHRDYWxlbmRhci5jYWxlbmRhciA9IGNhbGVuZGFyO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAvL1xyXG4gICAgICAgICAgICAvLyBEaXNwbGF5IHRoZSBjYWxlbmRhclxyXG4gICAgICAgICAgICAvL1xyXG5cclxuICAgICAgICAgICAgdmFyIG1pbkRhdGUgPSBzaWRlID09ICdsZWZ0JyA/IHRoaXMubWluRGF0ZSA6IHRoaXMuc3RhcnREYXRlO1xyXG4gICAgICAgICAgICB2YXIgbWF4RGF0ZSA9IHRoaXMubWF4RGF0ZTtcclxuICAgICAgICAgICAgdmFyIHNlbGVjdGVkID0gc2lkZSA9PSAnbGVmdCcgPyB0aGlzLnN0YXJ0RGF0ZSA6IHRoaXMuZW5kRGF0ZTtcclxuICAgICAgICAgICAgdmFyIGFycm93ID0gdGhpcy5sb2NhbGUuZGlyZWN0aW9uID09ICdsdHInID8ge2xlZnQ6ICdjaGV2cm9uLWxlZnQnLCByaWdodDogJ2NoZXZyb24tcmlnaHQnfSA6IHtsZWZ0OiAnY2hldnJvbi1yaWdodCcsIHJpZ2h0OiAnY2hldnJvbi1sZWZ0J307XHJcblxyXG4gICAgICAgICAgICB2YXIgaHRtbCA9ICc8dGFibGUgY2xhc3M9XCJ0YWJsZS1jb25kZW5zZWRcIj4nO1xyXG4gICAgICAgICAgICBodG1sICs9ICc8dGhlYWQ+JztcclxuICAgICAgICAgICAgaHRtbCArPSAnPHRyPic7XHJcblxyXG4gICAgICAgICAgICAvLyBhZGQgZW1wdHkgY2VsbCBmb3Igd2VlayBudW1iZXJcclxuICAgICAgICAgICAgaWYgKHRoaXMuc2hvd1dlZWtOdW1iZXJzIHx8IHRoaXMuc2hvd0lTT1dlZWtOdW1iZXJzKVxyXG4gICAgICAgICAgICAgICAgaHRtbCArPSAnPHRoPjwvdGg+JztcclxuXHJcbiAgICAgICAgICAgIGlmICgoIW1pbkRhdGUgfHwgbWluRGF0ZS5pc0JlZm9yZShjYWxlbmRhci5maXJzdERheSkpICYmICghdGhpcy5saW5rZWRDYWxlbmRhcnMgfHwgc2lkZSA9PSAnbGVmdCcpKSB7XHJcbiAgICAgICAgICAgICAgICBodG1sICs9ICc8dGggY2xhc3M9XCJwcmV2IGF2YWlsYWJsZVwiPjxzcGFuPjwvc3Bhbj48L3RoPic7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBodG1sICs9ICc8dGg+PC90aD4nO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB2YXIgZGF0ZUh0bWwgPSB0aGlzLmxvY2FsZS5tb250aE5hbWVzW2NhbGVuZGFyWzFdWzFdLm1vbnRoKCldICsgY2FsZW5kYXJbMV1bMV0uZm9ybWF0KFwiIFlZWVlcIik7XHJcblxyXG4gICAgICAgICAgICBpZiAodGhpcy5zaG93RHJvcGRvd25zKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgY3VycmVudE1vbnRoID0gY2FsZW5kYXJbMV1bMV0ubW9udGgoKTtcclxuICAgICAgICAgICAgICAgIHZhciBjdXJyZW50WWVhciA9IGNhbGVuZGFyWzFdWzFdLnllYXIoKTtcclxuICAgICAgICAgICAgICAgIHZhciBtYXhZZWFyID0gKG1heERhdGUgJiYgbWF4RGF0ZS55ZWFyKCkpIHx8ICh0aGlzLm1heFllYXIpO1xyXG4gICAgICAgICAgICAgICAgdmFyIG1pblllYXIgPSAobWluRGF0ZSAmJiBtaW5EYXRlLnllYXIoKSkgfHwgKHRoaXMubWluWWVhcik7XHJcbiAgICAgICAgICAgICAgICB2YXIgaW5NaW5ZZWFyID0gY3VycmVudFllYXIgPT0gbWluWWVhcjtcclxuICAgICAgICAgICAgICAgIHZhciBpbk1heFllYXIgPSBjdXJyZW50WWVhciA9PSBtYXhZZWFyO1xyXG5cclxuICAgICAgICAgICAgICAgIHZhciBtb250aEh0bWwgPSAnPHNlbGVjdCBjbGFzcz1cIm1vbnRoc2VsZWN0XCI+JztcclxuICAgICAgICAgICAgICAgIGZvciAodmFyIG0gPSAwOyBtIDwgMTI7IG0rKykge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICgoIWluTWluWWVhciB8fCAobWluRGF0ZSAmJiBtID49IG1pbkRhdGUubW9udGgoKSkpICYmICghaW5NYXhZZWFyIHx8IChtYXhEYXRlICYmIG0gPD0gbWF4RGF0ZS5tb250aCgpKSkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbW9udGhIdG1sICs9IFwiPG9wdGlvbiB2YWx1ZT0nXCIgKyBtICsgXCInXCIgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKG0gPT09IGN1cnJlbnRNb250aCA/IFwiIHNlbGVjdGVkPSdzZWxlY3RlZCdcIiA6IFwiXCIpICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiPlwiICsgdGhpcy5sb2NhbGUubW9udGhOYW1lc1ttXSArIFwiPC9vcHRpb24+XCI7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbW9udGhIdG1sICs9IFwiPG9wdGlvbiB2YWx1ZT0nXCIgKyBtICsgXCInXCIgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKG0gPT09IGN1cnJlbnRNb250aCA/IFwiIHNlbGVjdGVkPSdzZWxlY3RlZCdcIiA6IFwiXCIpICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiIGRpc2FibGVkPSdkaXNhYmxlZCc+XCIgKyB0aGlzLmxvY2FsZS5tb250aE5hbWVzW21dICsgXCI8L29wdGlvbj5cIjtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBtb250aEh0bWwgKz0gXCI8L3NlbGVjdD5cIjtcclxuXHJcbiAgICAgICAgICAgICAgICB2YXIgeWVhckh0bWwgPSAnPHNlbGVjdCBjbGFzcz1cInllYXJzZWxlY3RcIj4nO1xyXG4gICAgICAgICAgICAgICAgZm9yICh2YXIgeSA9IG1pblllYXI7IHkgPD0gbWF4WWVhcjsgeSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgeWVhckh0bWwgKz0gJzxvcHRpb24gdmFsdWU9XCInICsgeSArICdcIicgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAoeSA9PT0gY3VycmVudFllYXIgPyAnIHNlbGVjdGVkPVwic2VsZWN0ZWRcIicgOiAnJykgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAnPicgKyB5ICsgJzwvb3B0aW9uPic7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB5ZWFySHRtbCArPSAnPC9zZWxlY3Q+JztcclxuXHJcbiAgICAgICAgICAgICAgICBkYXRlSHRtbCA9IG1vbnRoSHRtbCArIHllYXJIdG1sO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBodG1sICs9ICc8dGggY29sc3Bhbj1cIjVcIiBjbGFzcz1cIm1vbnRoXCI+JyArIGRhdGVIdG1sICsgJzwvdGg+JztcclxuICAgICAgICAgICAgaWYgKCghbWF4RGF0ZSB8fCBtYXhEYXRlLmlzQWZ0ZXIoY2FsZW5kYXIubGFzdERheSkpICYmICghdGhpcy5saW5rZWRDYWxlbmRhcnMgfHwgc2lkZSA9PSAncmlnaHQnIHx8IHRoaXMuc2luZ2xlRGF0ZVBpY2tlcikpIHtcclxuICAgICAgICAgICAgICAgIGh0bWwgKz0gJzx0aCBjbGFzcz1cIm5leHQgYXZhaWxhYmxlXCI+PHNwYW4+PC9zcGFuPjwvdGg+JztcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGh0bWwgKz0gJzx0aD48L3RoPic7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGh0bWwgKz0gJzwvdHI+JztcclxuICAgICAgICAgICAgaHRtbCArPSAnPHRyPic7XHJcblxyXG4gICAgICAgICAgICAvLyBhZGQgd2VlayBudW1iZXIgbGFiZWxcclxuICAgICAgICAgICAgaWYgKHRoaXMuc2hvd1dlZWtOdW1iZXJzIHx8IHRoaXMuc2hvd0lTT1dlZWtOdW1iZXJzKVxyXG4gICAgICAgICAgICAgICAgaHRtbCArPSAnPHRoIGNsYXNzPVwid2Vla1wiPicgKyB0aGlzLmxvY2FsZS53ZWVrTGFiZWwgKyAnPC90aD4nO1xyXG5cclxuICAgICAgICAgICAgJC5lYWNoKHRoaXMubG9jYWxlLmRheXNPZldlZWssIGZ1bmN0aW9uKGluZGV4LCBkYXlPZldlZWspIHtcclxuICAgICAgICAgICAgICAgIGh0bWwgKz0gJzx0aD4nICsgZGF5T2ZXZWVrICsgJzwvdGg+JztcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICBodG1sICs9ICc8L3RyPic7XHJcbiAgICAgICAgICAgIGh0bWwgKz0gJzwvdGhlYWQ+JztcclxuICAgICAgICAgICAgaHRtbCArPSAnPHRib2R5Pic7XHJcblxyXG4gICAgICAgICAgICAvL2FkanVzdCBtYXhEYXRlIHRvIHJlZmxlY3QgdGhlIG1heFNwYW4gc2V0dGluZyBpbiBvcmRlciB0b1xyXG4gICAgICAgICAgICAvL2dyZXkgb3V0IGVuZCBkYXRlcyBiZXlvbmQgdGhlIG1heFNwYW5cclxuICAgICAgICAgICAgaWYgKHRoaXMuZW5kRGF0ZSA9PSBudWxsICYmIHRoaXMubWF4U3Bhbikge1xyXG4gICAgICAgICAgICAgICAgdmFyIG1heExpbWl0ID0gdGhpcy5zdGFydERhdGUuY2xvbmUoKS5hZGQodGhpcy5tYXhTcGFuKS5lbmRPZignZGF5Jyk7XHJcbiAgICAgICAgICAgICAgICBpZiAoIW1heERhdGUgfHwgbWF4TGltaXQuaXNCZWZvcmUobWF4RGF0ZSkpIHtcclxuICAgICAgICAgICAgICAgICAgICBtYXhEYXRlID0gbWF4TGltaXQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGZvciAodmFyIHJvdyA9IDA7IHJvdyA8IDY7IHJvdysrKSB7XHJcbiAgICAgICAgICAgICAgICBodG1sICs9ICc8dHI+JztcclxuXHJcbiAgICAgICAgICAgICAgICAvLyBhZGQgd2VlayBudW1iZXJcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLnNob3dXZWVrTnVtYmVycylcclxuICAgICAgICAgICAgICAgICAgICBodG1sICs9ICc8dGQgY2xhc3M9XCJ3ZWVrXCI+JyArIGNhbGVuZGFyW3Jvd11bMF0ud2VlaygpICsgJzwvdGQ+JztcclxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKHRoaXMuc2hvd0lTT1dlZWtOdW1iZXJzKVxyXG4gICAgICAgICAgICAgICAgICAgIGh0bWwgKz0gJzx0ZCBjbGFzcz1cIndlZWtcIj4nICsgY2FsZW5kYXJbcm93XVswXS5pc29XZWVrKCkgKyAnPC90ZD4nO1xyXG5cclxuICAgICAgICAgICAgICAgIGZvciAodmFyIGNvbCA9IDA7IGNvbCA8IDc7IGNvbCsrKSB7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHZhciBjbGFzc2VzID0gW107XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIC8vaGlnaGxpZ2h0IHRvZGF5J3MgZGF0ZVxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChjYWxlbmRhcltyb3ddW2NvbF0uaXNTYW1lKG5ldyBEYXRlKCksIFwiZGF5XCIpKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc2VzLnB1c2goJ3RvZGF5Jyk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIC8vaGlnaGxpZ2h0IHdlZWtlbmRzXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNhbGVuZGFyW3Jvd11bY29sXS5pc29XZWVrZGF5KCkgPiA1KVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc2VzLnB1c2goJ3dlZWtlbmQnKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgLy9ncmV5IG91dCB0aGUgZGF0ZXMgaW4gb3RoZXIgbW9udGhzIGRpc3BsYXllZCBhdCBiZWdpbm5pbmcgYW5kIGVuZCBvZiB0aGlzIGNhbGVuZGFyXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNhbGVuZGFyW3Jvd11bY29sXS5tb250aCgpICE9IGNhbGVuZGFyWzFdWzFdLm1vbnRoKCkpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzZXMucHVzaCgnb2ZmJywgJ2VuZHMnKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgLy9kb24ndCBhbGxvdyBzZWxlY3Rpb24gb2YgZGF0ZXMgYmVmb3JlIHRoZSBtaW5pbXVtIGRhdGVcclxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5taW5EYXRlICYmIGNhbGVuZGFyW3Jvd11bY29sXS5pc0JlZm9yZSh0aGlzLm1pbkRhdGUsICdkYXknKSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3Nlcy5wdXNoKCdvZmYnLCAnZGlzYWJsZWQnKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgLy9kb24ndCBhbGxvdyBzZWxlY3Rpb24gb2YgZGF0ZXMgYWZ0ZXIgdGhlIG1heGltdW0gZGF0ZVxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChtYXhEYXRlICYmIGNhbGVuZGFyW3Jvd11bY29sXS5pc0FmdGVyKG1heERhdGUsICdkYXknKSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3Nlcy5wdXNoKCdvZmYnLCAnZGlzYWJsZWQnKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgLy9kb24ndCBhbGxvdyBzZWxlY3Rpb24gb2YgZGF0ZSBpZiBhIGN1c3RvbSBmdW5jdGlvbiBkZWNpZGVzIGl0J3MgaW52YWxpZFxyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmlzSW52YWxpZERhdGUoY2FsZW5kYXJbcm93XVtjb2xdKSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3Nlcy5wdXNoKCdvZmYnLCAnZGlzYWJsZWQnKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgLy9oaWdobGlnaHQgdGhlIGN1cnJlbnRseSBzZWxlY3RlZCBzdGFydCBkYXRlXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNhbGVuZGFyW3Jvd11bY29sXS5mb3JtYXQoJ1lZWVktTU0tREQnKSA9PSB0aGlzLnN0YXJ0RGF0ZS5mb3JtYXQoJ1lZWVktTU0tREQnKSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3Nlcy5wdXNoKCdhY3RpdmUnLCAnc3RhcnQtZGF0ZScpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAvL2hpZ2hsaWdodCB0aGUgY3VycmVudGx5IHNlbGVjdGVkIGVuZCBkYXRlXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuZW5kRGF0ZSAhPSBudWxsICYmIGNhbGVuZGFyW3Jvd11bY29sXS5mb3JtYXQoJ1lZWVktTU0tREQnKSA9PSB0aGlzLmVuZERhdGUuZm9ybWF0KCdZWVlZLU1NLUREJykpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzZXMucHVzaCgnYWN0aXZlJywgJ2VuZC1kYXRlJyk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIC8vaGlnaGxpZ2h0IGRhdGVzIGluLWJldHdlZW4gdGhlIHNlbGVjdGVkIGRhdGVzXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuZW5kRGF0ZSAhPSBudWxsICYmIGNhbGVuZGFyW3Jvd11bY29sXSA+IHRoaXMuc3RhcnREYXRlICYmIGNhbGVuZGFyW3Jvd11bY29sXSA8IHRoaXMuZW5kRGF0ZSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3Nlcy5wdXNoKCdpbi1yYW5nZScpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAvL2FwcGx5IGN1c3RvbSBjbGFzc2VzIGZvciB0aGlzIGRhdGVcclxuICAgICAgICAgICAgICAgICAgICB2YXIgaXNDdXN0b20gPSB0aGlzLmlzQ3VzdG9tRGF0ZShjYWxlbmRhcltyb3ddW2NvbF0pO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChpc0N1c3RvbSAhPT0gZmFsc2UpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBpc0N1c3RvbSA9PT0gJ3N0cmluZycpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc2VzLnB1c2goaXNDdXN0b20pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShjbGFzc2VzLCBpc0N1c3RvbSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICB2YXIgY25hbWUgPSAnJywgZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNsYXNzZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY25hbWUgKz0gY2xhc3Nlc1tpXSArICcgJztcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNsYXNzZXNbaV0gPT0gJ2Rpc2FibGVkJylcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFkaXNhYmxlZClcclxuICAgICAgICAgICAgICAgICAgICAgICAgY25hbWUgKz0gJ2F2YWlsYWJsZSc7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGh0bWwgKz0gJzx0ZCBjbGFzcz1cIicgKyBjbmFtZS5yZXBsYWNlKC9eXFxzK3xcXHMrJC9nLCAnJykgKyAnXCIgZGF0YS10aXRsZT1cIicgKyAncicgKyByb3cgKyAnYycgKyBjb2wgKyAnXCI+JyArIGNhbGVuZGFyW3Jvd11bY29sXS5kYXRlKCkgKyAnPC90ZD4nO1xyXG5cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGh0bWwgKz0gJzwvdHI+JztcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaHRtbCArPSAnPC90Ym9keT4nO1xyXG4gICAgICAgICAgICBodG1sICs9ICc8L3RhYmxlPic7XHJcblxyXG4gICAgICAgICAgICB0aGlzLmNvbnRhaW5lci5maW5kKCcuZHJwLWNhbGVuZGFyLicgKyBzaWRlICsgJyAuY2FsZW5kYXItdGFibGUnKS5odG1sKGh0bWwpO1xyXG5cclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICByZW5kZXJUaW1lUGlja2VyOiBmdW5jdGlvbihzaWRlKSB7XHJcblxyXG4gICAgICAgICAgICAvLyBEb24ndCBib3RoZXIgdXBkYXRpbmcgdGhlIHRpbWUgcGlja2VyIGlmIGl0J3MgY3VycmVudGx5IGRpc2FibGVkXHJcbiAgICAgICAgICAgIC8vIGJlY2F1c2UgYW4gZW5kIGRhdGUgaGFzbid0IGJlZW4gY2xpY2tlZCB5ZXRcclxuICAgICAgICAgICAgaWYgKHNpZGUgPT0gJ3JpZ2h0JyAmJiAhdGhpcy5lbmREYXRlKSByZXR1cm47XHJcblxyXG4gICAgICAgICAgICB2YXIgaHRtbCwgc2VsZWN0ZWQsIG1pbkRhdGUsIG1heERhdGUgPSB0aGlzLm1heERhdGU7XHJcblxyXG4gICAgICAgICAgICBpZiAodGhpcy5tYXhTcGFuICYmICghdGhpcy5tYXhEYXRlIHx8IHRoaXMuc3RhcnREYXRlLmNsb25lKCkuYWRkKHRoaXMubWF4U3BhbikuaXNCZWZvcmUodGhpcy5tYXhEYXRlKSkpXHJcbiAgICAgICAgICAgICAgICBtYXhEYXRlID0gdGhpcy5zdGFydERhdGUuY2xvbmUoKS5hZGQodGhpcy5tYXhTcGFuKTtcclxuXHJcbiAgICAgICAgICAgIGlmIChzaWRlID09ICdsZWZ0Jykge1xyXG4gICAgICAgICAgICAgICAgc2VsZWN0ZWQgPSB0aGlzLnN0YXJ0RGF0ZS5jbG9uZSgpO1xyXG4gICAgICAgICAgICAgICAgbWluRGF0ZSA9IHRoaXMubWluRGF0ZTtcclxuICAgICAgICAgICAgfSBlbHNlIGlmIChzaWRlID09ICdyaWdodCcpIHtcclxuICAgICAgICAgICAgICAgIHNlbGVjdGVkID0gdGhpcy5lbmREYXRlLmNsb25lKCk7XHJcbiAgICAgICAgICAgICAgICBtaW5EYXRlID0gdGhpcy5zdGFydERhdGU7XHJcblxyXG4gICAgICAgICAgICAgICAgLy9QcmVzZXJ2ZSB0aGUgdGltZSBhbHJlYWR5IHNlbGVjdGVkXHJcbiAgICAgICAgICAgICAgICB2YXIgdGltZVNlbGVjdG9yID0gdGhpcy5jb250YWluZXIuZmluZCgnLmRycC1jYWxlbmRhci5yaWdodCAuY2FsZW5kYXItdGltZScpO1xyXG4gICAgICAgICAgICAgICAgaWYgKHRpbWVTZWxlY3Rvci5odG1sKCkgIT0gJycpIHtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQuaG91cighaXNOYU4oc2VsZWN0ZWQuaG91cigpKSA/IHNlbGVjdGVkLmhvdXIoKSA6IHRpbWVTZWxlY3Rvci5maW5kKCcuaG91cnNlbGVjdCBvcHRpb246c2VsZWN0ZWQnKS52YWwoKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQubWludXRlKCFpc05hTihzZWxlY3RlZC5taW51dGUoKSkgPyBzZWxlY3RlZC5taW51dGUoKSA6IHRpbWVTZWxlY3Rvci5maW5kKCcubWludXRlc2VsZWN0IG9wdGlvbjpzZWxlY3RlZCcpLnZhbCgpKTtcclxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZC5zZWNvbmQoIWlzTmFOKHNlbGVjdGVkLnNlY29uZCgpKSA/IHNlbGVjdGVkLnNlY29uZCgpIDogdGltZVNlbGVjdG9yLmZpbmQoJy5zZWNvbmRzZWxlY3Qgb3B0aW9uOnNlbGVjdGVkJykudmFsKCkpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBpZiAoIXRoaXMudGltZVBpY2tlcjI0SG91cikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgYW1wbSA9IHRpbWVTZWxlY3Rvci5maW5kKCcuYW1wbXNlbGVjdCBvcHRpb246c2VsZWN0ZWQnKS52YWwoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFtcG0gPT09ICdQTScgJiYgc2VsZWN0ZWQuaG91cigpIDwgMTIpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZC5ob3VyKHNlbGVjdGVkLmhvdXIoKSArIDEyKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFtcG0gPT09ICdBTScgJiYgc2VsZWN0ZWQuaG91cigpID09PSAxMilcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkLmhvdXIoMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBpZiAoc2VsZWN0ZWQuaXNCZWZvcmUodGhpcy5zdGFydERhdGUpKVxyXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkID0gdGhpcy5zdGFydERhdGUuY2xvbmUoKTtcclxuXHJcbiAgICAgICAgICAgICAgICBpZiAobWF4RGF0ZSAmJiBzZWxlY3RlZC5pc0FmdGVyKG1heERhdGUpKVxyXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkID0gbWF4RGF0ZS5jbG9uZSgpO1xyXG5cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLy9cclxuICAgICAgICAgICAgLy8gaG91cnNcclxuICAgICAgICAgICAgLy9cclxuXHJcbiAgICAgICAgICAgIGh0bWwgPSAnPHNlbGVjdCBjbGFzcz1cImhvdXJzZWxlY3RcIj4nO1xyXG5cclxuICAgICAgICAgICAgdmFyIHN0YXJ0ID0gdGhpcy50aW1lUGlja2VyMjRIb3VyID8gMCA6IDE7XHJcbiAgICAgICAgICAgIHZhciBlbmQgPSB0aGlzLnRpbWVQaWNrZXIyNEhvdXIgPyAyMyA6IDEyO1xyXG5cclxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IHN0YXJ0OyBpIDw9IGVuZDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgaV9pbl8yNCA9IGk7XHJcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMudGltZVBpY2tlcjI0SG91cilcclxuICAgICAgICAgICAgICAgICAgICBpX2luXzI0ID0gc2VsZWN0ZWQuaG91cigpID49IDEyID8gKGkgPT0gMTIgPyAxMiA6IGkgKyAxMikgOiAoaSA9PSAxMiA/IDAgOiBpKTtcclxuXHJcbiAgICAgICAgICAgICAgICB2YXIgdGltZSA9IHNlbGVjdGVkLmNsb25lKCkuaG91cihpX2luXzI0KTtcclxuICAgICAgICAgICAgICAgIHZhciBkaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgaWYgKG1pbkRhdGUgJiYgdGltZS5taW51dGUoNTkpLmlzQmVmb3JlKG1pbkRhdGUpKVxyXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIGlmIChtYXhEYXRlICYmIHRpbWUubWludXRlKDApLmlzQWZ0ZXIobWF4RGF0ZSkpXHJcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQgPSB0cnVlO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmIChpX2luXzI0ID09IHNlbGVjdGVkLmhvdXIoKSAmJiAhZGlzYWJsZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICBodG1sICs9ICc8b3B0aW9uIHZhbHVlPVwiJyArIGkgKyAnXCIgc2VsZWN0ZWQ9XCJzZWxlY3RlZFwiPicgKyBpICsgJzwvb3B0aW9uPic7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGRpc2FibGVkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaHRtbCArPSAnPG9wdGlvbiB2YWx1ZT1cIicgKyBpICsgJ1wiIGRpc2FibGVkPVwiZGlzYWJsZWRcIiBjbGFzcz1cImRpc2FibGVkXCI+JyArIGkgKyAnPC9vcHRpb24+JztcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaHRtbCArPSAnPG9wdGlvbiB2YWx1ZT1cIicgKyBpICsgJ1wiPicgKyBpICsgJzwvb3B0aW9uPic7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGh0bWwgKz0gJzwvc2VsZWN0PiAnO1xyXG5cclxuICAgICAgICAgICAgLy9cclxuICAgICAgICAgICAgLy8gbWludXRlc1xyXG4gICAgICAgICAgICAvL1xyXG5cclxuICAgICAgICAgICAgaHRtbCArPSAnOiA8c2VsZWN0IGNsYXNzPVwibWludXRlc2VsZWN0XCI+JztcclxuXHJcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgNjA7IGkgKz0gdGhpcy50aW1lUGlja2VySW5jcmVtZW50KSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgcGFkZGVkID0gaSA8IDEwID8gJzAnICsgaSA6IGk7XHJcbiAgICAgICAgICAgICAgICB2YXIgdGltZSA9IHNlbGVjdGVkLmNsb25lKCkubWludXRlKGkpO1xyXG5cclxuICAgICAgICAgICAgICAgIHZhciBkaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgaWYgKG1pbkRhdGUgJiYgdGltZS5zZWNvbmQoNTkpLmlzQmVmb3JlKG1pbkRhdGUpKVxyXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIGlmIChtYXhEYXRlICYmIHRpbWUuc2Vjb25kKDApLmlzQWZ0ZXIobWF4RGF0ZSkpXHJcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQgPSB0cnVlO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmIChzZWxlY3RlZC5taW51dGUoKSA9PSBpICYmICFkaXNhYmxlZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGh0bWwgKz0gJzxvcHRpb24gdmFsdWU9XCInICsgaSArICdcIiBzZWxlY3RlZD1cInNlbGVjdGVkXCI+JyArIHBhZGRlZCArICc8L29wdGlvbj4nO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChkaXNhYmxlZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGh0bWwgKz0gJzxvcHRpb24gdmFsdWU9XCInICsgaSArICdcIiBkaXNhYmxlZD1cImRpc2FibGVkXCIgY2xhc3M9XCJkaXNhYmxlZFwiPicgKyBwYWRkZWQgKyAnPC9vcHRpb24+JztcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaHRtbCArPSAnPG9wdGlvbiB2YWx1ZT1cIicgKyBpICsgJ1wiPicgKyBwYWRkZWQgKyAnPC9vcHRpb24+JztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaHRtbCArPSAnPC9zZWxlY3Q+ICc7XHJcblxyXG4gICAgICAgICAgICAvL1xyXG4gICAgICAgICAgICAvLyBzZWNvbmRzXHJcbiAgICAgICAgICAgIC8vXHJcblxyXG4gICAgICAgICAgICBpZiAodGhpcy50aW1lUGlja2VyU2Vjb25kcykge1xyXG4gICAgICAgICAgICAgICAgaHRtbCArPSAnOiA8c2VsZWN0IGNsYXNzPVwic2Vjb25kc2VsZWN0XCI+JztcclxuXHJcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDYwOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgcGFkZGVkID0gaSA8IDEwID8gJzAnICsgaSA6IGk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRpbWUgPSBzZWxlY3RlZC5jbG9uZSgpLnNlY29uZChpKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKG1pbkRhdGUgJiYgdGltZS5pc0JlZm9yZShtaW5EYXRlKSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChtYXhEYXRlICYmIHRpbWUuaXNBZnRlcihtYXhEYXRlKSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQgPSB0cnVlO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBpZiAoc2VsZWN0ZWQuc2Vjb25kKCkgPT0gaSAmJiAhZGlzYWJsZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaHRtbCArPSAnPG9wdGlvbiB2YWx1ZT1cIicgKyBpICsgJ1wiIHNlbGVjdGVkPVwic2VsZWN0ZWRcIj4nICsgcGFkZGVkICsgJzwvb3B0aW9uPic7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChkaXNhYmxlZCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBodG1sICs9ICc8b3B0aW9uIHZhbHVlPVwiJyArIGkgKyAnXCIgZGlzYWJsZWQ9XCJkaXNhYmxlZFwiIGNsYXNzPVwiZGlzYWJsZWRcIj4nICsgcGFkZGVkICsgJzwvb3B0aW9uPic7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaHRtbCArPSAnPG9wdGlvbiB2YWx1ZT1cIicgKyBpICsgJ1wiPicgKyBwYWRkZWQgKyAnPC9vcHRpb24+JztcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgaHRtbCArPSAnPC9zZWxlY3Q+ICc7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC8vXHJcbiAgICAgICAgICAgIC8vIEFNL1BNXHJcbiAgICAgICAgICAgIC8vXHJcblxyXG4gICAgICAgICAgICBpZiAoIXRoaXMudGltZVBpY2tlcjI0SG91cikge1xyXG4gICAgICAgICAgICAgICAgaHRtbCArPSAnPHNlbGVjdCBjbGFzcz1cImFtcG1zZWxlY3RcIj4nO1xyXG5cclxuICAgICAgICAgICAgICAgIHZhciBhbV9odG1sID0gJyc7XHJcbiAgICAgICAgICAgICAgICB2YXIgcG1faHRtbCA9ICcnO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmIChtaW5EYXRlICYmIHNlbGVjdGVkLmNsb25lKCkuaG91cigxMikubWludXRlKDApLnNlY29uZCgwKS5pc0JlZm9yZShtaW5EYXRlKSlcclxuICAgICAgICAgICAgICAgICAgICBhbV9odG1sID0gJyBkaXNhYmxlZD1cImRpc2FibGVkXCIgY2xhc3M9XCJkaXNhYmxlZFwiJztcclxuXHJcbiAgICAgICAgICAgICAgICBpZiAobWF4RGF0ZSAmJiBzZWxlY3RlZC5jbG9uZSgpLmhvdXIoMCkubWludXRlKDApLnNlY29uZCgwKS5pc0FmdGVyKG1heERhdGUpKVxyXG4gICAgICAgICAgICAgICAgICAgIHBtX2h0bWwgPSAnIGRpc2FibGVkPVwiZGlzYWJsZWRcIiBjbGFzcz1cImRpc2FibGVkXCInO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmIChzZWxlY3RlZC5ob3VyKCkgPj0gMTIpIHtcclxuICAgICAgICAgICAgICAgICAgICBodG1sICs9ICc8b3B0aW9uIHZhbHVlPVwiQU1cIicgKyBhbV9odG1sICsgJz5BTTwvb3B0aW9uPjxvcHRpb24gdmFsdWU9XCJQTVwiIHNlbGVjdGVkPVwic2VsZWN0ZWRcIicgKyBwbV9odG1sICsgJz5QTTwvb3B0aW9uPic7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGh0bWwgKz0gJzxvcHRpb24gdmFsdWU9XCJBTVwiIHNlbGVjdGVkPVwic2VsZWN0ZWRcIicgKyBhbV9odG1sICsgJz5BTTwvb3B0aW9uPjxvcHRpb24gdmFsdWU9XCJQTVwiJyArIHBtX2h0bWwgKyAnPlBNPC9vcHRpb24+JztcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBodG1sICs9ICc8L3NlbGVjdD4nO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB0aGlzLmNvbnRhaW5lci5maW5kKCcuZHJwLWNhbGVuZGFyLicgKyBzaWRlICsgJyAuY2FsZW5kYXItdGltZScpLmh0bWwoaHRtbCk7XHJcblxyXG4gICAgICAgIH0sXHJcblxyXG4gICAgICAgIHVwZGF0ZUZvcm1JbnB1dHM6IGZ1bmN0aW9uKCkge1xyXG5cclxuICAgICAgICAgICAgaWYgKHRoaXMuc2luZ2xlRGF0ZVBpY2tlciB8fCAodGhpcy5lbmREYXRlICYmICh0aGlzLnN0YXJ0RGF0ZS5pc0JlZm9yZSh0aGlzLmVuZERhdGUpIHx8IHRoaXMuc3RhcnREYXRlLmlzU2FtZSh0aGlzLmVuZERhdGUpKSkpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY29udGFpbmVyLmZpbmQoJ2J1dHRvbi5hcHBseUJ0bicpLnJlbW92ZUF0dHIoJ2Rpc2FibGVkJyk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRhaW5lci5maW5kKCdidXR0b24uYXBwbHlCdG4nKS5hdHRyKCdkaXNhYmxlZCcsICdkaXNhYmxlZCcpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgIH0sXHJcblxyXG4gICAgICAgIG1vdmU6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICB2YXIgcGFyZW50T2Zmc2V0ID0geyB0b3A6IDAsIGxlZnQ6IDAgfSxcclxuICAgICAgICAgICAgICAgIGNvbnRhaW5lclRvcDtcclxuICAgICAgICAgICAgdmFyIHBhcmVudFJpZ2h0RWRnZSA9ICQod2luZG93KS53aWR0aCgpO1xyXG4gICAgICAgICAgICBpZiAoIXRoaXMucGFyZW50RWwuaXMoJ2JvZHknKSkge1xyXG4gICAgICAgICAgICAgICAgcGFyZW50T2Zmc2V0ID0ge1xyXG4gICAgICAgICAgICAgICAgICAgIHRvcDogdGhpcy5wYXJlbnRFbC5vZmZzZXQoKS50b3AgLSB0aGlzLnBhcmVudEVsLnNjcm9sbFRvcCgpLFxyXG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6IHRoaXMucGFyZW50RWwub2Zmc2V0KCkubGVmdCAtIHRoaXMucGFyZW50RWwuc2Nyb2xsTGVmdCgpXHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgcGFyZW50UmlnaHRFZGdlID0gdGhpcy5wYXJlbnRFbFswXS5jbGllbnRXaWR0aCArIHRoaXMucGFyZW50RWwub2Zmc2V0KCkubGVmdDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaWYgKHRoaXMuZHJvcHMgPT0gJ3VwJylcclxuICAgICAgICAgICAgICAgIGNvbnRhaW5lclRvcCA9IHRoaXMuZWxlbWVudC5vZmZzZXQoKS50b3AgLSB0aGlzLmNvbnRhaW5lci5vdXRlckhlaWdodCgpIC0gcGFyZW50T2Zmc2V0LnRvcDtcclxuICAgICAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICAgICAgY29udGFpbmVyVG9wID0gdGhpcy5lbGVtZW50Lm9mZnNldCgpLnRvcCArIHRoaXMuZWxlbWVudC5vdXRlckhlaWdodCgpIC0gcGFyZW50T2Zmc2V0LnRvcDtcclxuXHJcbiAgICAgICAgICAgIC8vIEZvcmNlIHRoZSBjb250YWluZXIgdG8gaXQncyBhY3R1YWwgd2lkdGhcclxuICAgICAgICAgICAgdGhpcy5jb250YWluZXIuY3NzKHtcclxuICAgICAgICAgICAgICB0b3A6IDAsXHJcbiAgICAgICAgICAgICAgbGVmdDogMCxcclxuICAgICAgICAgICAgICByaWdodDogJ2F1dG8nXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB2YXIgY29udGFpbmVyV2lkdGggPSB0aGlzLmNvbnRhaW5lci5vdXRlcldpZHRoKCk7XHJcblxyXG4gICAgICAgICAgICB0aGlzLmNvbnRhaW5lclt0aGlzLmRyb3BzID09ICd1cCcgPyAnYWRkQ2xhc3MnIDogJ3JlbW92ZUNsYXNzJ10oJ2Ryb3AtdXAnKTtcclxuXHJcbiAgICAgICAgICAgIGlmICh0aGlzLm9wZW5zID09ICdsZWZ0Jykge1xyXG4gICAgICAgICAgICAgICAgdmFyIGNvbnRhaW5lclJpZ2h0ID0gcGFyZW50UmlnaHRFZGdlIC0gdGhpcy5lbGVtZW50Lm9mZnNldCgpLmxlZnQgLSB0aGlzLmVsZW1lbnQub3V0ZXJXaWR0aCgpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGNvbnRhaW5lcldpZHRoICsgY29udGFpbmVyUmlnaHQgPiAkKHdpbmRvdykud2lkdGgoKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY29udGFpbmVyLmNzcyh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogY29udGFpbmVyVG9wLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICByaWdodDogJ2F1dG8nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiA5XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY29udGFpbmVyLmNzcyh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogY29udGFpbmVyVG9wLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICByaWdodDogY29udGFpbmVyUmlnaHQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6ICdhdXRvJ1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMub3BlbnMgPT0gJ2NlbnRlcicpIHtcclxuICAgICAgICAgICAgICAgIHZhciBjb250YWluZXJMZWZ0ID0gdGhpcy5lbGVtZW50Lm9mZnNldCgpLmxlZnQgLSBwYXJlbnRPZmZzZXQubGVmdCArIHRoaXMuZWxlbWVudC5vdXRlcldpZHRoKCkgLyAyXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAtIGNvbnRhaW5lcldpZHRoIC8gMjtcclxuICAgICAgICAgICAgICAgIGlmIChjb250YWluZXJMZWZ0IDwgMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY29udGFpbmVyLmNzcyh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogY29udGFpbmVyVG9wLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICByaWdodDogJ2F1dG8nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiA5XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGNvbnRhaW5lckxlZnQgKyBjb250YWluZXJXaWR0aCA+ICQod2luZG93KS53aWR0aCgpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb250YWluZXIuY3NzKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdG9wOiBjb250YWluZXJUb3AsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6ICdhdXRvJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmlnaHQ6IDBcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb250YWluZXIuY3NzKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdG9wOiBjb250YWluZXJUb3AsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6IGNvbnRhaW5lckxlZnQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAnYXV0bydcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHZhciBjb250YWluZXJMZWZ0ID0gdGhpcy5lbGVtZW50Lm9mZnNldCgpLmxlZnQgLSBwYXJlbnRPZmZzZXQubGVmdDtcclxuICAgICAgICAgICAgICAgIGlmIChjb250YWluZXJMZWZ0ICsgY29udGFpbmVyV2lkdGggPiAkKHdpbmRvdykud2lkdGgoKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY29udGFpbmVyLmNzcyh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogY29udGFpbmVyVG9wLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiAnYXV0bycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAwXHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY29udGFpbmVyLmNzcyh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogY29udGFpbmVyVG9wLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiBjb250YWluZXJMZWZ0LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICByaWdodDogJ2F1dG8nXHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICBzaG93OiBmdW5jdGlvbihlKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmlzU2hvd2luZykgcmV0dXJuO1xyXG5cclxuICAgICAgICAgICAgLy8gQ3JlYXRlIGEgY2xpY2sgcHJveHkgdGhhdCBpcyBwcml2YXRlIHRvIHRoaXMgaW5zdGFuY2Ugb2YgZGF0ZXBpY2tlciwgZm9yIHVuYmluZGluZ1xyXG4gICAgICAgICAgICB0aGlzLl9vdXRzaWRlQ2xpY2tQcm94eSA9ICQucHJveHkoZnVuY3Rpb24oZSkgeyB0aGlzLm91dHNpZGVDbGljayhlKTsgfSwgdGhpcyk7XHJcblxyXG4gICAgICAgICAgICAvLyBCaW5kIGdsb2JhbCBkYXRlcGlja2VyIG1vdXNlZG93biBmb3IgaGlkaW5nIGFuZFxyXG4gICAgICAgICAgICAkKGRvY3VtZW50KVxyXG4gICAgICAgICAgICAgIC5vbignbW91c2Vkb3duLmRhdGVyYW5nZXBpY2tlcicsIHRoaXMuX291dHNpZGVDbGlja1Byb3h5KVxyXG4gICAgICAgICAgICAgIC8vIGFsc28gc3VwcG9ydCBtb2JpbGUgZGV2aWNlc1xyXG4gICAgICAgICAgICAgIC5vbigndG91Y2hlbmQuZGF0ZXJhbmdlcGlja2VyJywgdGhpcy5fb3V0c2lkZUNsaWNrUHJveHkpXHJcbiAgICAgICAgICAgICAgLy8gYWxzbyBleHBsaWNpdGx5IHBsYXkgbmljZSB3aXRoIEJvb3RzdHJhcCBkcm9wZG93bnMsIHdoaWNoIHN0b3BQcm9wYWdhdGlvbiB3aGVuIGNsaWNraW5nIHRoZW1cclxuICAgICAgICAgICAgICAub24oJ2NsaWNrLmRhdGVyYW5nZXBpY2tlcicsICdbZGF0YS10b2dnbGU9ZHJvcGRvd25dJywgdGhpcy5fb3V0c2lkZUNsaWNrUHJveHkpXHJcbiAgICAgICAgICAgICAgLy8gYW5kIGFsc28gY2xvc2Ugd2hlbiBmb2N1cyBjaGFuZ2VzIHRvIG91dHNpZGUgdGhlIHBpY2tlciAoZWcuIHRhYmJpbmcgYmV0d2VlbiBjb250cm9scylcclxuICAgICAgICAgICAgICAub24oJ2ZvY3VzaW4uZGF0ZXJhbmdlcGlja2VyJywgdGhpcy5fb3V0c2lkZUNsaWNrUHJveHkpO1xyXG5cclxuICAgICAgICAgICAgLy8gUmVwb3NpdGlvbiB0aGUgcGlja2VyIGlmIHRoZSB3aW5kb3cgaXMgcmVzaXplZCB3aGlsZSBpdCdzIG9wZW5cclxuICAgICAgICAgICAgJCh3aW5kb3cpLm9uKCdyZXNpemUuZGF0ZXJhbmdlcGlja2VyJywgJC5wcm94eShmdW5jdGlvbihlKSB7IHRoaXMubW92ZShlKTsgfSwgdGhpcykpO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5vbGRTdGFydERhdGUgPSB0aGlzLnN0YXJ0RGF0ZS5jbG9uZSgpO1xyXG4gICAgICAgICAgICB0aGlzLm9sZEVuZERhdGUgPSB0aGlzLmVuZERhdGUuY2xvbmUoKTtcclxuICAgICAgICAgICAgdGhpcy5wcmV2aW91c1JpZ2h0VGltZSA9IHRoaXMuZW5kRGF0ZS5jbG9uZSgpO1xyXG5cclxuICAgICAgICAgICAgdGhpcy51cGRhdGVWaWV3KCk7XHJcbiAgICAgICAgICAgIHRoaXMuY29udGFpbmVyLnNob3coKTtcclxuICAgICAgICAgICAgdGhpcy5tb3ZlKCk7XHJcbiAgICAgICAgICAgIHRoaXMuZWxlbWVudC50cmlnZ2VyKCdzaG93LmRhdGVyYW5nZXBpY2tlcicsIHRoaXMpO1xyXG4gICAgICAgICAgICB0aGlzLmlzU2hvd2luZyA9IHRydWU7XHJcbiAgICAgICAgfSxcclxuXHJcbiAgICAgICAgaGlkZTogZnVuY3Rpb24oZSkge1xyXG4gICAgICAgICAgICBpZiAoIXRoaXMuaXNTaG93aW5nKSByZXR1cm47XHJcblxyXG4gICAgICAgICAgICAvL2luY29tcGxldGUgZGF0ZSBzZWxlY3Rpb24sIHJldmVydCB0byBsYXN0IHZhbHVlc1xyXG4gICAgICAgICAgICBpZiAoIXRoaXMuZW5kRGF0ZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zdGFydERhdGUgPSB0aGlzLm9sZFN0YXJ0RGF0ZS5jbG9uZSgpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5lbmREYXRlID0gdGhpcy5vbGRFbmREYXRlLmNsb25lKCk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC8vaWYgYSBuZXcgZGF0ZSByYW5nZSB3YXMgc2VsZWN0ZWQsIGludm9rZSB0aGUgdXNlciBjYWxsYmFjayBmdW5jdGlvblxyXG4gICAgICAgICAgICBpZiAoIXRoaXMuc3RhcnREYXRlLmlzU2FtZSh0aGlzLm9sZFN0YXJ0RGF0ZSkgfHwgIXRoaXMuZW5kRGF0ZS5pc1NhbWUodGhpcy5vbGRFbmREYXRlKSlcclxuICAgICAgICAgICAgICAgIHRoaXMuY2FsbGJhY2sodGhpcy5zdGFydERhdGUuY2xvbmUoKSwgdGhpcy5lbmREYXRlLmNsb25lKCksIHRoaXMuY2hvc2VuTGFiZWwpO1xyXG5cclxuICAgICAgICAgICAgLy9pZiBwaWNrZXIgaXMgYXR0YWNoZWQgdG8gYSB0ZXh0IGlucHV0LCB1cGRhdGUgaXRcclxuICAgICAgICAgICAgdGhpcy51cGRhdGVFbGVtZW50KCk7XHJcblxyXG4gICAgICAgICAgICAkKGRvY3VtZW50KS5vZmYoJy5kYXRlcmFuZ2VwaWNrZXInKTtcclxuICAgICAgICAgICAgJCh3aW5kb3cpLm9mZignLmRhdGVyYW5nZXBpY2tlcicpO1xyXG4gICAgICAgICAgICB0aGlzLmNvbnRhaW5lci5oaWRlKCk7XHJcbiAgICAgICAgICAgIHRoaXMuZWxlbWVudC50cmlnZ2VyKCdoaWRlLmRhdGVyYW5nZXBpY2tlcicsIHRoaXMpO1xyXG4gICAgICAgICAgICB0aGlzLmlzU2hvd2luZyA9IGZhbHNlO1xyXG4gICAgICAgIH0sXHJcblxyXG4gICAgICAgIHRvZ2dsZTogZnVuY3Rpb24oZSkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5pc1Nob3dpbmcpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuaGlkZSgpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zaG93KCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICBvdXRzaWRlQ2xpY2s6IGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICAgICAgdmFyIHRhcmdldCA9ICQoZS50YXJnZXQpO1xyXG4gICAgICAgICAgICAvLyBpZiB0aGUgcGFnZSBpcyBjbGlja2VkIGFueXdoZXJlIGV4Y2VwdCB3aXRoaW4gdGhlIGRhdGVyYW5nZXJwaWNrZXIvYnV0dG9uXHJcbiAgICAgICAgICAgIC8vIGl0c2VsZiB0aGVuIGNhbGwgdGhpcy5oaWRlKClcclxuICAgICAgICAgICAgaWYgKFxyXG4gICAgICAgICAgICAgICAgLy8gaWUgbW9kYWwgZGlhbG9nIGZpeFxyXG4gICAgICAgICAgICAgICAgZS50eXBlID09IFwiZm9jdXNpblwiIHx8XHJcbiAgICAgICAgICAgICAgICB0YXJnZXQuY2xvc2VzdCh0aGlzLmVsZW1lbnQpLmxlbmd0aCB8fFxyXG4gICAgICAgICAgICAgICAgdGFyZ2V0LmNsb3Nlc3QodGhpcy5jb250YWluZXIpLmxlbmd0aCB8fFxyXG4gICAgICAgICAgICAgICAgdGFyZ2V0LmNsb3Nlc3QoJy5jYWxlbmRhci10YWJsZScpLmxlbmd0aFxyXG4gICAgICAgICAgICAgICAgKSByZXR1cm47XHJcbiAgICAgICAgICAgIHRoaXMuaGlkZSgpO1xyXG4gICAgICAgICAgICB0aGlzLmVsZW1lbnQudHJpZ2dlcignb3V0c2lkZUNsaWNrLmRhdGVyYW5nZXBpY2tlcicsIHRoaXMpO1xyXG4gICAgICAgIH0sXHJcblxyXG4gICAgICAgIHNob3dDYWxlbmRhcnM6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICB0aGlzLmNvbnRhaW5lci5hZGRDbGFzcygnc2hvdy1jYWxlbmRhcicpO1xyXG4gICAgICAgICAgICB0aGlzLm1vdmUoKTtcclxuICAgICAgICAgICAgdGhpcy5lbGVtZW50LnRyaWdnZXIoJ3Nob3dDYWxlbmRhci5kYXRlcmFuZ2VwaWNrZXInLCB0aGlzKTtcclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICBoaWRlQ2FsZW5kYXJzOiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgdGhpcy5jb250YWluZXIucmVtb3ZlQ2xhc3MoJ3Nob3ctY2FsZW5kYXInKTtcclxuICAgICAgICAgICAgdGhpcy5lbGVtZW50LnRyaWdnZXIoJ2hpZGVDYWxlbmRhci5kYXRlcmFuZ2VwaWNrZXInLCB0aGlzKTtcclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICBjbGlja1JhbmdlOiBmdW5jdGlvbihlKSB7XHJcbiAgICAgICAgICAgIHZhciBsYWJlbCA9IGUudGFyZ2V0LmdldEF0dHJpYnV0ZSgnZGF0YS1yYW5nZS1rZXknKTtcclxuICAgICAgICAgICAgdGhpcy5jaG9zZW5MYWJlbCA9IGxhYmVsO1xyXG4gICAgICAgICAgICBpZiAobGFiZWwgPT0gdGhpcy5sb2NhbGUuY3VzdG9tUmFuZ2VMYWJlbCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zaG93Q2FsZW5kYXJzKCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgZGF0ZXMgPSB0aGlzLnJhbmdlc1tsYWJlbF07XHJcbiAgICAgICAgICAgICAgICB0aGlzLnN0YXJ0RGF0ZSA9IGRhdGVzWzBdO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5lbmREYXRlID0gZGF0ZXNbMV07XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLnRpbWVQaWNrZXIpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXJ0RGF0ZS5zdGFydE9mKCdkYXknKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmVuZERhdGUuZW5kT2YoJ2RheScpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIGlmICghdGhpcy5hbHdheXNTaG93Q2FsZW5kYXJzKVxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaGlkZUNhbGVuZGFycygpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jbGlja0FwcGx5KCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICBjbGlja1ByZXY6IGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICAgICAgdmFyIGNhbCA9ICQoZS50YXJnZXQpLnBhcmVudHMoJy5kcnAtY2FsZW5kYXInKTtcclxuICAgICAgICAgICAgaWYgKGNhbC5oYXNDbGFzcygnbGVmdCcpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxlZnRDYWxlbmRhci5tb250aC5zdWJ0cmFjdCgxLCAnbW9udGgnKTtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmxpbmtlZENhbGVuZGFycylcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnJpZ2h0Q2FsZW5kYXIubW9udGguc3VidHJhY3QoMSwgJ21vbnRoJyk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnJpZ2h0Q2FsZW5kYXIubW9udGguc3VidHJhY3QoMSwgJ21vbnRoJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy51cGRhdGVDYWxlbmRhcnMoKTtcclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICBjbGlja05leHQ6IGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICAgICAgdmFyIGNhbCA9ICQoZS50YXJnZXQpLnBhcmVudHMoJy5kcnAtY2FsZW5kYXInKTtcclxuICAgICAgICAgICAgaWYgKGNhbC5oYXNDbGFzcygnbGVmdCcpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxlZnRDYWxlbmRhci5tb250aC5hZGQoMSwgJ21vbnRoJyk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnJpZ2h0Q2FsZW5kYXIubW9udGguYWRkKDEsICdtb250aCcpO1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMubGlua2VkQ2FsZW5kYXJzKVxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMubGVmdENhbGVuZGFyLm1vbnRoLmFkZCgxLCAnbW9udGgnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLnVwZGF0ZUNhbGVuZGFycygpO1xyXG4gICAgICAgIH0sXHJcblxyXG4gICAgICAgIGhvdmVyRGF0ZTogZnVuY3Rpb24oZSkge1xyXG5cclxuICAgICAgICAgICAgLy9pZ25vcmUgZGF0ZXMgdGhhdCBjYW4ndCBiZSBzZWxlY3RlZFxyXG4gICAgICAgICAgICBpZiAoISQoZS50YXJnZXQpLmhhc0NsYXNzKCdhdmFpbGFibGUnKSkgcmV0dXJuO1xyXG5cclxuICAgICAgICAgICAgdmFyIHRpdGxlID0gJChlLnRhcmdldCkuYXR0cignZGF0YS10aXRsZScpO1xyXG4gICAgICAgICAgICB2YXIgcm93ID0gdGl0bGUuc3Vic3RyKDEsIDEpO1xyXG4gICAgICAgICAgICB2YXIgY29sID0gdGl0bGUuc3Vic3RyKDMsIDEpO1xyXG4gICAgICAgICAgICB2YXIgY2FsID0gJChlLnRhcmdldCkucGFyZW50cygnLmRycC1jYWxlbmRhcicpO1xyXG4gICAgICAgICAgICB2YXIgZGF0ZSA9IGNhbC5oYXNDbGFzcygnbGVmdCcpID8gdGhpcy5sZWZ0Q2FsZW5kYXIuY2FsZW5kYXJbcm93XVtjb2xdIDogdGhpcy5yaWdodENhbGVuZGFyLmNhbGVuZGFyW3Jvd11bY29sXTtcclxuXHJcbiAgICAgICAgICAgIC8vaGlnaGxpZ2h0IHRoZSBkYXRlcyBiZXR3ZWVuIHRoZSBzdGFydCBkYXRlIGFuZCB0aGUgZGF0ZSBiZWluZyBob3ZlcmVkIGFzIGEgcG90ZW50aWFsIGVuZCBkYXRlXHJcbiAgICAgICAgICAgIHZhciBsZWZ0Q2FsZW5kYXIgPSB0aGlzLmxlZnRDYWxlbmRhcjtcclxuICAgICAgICAgICAgdmFyIHJpZ2h0Q2FsZW5kYXIgPSB0aGlzLnJpZ2h0Q2FsZW5kYXI7XHJcbiAgICAgICAgICAgIHZhciBzdGFydERhdGUgPSB0aGlzLnN0YXJ0RGF0ZTtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLmVuZERhdGUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY29udGFpbmVyLmZpbmQoJy5kcnAtY2FsZW5kYXIgdGJvZHkgdGQnKS5lYWNoKGZ1bmN0aW9uKGluZGV4LCBlbCkge1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAvL3NraXAgd2VlayBudW1iZXJzLCBvbmx5IGxvb2sgYXQgZGF0ZXNcclxuICAgICAgICAgICAgICAgICAgICBpZiAoJChlbCkuaGFzQ2xhc3MoJ3dlZWsnKSkgcmV0dXJuO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICB2YXIgdGl0bGUgPSAkKGVsKS5hdHRyKCdkYXRhLXRpdGxlJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJvdyA9IHRpdGxlLnN1YnN0cigxLCAxKTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgY29sID0gdGl0bGUuc3Vic3RyKDMsIDEpO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBjYWwgPSAkKGVsKS5wYXJlbnRzKCcuZHJwLWNhbGVuZGFyJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGR0ID0gY2FsLmhhc0NsYXNzKCdsZWZ0JykgPyBsZWZ0Q2FsZW5kYXIuY2FsZW5kYXJbcm93XVtjb2xdIDogcmlnaHRDYWxlbmRhci5jYWxlbmRhcltyb3ddW2NvbF07XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGlmICgoZHQuaXNBZnRlcihzdGFydERhdGUpICYmIGR0LmlzQmVmb3JlKGRhdGUpKSB8fCBkdC5pc1NhbWUoZGF0ZSwgJ2RheScpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoZWwpLmFkZENsYXNzKCdpbi1yYW5nZScpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoZWwpLnJlbW92ZUNsYXNzKCdpbi1yYW5nZScpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICBjbGlja0RhdGU6IGZ1bmN0aW9uKGUpIHtcclxuXHJcbiAgICAgICAgICAgIGlmICghJChlLnRhcmdldCkuaGFzQ2xhc3MoJ2F2YWlsYWJsZScpKSByZXR1cm47XHJcblxyXG4gICAgICAgICAgICB2YXIgdGl0bGUgPSAkKGUudGFyZ2V0KS5hdHRyKCdkYXRhLXRpdGxlJyk7XHJcbiAgICAgICAgICAgIHZhciByb3cgPSB0aXRsZS5zdWJzdHIoMSwgMSk7XHJcbiAgICAgICAgICAgIHZhciBjb2wgPSB0aXRsZS5zdWJzdHIoMywgMSk7XHJcbiAgICAgICAgICAgIHZhciBjYWwgPSAkKGUudGFyZ2V0KS5wYXJlbnRzKCcuZHJwLWNhbGVuZGFyJyk7XHJcbiAgICAgICAgICAgIHZhciBkYXRlID0gY2FsLmhhc0NsYXNzKCdsZWZ0JykgPyB0aGlzLmxlZnRDYWxlbmRhci5jYWxlbmRhcltyb3ddW2NvbF0gOiB0aGlzLnJpZ2h0Q2FsZW5kYXIuY2FsZW5kYXJbcm93XVtjb2xdO1xyXG5cclxuICAgICAgICAgICAgLy9cclxuICAgICAgICAgICAgLy8gdGhpcyBmdW5jdGlvbiBuZWVkcyB0byBkbyBhIGZldyB0aGluZ3M6XHJcbiAgICAgICAgICAgIC8vICogYWx0ZXJuYXRlIGJldHdlZW4gc2VsZWN0aW5nIGEgc3RhcnQgYW5kIGVuZCBkYXRlIGZvciB0aGUgcmFuZ2UsXHJcbiAgICAgICAgICAgIC8vICogaWYgdGhlIHRpbWUgcGlja2VyIGlzIGVuYWJsZWQsIGFwcGx5IHRoZSBob3VyL21pbnV0ZS9zZWNvbmQgZnJvbSB0aGUgc2VsZWN0IGJveGVzIHRvIHRoZSBjbGlja2VkIGRhdGVcclxuICAgICAgICAgICAgLy8gKiBpZiBhdXRvYXBwbHkgaXMgZW5hYmxlZCwgYW5kIGFuIGVuZCBkYXRlIHdhcyBjaG9zZW4sIGFwcGx5IHRoZSBzZWxlY3Rpb25cclxuICAgICAgICAgICAgLy8gKiBpZiBzaW5nbGUgZGF0ZSBwaWNrZXIgbW9kZSwgYW5kIHRpbWUgcGlja2VyIGlzbid0IGVuYWJsZWQsIGFwcGx5IHRoZSBzZWxlY3Rpb24gaW1tZWRpYXRlbHlcclxuICAgICAgICAgICAgLy8gKiBpZiBvbmUgb2YgdGhlIGlucHV0cyBhYm92ZSB0aGUgY2FsZW5kYXJzIHdhcyBmb2N1c2VkLCBjYW5jZWwgdGhhdCBtYW51YWwgaW5wdXRcclxuICAgICAgICAgICAgLy9cclxuXHJcbiAgICAgICAgICAgIGlmICh0aGlzLmVuZERhdGUgfHwgZGF0ZS5pc0JlZm9yZSh0aGlzLnN0YXJ0RGF0ZSwgJ2RheScpKSB7IC8vcGlja2luZyBzdGFydFxyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMudGltZVBpY2tlcikge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBob3VyID0gcGFyc2VJbnQodGhpcy5jb250YWluZXIuZmluZCgnLmxlZnQgLmhvdXJzZWxlY3QnKS52YWwoKSwgMTApO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICghdGhpcy50aW1lUGlja2VyMjRIb3VyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBhbXBtID0gdGhpcy5jb250YWluZXIuZmluZCgnLmxlZnQgLmFtcG1zZWxlY3QnKS52YWwoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFtcG0gPT09ICdQTScgJiYgaG91ciA8IDEyKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaG91ciArPSAxMjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFtcG0gPT09ICdBTScgJiYgaG91ciA9PT0gMTIpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBob3VyID0gMDtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIG1pbnV0ZSA9IHBhcnNlSW50KHRoaXMuY29udGFpbmVyLmZpbmQoJy5sZWZ0IC5taW51dGVzZWxlY3QnKS52YWwoKSwgMTApO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChpc05hTihtaW51dGUpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1pbnV0ZSA9IHBhcnNlSW50KHRoaXMuY29udGFpbmVyLmZpbmQoJy5sZWZ0IC5taW51dGVzZWxlY3Qgb3B0aW9uOmxhc3QnKS52YWwoKSwgMTApO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB2YXIgc2Vjb25kID0gdGhpcy50aW1lUGlja2VyU2Vjb25kcyA/IHBhcnNlSW50KHRoaXMuY29udGFpbmVyLmZpbmQoJy5sZWZ0IC5zZWNvbmRzZWxlY3QnKS52YWwoKSwgMTApIDogMDtcclxuICAgICAgICAgICAgICAgICAgICBkYXRlID0gZGF0ZS5jbG9uZSgpLmhvdXIoaG91cikubWludXRlKG1pbnV0ZSkuc2Vjb25kKHNlY29uZCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB0aGlzLmVuZERhdGUgPSBudWxsO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZXRTdGFydERhdGUoZGF0ZS5jbG9uZSgpKTtcclxuICAgICAgICAgICAgfSBlbHNlIGlmICghdGhpcy5lbmREYXRlICYmIGRhdGUuaXNCZWZvcmUodGhpcy5zdGFydERhdGUpKSB7XHJcbiAgICAgICAgICAgICAgICAvL3NwZWNpYWwgY2FzZTogY2xpY2tpbmcgdGhlIHNhbWUgZGF0ZSBmb3Igc3RhcnQvZW5kLFxyXG4gICAgICAgICAgICAgICAgLy9idXQgdGhlIHRpbWUgb2YgdGhlIGVuZCBkYXRlIGlzIGJlZm9yZSB0aGUgc3RhcnQgZGF0ZVxyXG4gICAgICAgICAgICAgICAgdGhpcy5zZXRFbmREYXRlKHRoaXMuc3RhcnREYXRlLmNsb25lKCkpO1xyXG4gICAgICAgICAgICB9IGVsc2UgeyAvLyBwaWNraW5nIGVuZFxyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMudGltZVBpY2tlcikge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBob3VyID0gcGFyc2VJbnQodGhpcy5jb250YWluZXIuZmluZCgnLnJpZ2h0IC5ob3Vyc2VsZWN0JykudmFsKCksIDEwKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoIXRoaXMudGltZVBpY2tlcjI0SG91cikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgYW1wbSA9IHRoaXMuY29udGFpbmVyLmZpbmQoJy5yaWdodCAuYW1wbXNlbGVjdCcpLnZhbCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYW1wbSA9PT0gJ1BNJyAmJiBob3VyIDwgMTIpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBob3VyICs9IDEyO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYW1wbSA9PT0gJ0FNJyAmJiBob3VyID09PSAxMilcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhvdXIgPSAwO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB2YXIgbWludXRlID0gcGFyc2VJbnQodGhpcy5jb250YWluZXIuZmluZCgnLnJpZ2h0IC5taW51dGVzZWxlY3QnKS52YWwoKSwgMTApO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChpc05hTihtaW51dGUpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1pbnV0ZSA9IHBhcnNlSW50KHRoaXMuY29udGFpbmVyLmZpbmQoJy5yaWdodCAubWludXRlc2VsZWN0IG9wdGlvbjpsYXN0JykudmFsKCksIDEwKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNlY29uZCA9IHRoaXMudGltZVBpY2tlclNlY29uZHMgPyBwYXJzZUludCh0aGlzLmNvbnRhaW5lci5maW5kKCcucmlnaHQgLnNlY29uZHNlbGVjdCcpLnZhbCgpLCAxMCkgOiAwO1xyXG4gICAgICAgICAgICAgICAgICAgIGRhdGUgPSBkYXRlLmNsb25lKCkuaG91cihob3VyKS5taW51dGUobWludXRlKS5zZWNvbmQoc2Vjb25kKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHRoaXMuc2V0RW5kRGF0ZShkYXRlLmNsb25lKCkpO1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuYXV0b0FwcGx5KSB7XHJcbiAgICAgICAgICAgICAgICAgIHRoaXMuY2FsY3VsYXRlQ2hvc2VuTGFiZWwoKTtcclxuICAgICAgICAgICAgICAgICAgdGhpcy5jbGlja0FwcGx5KCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmICh0aGlzLnNpbmdsZURhdGVQaWNrZXIpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2V0RW5kRGF0ZSh0aGlzLnN0YXJ0RGF0ZSk7XHJcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMudGltZVBpY2tlcilcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmNsaWNrQXBwbHkoKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgdGhpcy51cGRhdGVWaWV3KCk7XHJcblxyXG4gICAgICAgICAgICAvL1RoaXMgaXMgdG8gY2FuY2VsIHRoZSBibHVyIGV2ZW50IGhhbmRsZXIgaWYgdGhlIG1vdXNlIHdhcyBpbiBvbmUgb2YgdGhlIGlucHV0c1xyXG4gICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xyXG5cclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICBjYWxjdWxhdGVDaG9zZW5MYWJlbDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgY3VzdG9tUmFuZ2UgPSB0cnVlO1xyXG4gICAgICAgICAgICB2YXIgaSA9IDA7XHJcbiAgICAgICAgICAgIGZvciAodmFyIHJhbmdlIGluIHRoaXMucmFuZ2VzKSB7XHJcbiAgICAgICAgICAgICAgaWYgKHRoaXMudGltZVBpY2tlcikge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBmb3JtYXQgPSB0aGlzLnRpbWVQaWNrZXJTZWNvbmRzID8gXCJZWVlZLU1NLUREIEhIOm1tOnNzXCIgOiBcIllZWVktTU0tREQgSEg6bW1cIjtcclxuICAgICAgICAgICAgICAgICAgICAvL2lnbm9yZSB0aW1lcyB3aGVuIGNvbXBhcmluZyBkYXRlcyBpZiB0aW1lIHBpY2tlciBzZWNvbmRzIGlzIG5vdCBlbmFibGVkXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuc3RhcnREYXRlLmZvcm1hdChmb3JtYXQpID09IHRoaXMucmFuZ2VzW3JhbmdlXVswXS5mb3JtYXQoZm9ybWF0KSAmJiB0aGlzLmVuZERhdGUuZm9ybWF0KGZvcm1hdCkgPT0gdGhpcy5yYW5nZXNbcmFuZ2VdWzFdLmZvcm1hdChmb3JtYXQpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1c3RvbVJhbmdlID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2hvc2VuTGFiZWwgPSB0aGlzLmNvbnRhaW5lci5maW5kKCcucmFuZ2VzIGxpOmVxKCcgKyBpICsgJyknKS5hZGRDbGFzcygnYWN0aXZlJykuYXR0cignZGF0YS1yYW5nZS1rZXknKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAvL2lnbm9yZSB0aW1lcyB3aGVuIGNvbXBhcmluZyBkYXRlcyBpZiB0aW1lIHBpY2tlciBpcyBub3QgZW5hYmxlZFxyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnN0YXJ0RGF0ZS5mb3JtYXQoJ1lZWVktTU0tREQnKSA9PSB0aGlzLnJhbmdlc1tyYW5nZV1bMF0uZm9ybWF0KCdZWVlZLU1NLUREJykgJiYgdGhpcy5lbmREYXRlLmZvcm1hdCgnWVlZWS1NTS1ERCcpID09IHRoaXMucmFuZ2VzW3JhbmdlXVsxXS5mb3JtYXQoJ1lZWVktTU0tREQnKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjdXN0b21SYW5nZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNob3NlbkxhYmVsID0gdGhpcy5jb250YWluZXIuZmluZCgnLnJhbmdlcyBsaTplcSgnICsgaSArICcpJykuYWRkQ2xhc3MoJ2FjdGl2ZScpLmF0dHIoJ2RhdGEtcmFuZ2Uta2V5Jyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGkrKztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoY3VzdG9tUmFuZ2UpIHtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLnNob3dDdXN0b21SYW5nZUxhYmVsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jaG9zZW5MYWJlbCA9IHRoaXMuY29udGFpbmVyLmZpbmQoJy5yYW5nZXMgbGk6bGFzdCcpLmFkZENsYXNzKCdhY3RpdmUnKS5hdHRyKCdkYXRhLXJhbmdlLWtleScpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmNob3NlbkxhYmVsID0gbnVsbDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHRoaXMuc2hvd0NhbGVuZGFycygpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuXHJcbiAgICAgICAgY2xpY2tBcHBseTogZnVuY3Rpb24oZSkge1xyXG4gICAgICAgICAgICB0aGlzLmhpZGUoKTtcclxuICAgICAgICAgICAgdGhpcy5lbGVtZW50LnRyaWdnZXIoJ2FwcGx5LmRhdGVyYW5nZXBpY2tlcicsIHRoaXMpO1xyXG4gICAgICAgIH0sXHJcblxyXG4gICAgICAgIGNsaWNrQ2FuY2VsOiBmdW5jdGlvbihlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc3RhcnREYXRlID0gdGhpcy5vbGRTdGFydERhdGU7XHJcbiAgICAgICAgICAgIHRoaXMuZW5kRGF0ZSA9IHRoaXMub2xkRW5kRGF0ZTtcclxuICAgICAgICAgICAgdGhpcy5oaWRlKCk7XHJcbiAgICAgICAgICAgIHRoaXMuZWxlbWVudC50cmlnZ2VyKCdjYW5jZWwuZGF0ZXJhbmdlcGlja2VyJywgdGhpcyk7XHJcbiAgICAgICAgfSxcclxuXHJcbiAgICAgICAgbW9udGhPclllYXJDaGFuZ2VkOiBmdW5jdGlvbihlKSB7XHJcbiAgICAgICAgICAgIHZhciBpc0xlZnQgPSAkKGUudGFyZ2V0KS5jbG9zZXN0KCcuZHJwLWNhbGVuZGFyJykuaGFzQ2xhc3MoJ2xlZnQnKSxcclxuICAgICAgICAgICAgICAgIGxlZnRPclJpZ2h0ID0gaXNMZWZ0ID8gJ2xlZnQnIDogJ3JpZ2h0JyxcclxuICAgICAgICAgICAgICAgIGNhbCA9IHRoaXMuY29udGFpbmVyLmZpbmQoJy5kcnAtY2FsZW5kYXIuJytsZWZ0T3JSaWdodCk7XHJcblxyXG4gICAgICAgICAgICAvLyBNb250aCBtdXN0IGJlIE51bWJlciBmb3IgbmV3IG1vbWVudCB2ZXJzaW9uc1xyXG4gICAgICAgICAgICB2YXIgbW9udGggPSBwYXJzZUludChjYWwuZmluZCgnLm1vbnRoc2VsZWN0JykudmFsKCksIDEwKTtcclxuICAgICAgICAgICAgdmFyIHllYXIgPSBjYWwuZmluZCgnLnllYXJzZWxlY3QnKS52YWwoKTtcclxuXHJcbiAgICAgICAgICAgIGlmICghaXNMZWZ0KSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoeWVhciA8IHRoaXMuc3RhcnREYXRlLnllYXIoKSB8fCAoeWVhciA9PSB0aGlzLnN0YXJ0RGF0ZS55ZWFyKCkgJiYgbW9udGggPCB0aGlzLnN0YXJ0RGF0ZS5tb250aCgpKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoID0gdGhpcy5zdGFydERhdGUubW9udGgoKTtcclxuICAgICAgICAgICAgICAgICAgICB5ZWFyID0gdGhpcy5zdGFydERhdGUueWVhcigpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAodGhpcy5taW5EYXRlKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoeWVhciA8IHRoaXMubWluRGF0ZS55ZWFyKCkgfHwgKHllYXIgPT0gdGhpcy5taW5EYXRlLnllYXIoKSAmJiBtb250aCA8IHRoaXMubWluRGF0ZS5tb250aCgpKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIG1vbnRoID0gdGhpcy5taW5EYXRlLm1vbnRoKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgeWVhciA9IHRoaXMubWluRGF0ZS55ZWFyKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmICh0aGlzLm1heERhdGUpIHtcclxuICAgICAgICAgICAgICAgIGlmICh5ZWFyID4gdGhpcy5tYXhEYXRlLnllYXIoKSB8fCAoeWVhciA9PSB0aGlzLm1heERhdGUueWVhcigpICYmIG1vbnRoID4gdGhpcy5tYXhEYXRlLm1vbnRoKCkpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbW9udGggPSB0aGlzLm1heERhdGUubW9udGgoKTtcclxuICAgICAgICAgICAgICAgICAgICB5ZWFyID0gdGhpcy5tYXhEYXRlLnllYXIoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaWYgKGlzTGVmdCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sZWZ0Q2FsZW5kYXIubW9udGgubW9udGgobW9udGgpLnllYXIoeWVhcik7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5saW5rZWRDYWxlbmRhcnMpXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yaWdodENhbGVuZGFyLm1vbnRoID0gdGhpcy5sZWZ0Q2FsZW5kYXIubW9udGguY2xvbmUoKS5hZGQoMSwgJ21vbnRoJyk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnJpZ2h0Q2FsZW5kYXIubW9udGgubW9udGgobW9udGgpLnllYXIoeWVhcik7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5saW5rZWRDYWxlbmRhcnMpXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5sZWZ0Q2FsZW5kYXIubW9udGggPSB0aGlzLnJpZ2h0Q2FsZW5kYXIubW9udGguY2xvbmUoKS5zdWJ0cmFjdCgxLCAnbW9udGgnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLnVwZGF0ZUNhbGVuZGFycygpO1xyXG4gICAgICAgIH0sXHJcblxyXG4gICAgICAgIHRpbWVDaGFuZ2VkOiBmdW5jdGlvbihlKSB7XHJcblxyXG4gICAgICAgICAgICB2YXIgY2FsID0gJChlLnRhcmdldCkuY2xvc2VzdCgnLmRycC1jYWxlbmRhcicpLFxyXG4gICAgICAgICAgICAgICAgaXNMZWZ0ID0gY2FsLmhhc0NsYXNzKCdsZWZ0Jyk7XHJcblxyXG4gICAgICAgICAgICB2YXIgaG91ciA9IHBhcnNlSW50KGNhbC5maW5kKCcuaG91cnNlbGVjdCcpLnZhbCgpLCAxMCk7XHJcbiAgICAgICAgICAgIHZhciBtaW51dGUgPSBwYXJzZUludChjYWwuZmluZCgnLm1pbnV0ZXNlbGVjdCcpLnZhbCgpLCAxMCk7XHJcbiAgICAgICAgICAgIGlmIChpc05hTihtaW51dGUpKSB7XHJcbiAgICAgICAgICAgICAgICBtaW51dGUgPSBwYXJzZUludChjYWwuZmluZCgnLm1pbnV0ZXNlbGVjdCBvcHRpb246bGFzdCcpLnZhbCgpLCAxMCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdmFyIHNlY29uZCA9IHRoaXMudGltZVBpY2tlclNlY29uZHMgPyBwYXJzZUludChjYWwuZmluZCgnLnNlY29uZHNlbGVjdCcpLnZhbCgpLCAxMCkgOiAwO1xyXG5cclxuICAgICAgICAgICAgaWYgKCF0aGlzLnRpbWVQaWNrZXIyNEhvdXIpIHtcclxuICAgICAgICAgICAgICAgIHZhciBhbXBtID0gY2FsLmZpbmQoJy5hbXBtc2VsZWN0JykudmFsKCk7XHJcbiAgICAgICAgICAgICAgICBpZiAoYW1wbSA9PT0gJ1BNJyAmJiBob3VyIDwgMTIpXHJcbiAgICAgICAgICAgICAgICAgICAgaG91ciArPSAxMjtcclxuICAgICAgICAgICAgICAgIGlmIChhbXBtID09PSAnQU0nICYmIGhvdXIgPT09IDEyKVxyXG4gICAgICAgICAgICAgICAgICAgIGhvdXIgPSAwO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAoaXNMZWZ0KSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgc3RhcnQgPSB0aGlzLnN0YXJ0RGF0ZS5jbG9uZSgpO1xyXG4gICAgICAgICAgICAgICAgc3RhcnQuaG91cihob3VyKTtcclxuICAgICAgICAgICAgICAgIHN0YXJ0Lm1pbnV0ZShtaW51dGUpO1xyXG4gICAgICAgICAgICAgICAgc3RhcnQuc2Vjb25kKHNlY29uZCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXJ0RGF0ZShzdGFydCk7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5zaW5nbGVEYXRlUGlja2VyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5lbmREYXRlID0gdGhpcy5zdGFydERhdGUuY2xvbmUoKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5lbmREYXRlICYmIHRoaXMuZW5kRGF0ZS5mb3JtYXQoJ1lZWVktTU0tREQnKSA9PSBzdGFydC5mb3JtYXQoJ1lZWVktTU0tREQnKSAmJiB0aGlzLmVuZERhdGUuaXNCZWZvcmUoc3RhcnQpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRFbmREYXRlKHN0YXJ0LmNsb25lKCkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuZW5kRGF0ZSkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGVuZCA9IHRoaXMuZW5kRGF0ZS5jbG9uZSgpO1xyXG4gICAgICAgICAgICAgICAgZW5kLmhvdXIoaG91cik7XHJcbiAgICAgICAgICAgICAgICBlbmQubWludXRlKG1pbnV0ZSk7XHJcbiAgICAgICAgICAgICAgICBlbmQuc2Vjb25kKHNlY29uZCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNldEVuZERhdGUoZW5kKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLy91cGRhdGUgdGhlIGNhbGVuZGFycyBzbyBhbGwgY2xpY2thYmxlIGRhdGVzIHJlZmxlY3QgdGhlIG5ldyB0aW1lIGNvbXBvbmVudFxyXG4gICAgICAgICAgICB0aGlzLnVwZGF0ZUNhbGVuZGFycygpO1xyXG5cclxuICAgICAgICAgICAgLy91cGRhdGUgdGhlIGZvcm0gaW5wdXRzIGFib3ZlIHRoZSBjYWxlbmRhcnMgd2l0aCB0aGUgbmV3IHRpbWVcclxuICAgICAgICAgICAgdGhpcy51cGRhdGVGb3JtSW5wdXRzKCk7XHJcblxyXG4gICAgICAgICAgICAvL3JlLXJlbmRlciB0aGUgdGltZSBwaWNrZXJzIGJlY2F1c2UgY2hhbmdpbmcgb25lIHNlbGVjdGlvbiBjYW4gYWZmZWN0IHdoYXQncyBlbmFibGVkIGluIGFub3RoZXJcclxuICAgICAgICAgICAgdGhpcy5yZW5kZXJUaW1lUGlja2VyKCdsZWZ0Jyk7XHJcbiAgICAgICAgICAgIHRoaXMucmVuZGVyVGltZVBpY2tlcigncmlnaHQnKTtcclxuXHJcbiAgICAgICAgfSxcclxuXHJcbiAgICAgICAgZWxlbWVudENoYW5nZWQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICBpZiAoIXRoaXMuZWxlbWVudC5pcygnaW5wdXQnKSkgcmV0dXJuO1xyXG4gICAgICAgICAgICBpZiAoIXRoaXMuZWxlbWVudC52YWwoKS5sZW5ndGgpIHJldHVybjtcclxuXHJcbiAgICAgICAgICAgIHZhciBkYXRlU3RyaW5nID0gdGhpcy5lbGVtZW50LnZhbCgpLnNwbGl0KHRoaXMubG9jYWxlLnNlcGFyYXRvciksXHJcbiAgICAgICAgICAgICAgICBzdGFydCA9IG51bGwsXHJcbiAgICAgICAgICAgICAgICBlbmQgPSBudWxsO1xyXG5cclxuICAgICAgICAgICAgaWYgKGRhdGVTdHJpbmcubGVuZ3RoID09PSAyKSB7XHJcbiAgICAgICAgICAgICAgICBzdGFydCA9IG1vbWVudChkYXRlU3RyaW5nWzBdLCB0aGlzLmxvY2FsZS5mb3JtYXQpO1xyXG4gICAgICAgICAgICAgICAgZW5kID0gbW9tZW50KGRhdGVTdHJpbmdbMV0sIHRoaXMubG9jYWxlLmZvcm1hdCk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmICh0aGlzLnNpbmdsZURhdGVQaWNrZXIgfHwgc3RhcnQgPT09IG51bGwgfHwgZW5kID09PSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICBzdGFydCA9IG1vbWVudCh0aGlzLmVsZW1lbnQudmFsKCksIHRoaXMubG9jYWxlLmZvcm1hdCk7XHJcbiAgICAgICAgICAgICAgICBlbmQgPSBzdGFydDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaWYgKCFzdGFydC5pc1ZhbGlkKCkgfHwgIWVuZC5pc1ZhbGlkKCkpIHJldHVybjtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuc2V0U3RhcnREYXRlKHN0YXJ0KTtcclxuICAgICAgICAgICAgdGhpcy5zZXRFbmREYXRlKGVuZCk7XHJcbiAgICAgICAgICAgIHRoaXMudXBkYXRlVmlldygpO1xyXG4gICAgICAgIH0sXHJcblxyXG4gICAgICAgIGtleWRvd246IGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICAgICAgLy9oaWRlIG9uIHRhYiBvciBlbnRlclxyXG4gICAgICAgICAgICBpZiAoKGUua2V5Q29kZSA9PT0gOSkgfHwgKGUua2V5Q29kZSA9PT0gMTMpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmhpZGUoKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLy9oaWRlIG9uIGVzYyBhbmQgcHJldmVudCBwcm9wYWdhdGlvblxyXG4gICAgICAgICAgICBpZiAoZS5rZXlDb2RlID09PSAyNykge1xyXG4gICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcclxuXHJcbiAgICAgICAgICAgICAgICB0aGlzLmhpZGUoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcblxyXG4gICAgICAgIHVwZGF0ZUVsZW1lbnQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5lbGVtZW50LmlzKCdpbnB1dCcpICYmIHRoaXMuYXV0b1VwZGF0ZUlucHV0KSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgbmV3VmFsdWUgPSB0aGlzLnN0YXJ0RGF0ZS5mb3JtYXQodGhpcy5sb2NhbGUuZm9ybWF0KTtcclxuICAgICAgICAgICAgICAgIGlmICghdGhpcy5zaW5nbGVEYXRlUGlja2VyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbmV3VmFsdWUgKz0gdGhpcy5sb2NhbGUuc2VwYXJhdG9yICsgdGhpcy5lbmREYXRlLmZvcm1hdCh0aGlzLmxvY2FsZS5mb3JtYXQpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKG5ld1ZhbHVlICE9PSB0aGlzLmVsZW1lbnQudmFsKCkpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmVsZW1lbnQudmFsKG5ld1ZhbHVlKS50cmlnZ2VyKCdjaGFuZ2UnKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcblxyXG4gICAgICAgIHJlbW92ZTogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY29udGFpbmVyLnJlbW92ZSgpO1xyXG4gICAgICAgICAgICB0aGlzLmVsZW1lbnQub2ZmKCcuZGF0ZXJhbmdlcGlja2VyJyk7XHJcbiAgICAgICAgICAgIHRoaXMuZWxlbWVudC5yZW1vdmVEYXRhKCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH07XHJcblxyXG4gICAgJC5mbi5kYXRlcmFuZ2VwaWNrZXIgPSBmdW5jdGlvbihvcHRpb25zLCBjYWxsYmFjaykge1xyXG4gICAgICAgIHZhciBpbXBsZW1lbnRPcHRpb25zID0gJC5leHRlbmQodHJ1ZSwge30sICQuZm4uZGF0ZXJhbmdlcGlja2VyLmRlZmF1bHRPcHRpb25zLCBvcHRpb25zKTtcclxuICAgICAgICB0aGlzLmVhY2goZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgIHZhciBlbCA9ICQodGhpcyk7XHJcbiAgICAgICAgICAgIGlmIChlbC5kYXRhKCdkYXRlcmFuZ2VwaWNrZXInKSlcclxuICAgICAgICAgICAgICAgIGVsLmRhdGEoJ2RhdGVyYW5nZXBpY2tlcicpLnJlbW92ZSgpO1xyXG4gICAgICAgICAgICBlbC5kYXRhKCdkYXRlcmFuZ2VwaWNrZXInLCBuZXcgRGF0ZVJhbmdlUGlja2VyKGVsLCBpbXBsZW1lbnRPcHRpb25zLCBjYWxsYmFjaykpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfTtcclxuXHJcbiAgICByZXR1cm4gRGF0ZVJhbmdlUGlja2VyO1xyXG5cclxufSkpO1xyXG4iXX0=
